
&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
//Заполняем массив отрабатывемых типов 
    поляРасшифровки = Новый Структура;
    поляРасшифровки.Вставить("Супергруппа");
	поляРасшифровки.Вставить("КоленоМаршрута");

	списокПолей=новый СписокЗначений;
	списокПолей.Добавить("Супергруппа");
	списокПолей.Добавить("КоленоМаршрута");
	
//Получаем значение, по которому произвели двойной щелчек 
    ПолучитьРасшифровкуНаСервере(Расшифровка, поляРасшифровки); //Партнер, Контрагент или Организация.

	
	
	списокПолей=новый СписокЗначений;
	списокПолей.Добавить("Супергруппа");
	списокПолей.Добавить("КоленоМаршрута");
//	КоллекцияЭлементов = ПолучитьИзВременногоХранилища(ДанныеРасшифровки).Элементы;
	РасшГруппы=ВыбратьЗначенияГруппы(списокПолей,Расшифровка);
	
	
    Если поляРасшифровки.Супергруппа = Неопределено Тогда Возврат; КонецЕсли;
    СтандартнаяОбработка = Ложь;
	
// Прописываем доступные действия. Если какое то действие не указать, оно не будет доступно пользователю

    ОбрРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(Отчет));

    ВыпДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Нет;
    ПараметрВыполненногоДействия = Неопределено;
    ДоступДействия = Новый Массив;
    //ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Отфильтровать);
	ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Оформить);
	ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать);
	ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Сгруппировать);
	ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить);
	
    ДопПункты = Новый СписокЗначений;
    ДопПункты.Добавить( 1, "Внести информацию о доставке");
    ДопПункты.Добавить( 3, "Регестрация Супергруппы");
	ДопПункты.Добавить( 5, "Открыть Супергруппу="""+поляРасшифровки.Супергруппа+"""");
//Меню 
    ОбрРасшифровки.ВыбратьДействие(Расшифровка, ВыпДействие, ПараметрВыполненногоДействия, ДоступДействия, ДопПункты);
	
    Если ВыпДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Нет Тогда
    ИначеЕсли ВыпДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда

        ОткрытьЗначение(ПараметрВыполненногоДействия);
    ИначеЕсли ВыпДействие = 5 Тогда 
		фрм=ПолучитьФорму("Справочник.Мегаордера.Форма.ФормаМаршрута",Новый Структура("Ключ",поляРасшифровки.Супергруппа));
		фрм.Открыть()
	ИначеЕсли ВыпДействие = 1 Тогда 		
		структура_Параметров=Новый Структура();
		
		структура_Супергруппа=Новый Структура();
		структура_Супергруппа.Вставить("Супергруппа"		,поляРасшифровки.Супергруппа);
		структура_Супергруппа.Вставить("НомерКолена"		,поляРасшифровки.КоленоМаршрута);
		структура_Параметров.Вставить("УстанавливаемФакт",структура_Супергруппа);
		
		ОткрытьФорму("Документ.ЗаполнитьКоленоМаршрута.Форма.ФормаДокументаУстанавливаемФакт",структура_Параметров,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
//		Форма_ЗаполнитьКоленоМаршрута=ПолучитьФорму("Документ.ЗаполнитьКоленоМаршрута.Форма.ФормаДокументаУстанавливаемФакт",структура_Параметров,ЭтаФорма,,ВариантОткрытияОкна.ОтдельноеОкно);
//		Если Форма_ЗаполнитьКоленоМаршрута<> Неопределено Тогда
//			Форма_ЗаполнитьКоленоМаршрута.Открыть();
//		КонецЕсли;
		
	ИначеЕсли ВыпДействие = 3 Тогда 
		структура_Параметров=Новый Структура();
		
		структура_Супергруппа=Новый Структура();
		структура_Супергруппа.Вставить("Супергруппа"		,поляРасшифровки.Супергруппа);
		структура_Супергруппа.Вставить("НомерКолена"		,поляРасшифровки.КоленоМаршрута);
		структура_Параметров.Вставить("УстанавливаемФакт",структура_Супергруппа);

		ОткрытьФорму("Документ.РегистрацияСупперГруппы.Форма.ФормаДокумента",структура_Параметров,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);		
		
//		Форма_ЗаполнитьКоленоМаршрута=ПолучитьФорму("Документ.РегистрацияСупперГруппы.Форма.ФормаДокумента",структура_Параметров,ЭтаФорма,,ВариантОткрытияОкна.ОтдельноеОкно);
//		Если Форма_ЗаполнитьКоленоМаршрута<> Неопределено Тогда
//			Форма_ЗаполнитьКоленоМаршрута.Открыть();
//		КонецЕсли;
		
		
	КонецЕсли;
КонецПроцедуры



&НаСервере
Функция ПолучитьДанныеРасшифровки(Расшифровка, СтруктураДанных)

      Данные_Расшифровки = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);

      Если Данные_Расшифровки <> Неопределено Тогда
            Для каждого ЭлементДанных Из СтруктураДанных Цикл
                  Родитель = Данные_Расшифровки.Элементы[Расшифровка];
                  Пока Истина Цикл
                        МассивРодителей = Родитель.ПолучитьРодителей();
                        Если МассивРодителей.Количество() = 0 Тогда
                              Прервать;
                        КонецЕсли;
                        Родитель = Родитель.ПолучитьРодителей()[0];
                        Если ТипЗнч(Родитель) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
                              Поле = Родитель.ПолучитьПоля().Найти(ЭлементДанных.Значение);
                              Если Поле <> Неопределено Тогда
                                    СтруктураДанных.Вставить(ЭлементДанных.Ключ, Поле.Значение);
                                    Прервать;
                              КонецЕсли;
                        КонецЕсли;
                  КонецЦикла;
            КонецЦикла;
      КонецЕсли;

      Возврат СтруктураДанных;

КонецФункции // ПолучитьДанныеРасшифровки()
  
  
//&НаСервере
//Функция ПолучитьРасшифровкуНаСервере(Расшифровка, МассивИменРасшифровки, ЭтоГруппа = Ложь)
//    Данные = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
//    Поля = Данные.Элементы.Получить(Расшифровка).ПолучитьПоля();
//    Для Каждого ИмяРасшифровки Из МассивИменРасшифровки Цикл
//        ПолеНоменклатура = Поля.Найти(ИмяРасшифровки);
//        Если Не ПолеНоменклатура = Неопределено Тогда Прервать; КонецЕсли;
//    КонецЦикла;

//    Если ПолеНоменклатура = Неопределено Тогда
//        Возврат Неопределено;
//    Иначе
//        ЭтоГруппа = ПолеНоменклатура.Значение.ЭтоГруппа;
//        Возврат ПолеНоменклатура.Значение;
//    КонецЕсли;
//КонецФункции

&НаСервере
Процедура  ПолучитьРасшифровкуНаСервере(Расшифровка,поляРасшифровки)
	Данные = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	Поля = Данные.Элементы.Получить(Расшифровка).ПолучитьПоля();
	Для Каждого ИмяРасшифровки Из поляРасшифровки Цикл
		ПолеНоменкл = Поля.Найти(ИмяРасшифровки.Ключ);
		Если ПолеНоменкл <> Неопределено Тогда 
			поляРасшифровки[ИмяРасшифровки.Ключ]= ПолеНоменкл.Значение;
		КонецЕсли;
	КонецЦикла;
	//Если ПолеНоменкл = Неопределено Тогда  Возврат Неопределено; КонецЕсли;

	
КонецПроцедуры



&НаСервере
Функция ВыбратьЗначенияГруппы(списокПолей,Расшифровка)
	КоллекцияЭлементов = ПолучитьИзВременногоХранилища(ДанныеРасшифровки).Элементы;
	Для каждого ЭлМассив из  КоллекцияЭлементов[Расшифровка].ПолучитьРодителей() цикл
        ВыбратьЗначенияГруппы(списокПолей, ЭлМассив.Идентификатор);
        Коллекция = КоллекцияЭлементов[ЭлМассив.Идентификатор];
        Если ТипЗнч(Коллекция) = Тип("ЭлементРасшифровкиКомпоновкиДанныхГруппировка") тогда
           // надо разобраться что делать 
        Иначе
            Для каждого Эл из Коллекция.ПолучитьПоля() Цикл
                Если ТипЗнч(Эл) = Тип("ЗначениеПоляРасшифровкиКомпоновкиДанных") Тогда
                    списокПолей.Вставить(СтрЗаменить(Эл.Поле,".",""), Эл.Значение);
                КонецЕсли;
            КонецЦикла;
        КонецЕсли;
    КонецЦикла;
КонецФункции




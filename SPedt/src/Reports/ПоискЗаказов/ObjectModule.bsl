
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	ОтборПоПокупке 	   = ПолучитьЗначениеОтбора(КомпоновщикНастроек,  "Покупка");
	отборПоКоробке 	   = ПолучитьЗначениеОтбора(КомпоновщикНастроек,  "Коробка");
	отборПоОрагнизатор = ПолучитьЗначениеОтбора(КомпоновщикНастроек,  "Орагнизатор");
	отборПоУчастнику   = ПолучитьЗначениеОтбора(КомпоновщикНастроек,  "Участник");
	отборПоПосылке   = ПолучитьЗначениеОтбора(КомпоновщикНастроек,  "ПОсылка");
	
	
	Запрос = новый Запрос;
	Запрос.МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;
	КоробкиТранзитныхЗаказов( Запрос, ОтборПоПокупке, ОтборПоУчастнику, отборПоПосылке);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказыВКоробках.Коробка КАК Коробка
		|ИЗ
		|	ЗаказыВКоробках КАК ЗаказыВКоробках";
	
	РезультатЗапроса = Запрос.Выполнить();

	КоробкиСЗаказами = новый СписокЗначений;
	Если не РезультатЗапроса.Пустой() Тогда
		КоробкиСЗаказами.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Коробка"));
		КомпоновкаДанныхПараметр  = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КоробкиСЗаказами");
		Если НЕ(КомпоновкаДанныхПараметр = Неопределено) Тогда
			КомпоновкаДанныхПараметр.Значение = КоробкиСЗаказами;
			КомпоновкаДанныхПараметр.Использование = Истина;
		КонецЕсли;		
	КонецЕсли
	
КонецПроцедуры



Функция ПолучитьЗначениеОтбора(КомпоновщикНастроек, ПолеОтбора)
	 СписокЗНаченийОтбора = новый СписокЗначений;

	Для каждого элем из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если элем.ЛевоеЗначение <> новый ПолеКомпоновкиДанных(ПолеОтбора) Тогда Продолжить; КонецЕсли;
		
		
		Если ЗначениеЗаполнено(элем.ИдентификаторПользовательскойНастройки) Тогда
			ползНастройка = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(элем.ИдентификаторПользовательскойНастройки);
			Если ползНастройка.Использование Тогда
				Если ТипЗнч(ползНастройка.ПравоеЗначение) = Тип("СписокЗначений") 	Тогда
					СписокЗНаченийОтбора = ползНастройка.ПравоеЗначение;
				Иначе	
					СписокЗНаченийОтбора.добавить(ползНастройка.ПравоеЗначение);
				КонецЕсли;
			КонецЕсли	
		ИначеЕсли	элем.Использование Тогда
			Если ТипЗнч(элем.ПравоеЗначение) = Тип("СписокЗначений") 	Тогда
				СписокЗНаченийОтбора = ползНастройка.ПравоеЗначение;
			Иначе	
				СписокЗНаченийОтбора.добавить(ползНастройка.ПравоеЗначение);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	Возврат СписокЗНаченийОтбора;
	
КонецФункции	




Функция КоробкиТранзитныхЗаказов( Запрос, ОтборПоПокупке, ОтборПоУчастнику, отборПоПосылке)
	ЕстьОтбор = (ЗначениеЗаполнено(ОтборПоПокупке) или ЗначениеЗаполнено(ОтборПоУчастнику) или ЗначениеЗаполнено(отборПоПосылке));
	
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КоробкиСостав.Ссылка КАК Коробка
		|ПОМЕСТИТЬ ЗаказыВКоробках
		|ИЗ
		|	Справочник.Коробки.Состав КАК КоробкиСостав
		|ГДЕ
		|	(&ОтборПоПокупке
		|	И &ОтборПоУчастнику) или &отборПоПосылке
		|
		|СГРУППИРОВАТЬ ПО
		|	КоробкиСостав.Ссылка ";
	
	Если ЗначениеЗаполнено(отборПоПосылке) Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&отборПоПосылке", "КоробкиСостав.Покупка В(&отборПоПосылке)");
		Запрос.УстановитьПараметр("отборПоПосылке", отборПоПосылке);
	Иначе	
		Запрос.УстановитьПараметр("отборПоПосылке", ЕстьОтбор);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ОтборПоПокупке) Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоПокупке", "КоробкиСостав.Покупка В(&ОтборПоПокупке)");
		Запрос.УстановитьПараметр("ОтборПоПокупке", ОтборПоПокупке);
	Иначе	
		Запрос.УстановитьПараметр("ОтборПоПокупке", ЕстьОтбор);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ОтборПоУчастнику) Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоУчастнику", "КоробкиСостав.Участник В(&ОтборПоУчастнику)");
		Запрос.УстановитьПараметр("ОтборПоУчастнику", ОтборПоУчастнику);
	Иначе	
		Запрос.УстановитьПараметр("ОтборПоУчастнику", ЕстьОтбор);
	КонецЕсли;	
	РезультатЗапроса = Запрос.Выполнить();
	

	
КонецФункции	
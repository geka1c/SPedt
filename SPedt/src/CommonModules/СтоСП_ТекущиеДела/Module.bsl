// Заполняет список текущих дел пользователя.
//
// Параметры:
//  ТекущиеДела - ТаблицаЗначений - таблица с колонками:
//   * Идентификатор           - Строка - внутренний идентификатор дела, используемый механизмом "Текущие дела".
//   * ЕстьДела                - Булево - если Истина, дело выводится в списке текущих дел пользователя.
//   * Важное                  - Булево - если Истина, дело будет выделено красным цветом.
//   * Представление           - Строка - представление дела, выводимое пользователю.
//   * Количество              - Число  - количественный показатель дела, выводится в строке заголовка дела.
//   * Форма                   - Строка - полный путь к форме, которую необходимо открыть при нажатии на гиперссылку
//                                        дела на панели "Текущие дела".
//   * ПараметрыФормы          - Структура - параметры, с которыми нужно открывать форму показателя.
//   * Владелец                - Строка, объект метаданных - строковый идентификатор дела, которое будет владельцем для текущего
//                               или объект метаданных подсистема.
//   * Подсказка               - Строка - текст подсказки.
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	//Если Не ПравоДоступа("Редактирование", Метаданные.Документы._ДемоЗаказПокупателя) Тогда
	//    Возврат;
	//КонецЕсли;	
	
    СтруктураДел = Получитьданные();
	
	ИдентификаторОбменССайтом = "ЗаказовНаТранзите";
    Дело = ТекущиеДела.Добавить();
    Дело.Идентификатор  = ИдентификаторОбменССайтом;
    Дело.ЕстьДела       = Истина;
    Дело.Представление  = СтруктураДел.ЗаказовНаТранзите;
    //Дело.Количество     = СтруктураДел.ДатаВыгрузки;
	//Дело.Форма          = "Отчет.ОшибкиОбмена100СП.Форма.ФормаДляВыгрузки";
	//Дело.ПараметрыФормы = Новый Структура("Отбор", Новый Структура("СтатусЗаказа", СписокОтбора));
	Дело.Владелец       = Метаданные.Подсистемы.ОбменДаными;
	
	
	
	ИдентификаторОбменССайтом = "ОбменССайтом";
    Дело = ТекущиеДела.Добавить();
    Дело.Идентификатор  = ИдентификаторОбменССайтом;
    Дело.ЕстьДела       = Истина;
    Дело.Представление  = "Последняя выгрузка - "+ СтруктураДел.ДатаВыгрузки;
    //Дело.Количество     = СтруктураДел.ДатаВыгрузки;
	Дело.Форма          = "Отчет.ОшибкиОбмена100СП.Форма.ФормаДляВыгрузки";
	//Дело.ПараметрыФормы = Новый Структура("Отбор", Новый Структура("СтатусЗаказа", СписокОтбора));
	Дело.Владелец       = Метаданные.Подсистемы.ОбменДаными;

	ИдентификаторОбменССайтом = "ОбменССайтомСледующий";
    Дело = ТекущиеДела.Добавить();
    Дело.Идентификатор  = ИдентификаторОбменССайтом;
    Дело.ЕстьДела       = Истина;
    Если СтруктураДел.ОбменВключен Тогда
    	Дело.Представление  = "Следующая выгрузка - "+ Формат(СтруктураДел.ДатаВыгрузкиСледующая, "ДФ=ЧЧ:мм;");
    Иначе
    	Дело.Представление  = "Обмен отключен";
    КонецЕсли;		
    //Дело.Количество     = СтруктураДел.ДатаВыгрузки;
	Дело.Форма          = "Отчет.ОшибкиОбмена100СП.Форма.ФормаДляВыгрузки";
	//Дело.ПараметрыФормы = Новый Структура("Отбор", Новый Структура("СтатусЗаказа", СписокОтбора));
	Дело.Владелец       = Метаданные.Подсистемы.ОбменДаными;
	
	
	    ИдентификаторОшибкиОбмена = "ОшибкиОбмена";
		Дело = ТекущиеДела.Добавить();
		Дело.Идентификатор  = ИдентификаторОшибкиОбмена;
		Дело.ЕстьДела       = СтруктураДел.ВсегоОшибок > 0;
		Дело.Важное         = Истина;
		Дело.Представление  = НСтр("ru = 'Ошибки обмена'");
		Дело.Количество     = СтруктураДел.ВсегоОшибок;
		//Дело.Форма          = "Отчет.ОшибкиОбмена100СП.Форма";		
		Дело.Форма          = "Обработка.ОшибкиОбмена.Форма";		
		Дело.ПараметрыФормы = Новый Структура("СформироватьПриОткрытии", истина);
		Дело.Владелец       = Метаданные.Подсистемы.ОбменДаными;
		
	
		Для каждого стр из СтруктураДел.СтруктураОшибок Цикл
			
			Дело = ТекущиеДела.Добавить();
			Дело.Идентификатор  = СтрЗаменить(стр.Ключ," ","");
			Дело.ЕстьДела       = стр.Значение > 0;
			Дело.Представление  = стр.Ключ;
			Дело.Количество     = стр.Значение;
			Дело.Владелец       = ИдентификаторОшибкиОбмена;	
		КонецЦикла;
КонецПроцедуры


Функция Получитьданные() Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Выгрузка_100СП.Ссылка КАК ВыгрузкаНаСайт
		|ИЗ
		|	Документ.Выгрузка_100СП КАК Выгрузка_100СП
		|ГДЕ
		|	Выгрузка_100СП.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Выгрузка_100СП.Дата УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(Обмен100СПрн_ОшибкиОстатки.КоличествоНеИсправленныхОстаток) КАК КоличествоОшибок,
		|	Обмен100СПрн_ОшибкиОстатки.типОбмена КАК типОбмена
		|ИЗ
		|	РегистрНакопления.Обмен100СПрн_Ошибки.Остатки КАК Обмен100СПрн_ОшибкиОстатки
		|ГДЕ
		|	Обмен100СПрн_ОшибкиОстатки.КоличествоНеИсправленныхОстаток > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	Обмен100СПрн_ОшибкиОстатки.типОбмена
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Обмен100СПрнОстатки.типОбмена КАК типОбмена,
		|	СУММА(Обмен100СПрнОстатки.КоличествоНеОтправленыхОстаток) КАК КоличествоНеОтправленыхОстаток
		|ИЗ
		|	РегистрНакопления.Обмен100СПрн.Остатки КАК Обмен100СПрнОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Обмен100СПрнОстатки.типОбмена";
	
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Выгрузка = РезультатЗапроса[0].Выгрузить();
	Если Выгрузка.Количество()>0 Тогда
		ПоследнийДокВыгрузки = Выгрузка[0].ВыгрузкаНаСайт;
	КонецЕсли;
	Если ЗначениеЗаполнено(ПоследнийДокВыгрузки) Тогда
		ПоследнийОбмен = ПоследнийДокВыгрузки.Дата;
	Иначе	
		ПоследнийОбмен = Дата(1,1,1);
	Конецесли;	
	ОтсрочкаВыгрузки = Константы.ОтсрочкаВыгрузки.Получить();
	задание = РегламентныеЗадания.НайтиПредопределенное("ВыгрузкаНаСайт");
	;	
	
	ОтсрочкаВыгрузки = Макс(ОтсрочкаВыгрузки, ТекущаяДата());
	ДатаВыгрузкиСледующая = ПоследнийОбмен + задание.Расписание.ПериодПовтораВТечениеДня;
	Пока ДатаВыгрузкиСледующая < ОтсрочкаВыгрузки Цикл
		ДатаВыгрузкиСледующая = ДатаВыгрузкиСледующая + задание.Расписание.ПериодПовтораВТечениеДня;
	КонецЦикла;	
	
	Выгрузка = РезультатЗапроса[1].Выгрузить();
	СтруктураОшибок = Новый Соответствие;
	ВсегоОшибок = 0;
	Для каждого стр из Выгрузка Цикл
		СтруктураОшибок.Вставить(стр.ТипОбмена,стр.КоличествоОшибок);
		ВсегоОшибок = ВсегоОшибок + стр.КоличествоОшибок;
	КОнецЦикла;	
	
	ЗаказовНаТранзите = константы.ЗаказовНаТранзите.Получить();

	Возврат новый Структура("ДатаВыгрузки, ДатаВыгрузкиСледующая, ВсегоОшибок, СтруктураОшибок, ЗаказовНаТранзите, обменВключен",ПоследнийОбмен,ДатаВыгрузкиСледующая, ВсегоОшибок,СтруктураОшибок, ЗаказовНаТранзите, Задание.Использование);
	
КонецФункции



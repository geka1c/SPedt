Функция СтатусыЗаказов(массивЗаказов,ДатаДокумента) Экспорт
	
	учетныеДанные		= УчетныеДанные();
	ОтветыПоПериодам = Новый СписокЗначений;
	
	ОтправленныеДанные	= ПолучитьXMLСтатусыЗаказов(массивЗаказов, учетныеДанные,НачалоМесяца(ДатаДокумента)-1);
	ответ = ВыполнитьPostЗапрос(ОтправленныеДанные, "status_report_h.php",учетныеДанные);
	СтрокаОтвета  = ответ.ПолучитьТелоКакСтроку();
	ОтветыПоПериодам.Добавить(СтрокаОтвета);
	
	ОтправленныеДанные	= ПолучитьXMLСтатусыЗаказов(массивЗаказов, учетныеДанные,ДатаДокумента);
	ответ = ВыполнитьPostЗапрос(ОтправленныеДанные, "status_report_h.php",учетныеДанные);
	СтрокаОтвета  = ответ.ПолучитьТелоКакСтроку();
	ОтветыПоПериодам.Добавить(СтрокаОтвета);
	
	ОтправленныеДанные	= ПолучитьXMLСтатусыЗаказов(массивЗаказов, учетныеДанные,КонецМесяца(ДатаДокумента)+1);
	ответ = ВыполнитьPostЗапрос(ОтправленныеДанные, "status_report_h.php",учетныеДанные);
	СтрокаОтвета  = ответ.ПолучитьТелоКакСтроку();
	ОтветыПоПериодам.Добавить(СтрокаОтвета);
	
	
	Если Ответ.КодСостояния = 200 Тогда
		Возврат РазборОтветаСтатусыЗаказов(ОтветыПоПериодам);
	КонецЕсли;
	ТекстСообщения = 	"Код ответа = "+Ответ.КодСостояния+Символы.ПС+
						СтрокаОтвета;	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);					
	Возврат Неопределено;
КонецФункции	

Функция РазборОтветаСтатусыЗаказов(ОтветыПоПериодам)

	пространствоИмен		= "http://www.integration.cdek.ru";

	Тип_distributors		= ФабрикаXDTO.Тип(пространствоИмен, "distributors");
	
	тэг_distributors		= "<distributors xmlns=""http://www.integration.cdek.ru""   xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">";

	
	РазборПоПериодам = Новый СписокЗначений;
	Для Каждого элем из ОтветыПоПериодам Цикл
		ПолученныеДанные		= СтрЗаменить(элем.Значение, "<?xml version=""1.0"" encoding=""UTF-8""?>", "<?xml version=""1.0"" encoding=""UTF-8""?>" + тэг_distributors);
	
		ПолученныеДанные		=   ПолученныеДанные +"</distributors>"; 
		
		
		ЧтениеXML 				= Новый ЧтениеXML;
		ЧтениеXML.УстановитьСтроку(ПолученныеДанные);
		Объект_distributors		= ФабрикаXDTO.ПрочитатьXML(ЧтениеXML,Тип_distributors);
		РазборПоПериодам.Добавить(Объект_distributors);
	КонецЦикла;		
//	Если Объект_distributors.auth.result	= "ok" Тогда
//		авторизацияВыполнена	= истина;
//	КонецЕсли;
//	                                                                                      
//	Если Объект_distributors.deliveryGroups						<> Неопределено Тогда
//		ТЗ	= СтоСПОбмен_Общий.ТЗ_поСпискуXDTO(Объект_distributors.deliveryGroups.deliveryGroup);
//		стр_Результат.Вставить("deliveryGroups",ТЗ);
//	ИначеЕсли Объект_distributors.dataByDates.deliveryGroups	<> Неопределено Тогда
//		ТЗ	= СтоСПОбмен_Общий.ТЗ_поСпискуXDTO(Объект_distributors.dataByDates.deliveryGroups.deliveryGroup);
//		стр_Результат.Вставить("deliveryGroups",ТЗ);
//	КонецЕсли;
//
//	стр_Результат.Вставить("авторизацияВыполнена",авторизацияВыполнена);
//	Возврат стр_Результат;
	
	возврат РазборПоПериодам;
КонецФункции	


Функция ПолучитьXMLСтатусыЗаказов(СписокЗаказов, учетныеДанные, ДатаПериода)
	
	ЗаписьXML=новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку("UTF-8");
	ЗаписьXML.ЗаписатьНачалоЭлемента("StatusReport");
	ЗаписьXML.ЗаписатьАтрибут("Account",		учетныеДанные.Аккаунт);
	ЗаписьXML.ЗаписатьАтрибут("Date",			учетныеДанные.ДатаОтправления);
	ЗаписьXML.ЗаписатьАтрибут("Secure",			учетныеДанные.secure);
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("ChangePeriod");
		ЗаписьXML.ЗаписатьАтрибут("DateFirst",	ПолучитьДатуUTC(НачалоМесяца(ДатаПериода)));
		ЗаписьXML.ЗаписатьАтрибут("DateLast",	ПолучитьДатуUTC(КонецМесяца(ДатаПериода)));
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
	//ЗаписьXML.ЗаписатьАтрибут("ShowHistory",	"1");
	Для каждого элем из СписокЗаказов Цикл
		ЗаписьXML.ЗаписатьНачалоЭлемента("Order");
		ЗаписьXML.ЗаписатьАтрибут("DispatchNumber",элем);
		ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЦикла;
	ЗаписьXML.ЗаписатьКонецЭлемента();
	стр =	ЗаписьXML.Закрыть();
	Возврат стр;
	
КонецФункции	


Функция ВыполнитьPostЗапрос(ОтправленныеДанные, Скрипт, учетныеДанные)  
	

	ЗаголовокHTTP 		= Новый Соответствие();
	ЗаголовокHTTP.Вставить("Content-Type", "application/x-www-form-urlencoded");
	
	СтрокаXML			= КодироватьСтроку(ОтправленныеДанные, 		СпособКодированияСтроки.КодировкаURL);
		
	HTTPЗапрос 			= Новый HTTPЗапрос(Скрипт, 	ЗаголовокHTTP);
	HTTPЗапрос.УстановитьТелоИзСтроки("xml_request=" + СтрокаXML, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	НТТР 				= Новый HTTPСоединение(учетныеДанные.Сервер);
	Попытка
		Ответ = НТТР.ОтправитьДляОбработки(HTTPЗапрос);
		Возврат Ответ;
    Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Неудачная попытка соединения: " + ОписаниеОшибки());
        Возврат Неопределено;
    КонецПопытки;
КонецФункции




Функция УчетныеДанные()
	ПВ_СДЭК = Справочники.ТочкиРаздачи.НайтиПоКоду("0083");
	

	Аккаунт			= 	ПВ_СДЭК.АккаунтДляОбменаСТК;
	secure_password	= 	ПВ_СДЭК.ПарольДляОбменаСТК;
	текДата			=	ТекущаяДата();
	ДатаОтправления	= 	ПолучитьДатуUTC(текДата);
	secure 			= 	ПолучитьСекретныйКод(secure_password,текДата) ;

	Результат 		=  	новый Структура;
	Результат.Вставить("Аккаунт", 			Аккаунт);
	Результат.Вставить("Пароль", 			secure_password);
	Результат.Вставить("ДатаОтправления", 	ДатаОтправления);
	Результат.Вставить("secure", 			secure);
	Результат.Вставить("Сервер", 			ПВ_СДЭК.СерверТК);
	Результат.Вставить("Порт", 				ПВ_СДЭК.ПортТК);
	
	возврат Результат;

КонецФункции




Функция ПолучитьДатуUTC(Дата)
	Возврат Формат(Дата, "ДФ=yyyy-MM-dd");
КонецФункции	


Функция ПолучитьСекретныйКод(secure_password,Дата)
	х=новый ХешированиеДанных(ХешФункция.MD5);
	х.Добавить(ПолучитьДатуUTC(Дата)+"&"+Строка(secure_password));
	Возврат СтрЗаменить(Строка(х.ХешСумма)," ","");
КОнецФункции	
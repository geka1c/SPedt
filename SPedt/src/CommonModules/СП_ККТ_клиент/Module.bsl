

#Область ЧекОтмены

Процедура ЧекОтмены(Объект, Форма, УникальныйИдентификатор, УстройствоПечати) Экспорт
	Если Объект.СтатусККМ <> ПредопределенноеЗначение("Перечисление.СтатусыЧековККМ.Фискализирован") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Отменить можно только фискализарованный чек!");
		возврат;
	КонецЕсли;	
	
	данныеформы				= Объект;
	ОбщиеПараметры = СП_ККТ.ПолучитьШаблонЧекаКоррекции(УстройствоПечати, данныеформы);
	
	
	Оповещение = Новый ОписаниеОповещения("НапечататьЧекКоррекции_Завершение", СП_ККТ_клиент, Форма);
	МенеджерОборудованияКлиент.НачатьФормированиеЧекаКоррекцииНаФискальномУстройстве(Оповещение, УникальныйИдентификатор, ОбщиеПараметры, ?(УстройствоПечати.Пустая(), Неопределено, УстройствоПечати)); 
		
КонецПроцедуры

Процедура 	НапечататьЧекКоррекции_Завершение(РезультатВыполнения, Параметры) Экспорт
	//ЭтаФорма.Доступность = Истина;
	Если РезультатВыполнения.Результат Тогда
	//	Объект.НомерСменыККМ = РезультатВыполнения.ВыходныеПараметры[0];
	//	Объект.НомерЧекаККМ  = РезультатВыполнения.ВыходныеПараметры[1];
	//	Объект.Статус 		 = ПредопределенноеЗначение("Перечисление.СтатусыЧековККМ.Фискализирован");
	//	Объект.Дата   		 = МенеджерОборудованияКлиентПереопределяемый.ДатаСеанса();
	//	Если Не ЗначениеЗаполнено(Объект.НомерЧекаККМ) Тогда
	//		Объект.НомерЧекаККМ = 1;
	//	КонецЕсли;
	//		
	//	СП_РаботаСДокументами_Клиент.ЗаписатьДокумент(ЭтотОбъект);
	Иначе
		ТекстСообщения = НСтр("ru = 'При выполнении операции произошла ошибка:""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Параметры.Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


Процедура ОтменаОплатыКартой(Объект, Форма ) Экспорт
	Сумма = Объект.СтоимостьИтого;//Объект.Покупки.Итог("СтоимостьИтого")+Объект.ПоискНикаСтоимость;
	Если Вопрос("Вы уверенны что необходимо отменить оплату по карте?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;
	Конецесли;
	ОчиститьСообщения();

	//Если не Объект.ОплатаВыполнена Тогда
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Для данного документа не выполнена оплата платежной картой.'"));
	//	Возврат;
	//КонецЕсли;

		ПараметрыОперации=МенеджерОборудованияКлиент.ПараметрыВыполненияЭквайринговойОперации();
		ПараметрыОперации.ТипТранзакции		= "AuthorizeVoid";
		ПараметрыОперации.СуммаОперации 	= Сумма;
		ПараметрыОперации.НомерЧека			= "";
		ПараметрыОперации.НомерЧекаЭТ		= "7";
		ПараметрыОперации.НомерКарты		= Объект.НомерКарты;
		ПараметрыОперации.СсылочныйНомер 	= Объект.СсылочныйНомер;
		ПараметрыОперации.Вставить("Форма", Форма);
		ПараметрыОперации.Вставить("Объект", Объект);
		
		
		
		

	МенеджерОборудованияКлиент.ПредложитьВыбратьУстройство(
		Новый ОписаниеОповещения("ОплатитьКартойПредложитьВыбратьЭквайринговыйТерминалЗавершение", СП_ККТ_клиент, ПараметрыОперации),
		"ЭквайринговыйТерминал",
		НСтр("ru='Выберите эквайринговый терминал'"),
		НСтр("ru='Эквайринговый терминал не подключен'"));

КонецПроцедуры



Процедура ОплатитьКартойПредложитьВыбратьЭквайринговыйТерминалЗавершение(ИдентификаторУстройстваЭТ, ПараметрыОперации) Экспорт
	
	Если ИдентификаторУстройстваЭТ <> Неопределено Тогда
		
		ПараметрыОперации.Форма.Доступность=Ложь;
		
		Оповещение = новый ОписаниеОповещения("ОплатитьКартойЗавершение", ПараметрыОперации);
		МенеджерОборудованияКлиент.НачатьВыполнениеОперацииНаЭквайринговомТерминале(Оповещение,ПараметрыОперации.Форма.УникальныйИдентификатор,
			ИдентификаторУстройстваЭТ,, ПараметрыОперации);	
		
		
		ОписаниеОшибки = "";
		РезультатЭТ = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ПараметрыОперации.Форма.УникальныйИдентификатор,
		                                                                                ИдентификаторУстройстваЭТ,
		                                                                                ОписаниеОшибки);
		
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура ОплатитьКартойЗавершение(Результат, ДополнительныеПараметры) Экспорт
	ДополнительныеПараметры.Форма.Доступность = Истина;
	Если Результат.Результат Тогда
		Если 		Результат.ТипТранзакции = "AuthorizeSales" Тогда
			ДополнительныеПараметры.Объект.ОплатаВыполнена 	= Истина;
			ДополнительныеПараметры.Объект.СсылочныйНомер 	= Результат.СсылочныйНомер;
			ДополнительныеПараметры.Объект.НомерКарты 		= Результат.НомерКарты;
			//ФискализироватьЧекАвтоПослеЗаписи();
		ИначеЕсли 	Результат.ТипТранзакции = "AuthorizeVoid" или 
					Результат.ТипТранзакции = "AuthorizeRefund" Тогда
			ДополнительныеПараметры.Объект.ОплатаВыполнена 	= Ложь;
			ДополнительныеПараметры.Объект.СсылочныйНомер 	= Результат.СсылочныйНомер;
			ДополнительныеПараметры.Объект.НомерКарты 		= Результат.НомерКарты;
			ДополнительныеПараметры.Объект.ВидОплаты 		= ПредопределенноеЗначение("Перечисление.ФормыОплаты.Наличные");
			
			//Проверка Печати фискального чека после опаты
			ТекстОшибки	=	"Ошибка 1 (проверка оплат). Сообщите Администратору";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
			
		КонецЕсли;
		
		
		Если СП_РаботаСДокументами_Клиент.ЗаписатьДокумент(ЭтотОбъект) Тогда
			Если Результат.ТипТранзакции = "AuthorizeSales" Тогда
			//	ПослеОплаты();
				//НапечататьЧекПослеЗаписи();
				//ФискализироватьЧекАвтоПослеЗаписи();
				//ОповеститьОбИзменении(Объект.Ссылка);
				//Закрыть();//Элементы.ФискализацияЧека.Доступность = Ложь;
			КонецЕсли;
		Иначе	
 			//Проверка Печати фискального чека после опаты
			ТекстОшибки	=	"Ошибка 2 (проверка оплат). Сообщите Администратору";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		КонецЕсли;
		//Сообщить("ОперацияВыполнена");
		
	Иначе
		Сообщить("При выполнении операции произошла ошибка "+Результат.ОписаниеОшибки);
		
	КонецЕсли;
КонецПроцедуры




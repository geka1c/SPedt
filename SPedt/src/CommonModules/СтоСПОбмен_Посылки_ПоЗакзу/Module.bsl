
Функция Загрузить(Покупка, Участник) Экспорт
	КолекцияЗаказов = новый ТаблицаЗначений;
	КолекцияЗаказов.Колонки.Добавить("Покупка", 	новый ОписаниеТипов("СправочникСсылка.Покупки"));
	КолекцияЗаказов.Колонки.Добавить("Участник", 	новый ОписаниеТипов("СправочникСсылка.Участники"));
	новаяСтрока 			= КолекцияЗаказов.Добавить();
	новаяСтрока.Покупка 	= Покупка;
	новаяСтрока.Участник 	= Участник;
	Возврат ЗагрузитьСписком(КолекцияЗаказов);
КонецФункции

Функция ЗагрузитьСписком(КоллекцияЗаказов) Экспорт
	хмл_отправили	= ПолучитьХМЛ(КоллекцияЗаказов);
	хмл_получили 	= СтоСПОбмен_Общий.Загрузить(хмл_отправили);
	
	ТЗ=Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Ошибка");
	Если хмл_получили=Неопределено Тогда 
		стр=тз.Добавить();
		стр.Ошибка="Не удалось соединиться с сайтом";
	Иначе	
		возврат Разбор(ТЗ,хмл_получили);
	КонецЕсли;
	Ошибки_ВыданныеПокупки(ТЗ);
	Возврат новый Структура("Ошибки",ТЗ);
КонецФункции


#Область ЗагрузкаПосылкиПоКодам

Функция ПолучитьХМЛ(КоллекцияЗаказов)
	Тип_megaorders			= ФабрикаXDTO.Тип("http://www.100sp.ru/out",	"distributors.megaordersPackages.megaorders");
	Тип_megaordersPackages	= ФабрикаXDTO.Тип("http://www.100sp.ru/out",	"distributors.megaordersPackages");
	Тип_distributors		= ФабрикаXDTO.Тип("http://www.100sp.ru/out",	"distributors");
	
	Объект_distributors			= ФабрикаXDTO.Создать(Тип_distributors);
	Объект_megaorders			= ФабрикаXDTO.Создать(Тип_megaorders);
	Объект_megaordersPackages	= ФабрикаXDTO.Создать(Тип_megaordersPackages);
	
	Для каждого элем из КоллекцияЗаказов Цикл
		Объект_megaorders		= ФабрикаXDTO.Создать(Тип_megaorders);
		Объект_megaorders.uid	= Формат(элем.Участник.Код, "ЧГ=0");
		Объект_megaorders.pid	= Формат(элем.Покупка.Код, 	"ЧГ=0");
		
		Объект_megaordersPackages.megaorders.Добавить(Объект_megaorders);
	КонецЦикла;
	Объект_distributors.megaordersPackages = Объект_megaordersPackages;
	
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку(); 
	ФабрикаXDTO.ЗаписатьXML(Запись, Объект_distributors);
	ДанныеXML = Запись.Закрыть();
	ДанныеXML="<?xml version=""1.0"" encoding=""UTF-8""?> "+СтрЗаменить(ДанныеXML,"xmlns=""http://www.100sp.ru/out"" ","");
	Возврат ДанныеXML; 
КонецФункции

	

Функция Разбор(ТЗЗаказов,ПолученныеДанные) 
	пространствоИмен="http://www.100sp.ru/api/distributor/upload/back";
	ПолученныеДанные=СтрЗаменить(ПолученныеДанные,"http://www.100sp.ru",пространствоИмен);
	авторизацияВыполнена=ложь;
	
	
	Тип_distributors=ФабрикаXDTO.Тип(пространствоИмен, "distributors");
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ПолученныеДанные);
	
	Объект_distributors= ФабрикаXDTO.ПрочитатьXML(ЧтениеXML,Тип_distributors);
	Если Объект_distributors.auth.result="ok" Тогда
		авторизацияВыполнена=истина;
	КонецЕсли;
	Если Объект_distributors.megaordersPackages.megaorders	= Неопределено Тогда
		Возврат авторизацияВыполнена;
	КонецЕсли;	
	
	тз_результат=новый ТаблицаЗначений;
	тз_результат.Колонки.Добавить("Участник");
	тз_результат.Колонки.Добавить("Покупка");
	тз_результат.Колонки.Добавить("мегаордер");
	тз_результат.Колонки.Добавить("Посылки");
	
	
	тэг_Мегоордера = Объект_distributors.megaordersPackages.megaorders;
	Если тэг_Мегоордера.result = "error" тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("для " +
		СП_РаботаСоСправочниками.ПолучитьУчастникаПо_Коду(тэг_Мегоордера.uid)+ " " +Символы.ПС+
		СП_РаботаСоСправочниками.ПолучитьПокупкуПо_Коду(тэг_Мегоордера.pid)+ " " +Символы.ПС+
		тэг_Мегоордера.message);
		Возврат неопределено;
	КонецЕсли;
	списокПосылок = новый СписокЗначений;
	Для каждого тэг_Мегаордер из тэг_Мегоордера.megaorder Цикл
		Для Каждого тэг_Посылка из  тэг_Мегаордер.packages.packageId Цикл
			посылка = СП_РаботаСоСправочниками.ПолучитьПосылкуПо_Коду(тэг_Посылка);
			списокПосылок.Добавить(посылка);
			Если посылка.Догрузить Тогда
				СтоСПОбмен_Посылки.Загрузить_СоставПосылкиПоКодам(посылка);	
			КонецЕсли;
			Если  не ЗначениеЗаполнено(посылка.ШК) Тогда
				
				ПараметрыПосылки	= Новый Структура;
				ПунктВыдачиПосылки 	= Посылка.ПунктВыдачи;
				ПараметрыПосылки.Вставить("ШК", СП_Штрихкоды.ПолучитьМегаордер(Посылка,,ПунктВыдачиПосылки));
				СП_РаботаСоСправочниками.ОбновитьПосылку(посылка,ПараметрыПосылки);
			КонецЕсли;
		КонецЦикла;
		
		строка_Мегаордер			= тз_результат.Добавить();
		строка_Мегаордер.Покупка 	= СП_РаботаСоСправочниками.ПолучитьПокупкуПо_Коду(тэг_Мегоордера.pid);
		строка_Мегаордер.Участник 	= СП_РаботаСоСправочниками.ПолучитьУчастникаПо_Коду(тэг_Мегоордера.uid);
		строка_Мегаордер.мегаордер	= тэг_Мегаордер.mid;
		строка_Мегаордер.Посылки	= списокПосылок;
		
	КонецЦикла;
	Возврат новый Структура ("авторизацияВыполнена,результат",авторизацияВыполнена,тз_результат);
КонецФункции

Функция Ошибки_ВыданныеПокупки(ТЗ) 
	//ТЗОшибок=ТЗЗаказов.Скопировать(новый Структура("result","error"));
	//строкиСошибками=ТЗЗаказов.НайтиСтроки(новый Структура("result","error"));
	//Для каждого стр из строкиСошибками Цикл
	//	ТЗЗаказов.Удалить(стр);
	//КонецЦикла;	
	//
	//строкиСвои=ТЗЗаказов.НайтиСтроки(новый Структура("ТочкаНазначение",Константы.СвояТочка.Получить()));
	//Для каждого стр из строкиСвои Цикл
	//	ТЗЗаказов.Удалить(стр);
	//КонецЦикла;	
	Возврат ТЗ;
КонецФункции

	

#КонецОбласти


#Область Вспомогательные
#КонецОбласти
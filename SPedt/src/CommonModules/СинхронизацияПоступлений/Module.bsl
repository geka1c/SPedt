Процедура Синхронизировать(ПунктВыдачи = Неопределено) Экспорт
	//СкорректироватьПоступления();
	КоличествоЗаказов = 0;
	СтрокВПакете = Константы.НоваяМетодикаСтрокВПакете.Получить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	1 КАК КоличествоЗаказов,
		|	НеВыгруженноНаСайтОстатки.Заказ КАК Заказ,
		|	НеВыгруженноНаСайтОстатки.Партия КАК Партия,
		|	НеВыгруженноНаСайтОстатки.ПунктВыдачи КАК ПунктВыдачи,
		|	НеВыгруженноНаСайтОстатки.МестоХранения КАК МестоХранения
		|ПОМЕСТИТЬ Сбор
		|ИЗ
		|	РегистрНакопления.НеВыгруженноНаСайт.Остатки(, ПунктВыдачи = &ПунктВыдачи) КАК НеВыгруженноНаСайтОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(Сбор.КоличествоЗаказов) КАК КоличествоЗаказов
		|ИЗ
		|	Сбор КАК Сбор";
	
	Если ПунктВыдачи = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"ПунктВыдачи = &ПунктВыдачи", "");
	Иначе	
		Запрос.УстановитьПараметр("ПунктВыдачи",ПунктВыдачи);
	КонецЕсли;
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		КоличествоЗаказов = ?(Выборка.КоличествоЗаказов = null,0,Выборка.КоличествоЗаказов);;
	КонецЕсли;
	
	Пока КоличествоЗаказов>0  Цикл
		Синзронизация = Документы.СинхронизацияПоступлений.СоздатьДокумент();
		Синзронизация.Дата = ТекущаяДата();
		Синзронизация.ЗаполнитьДанные(СтрокВПакете,ПунктВыдачи);
		Если Синзронизация.Данные.Количество()>0 Тогда
			Синзронизация.ВыгрузитьНаСайт();
			Синзронизация.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;	
		КоличествоЗаказов = КоличествоЗаказов - СтрокВПакете
	КонецЦикла
КонецПроцедуры	

Функция НоваяМетодика(ДатаПроверки) Экспорт
	НоваяМетодика = Константы.НоваяМетодикаОбмена.Получить();
	Если не НоваяМетодика Тогда Возврат Ложь КонецЕсли;
	Начало = Константы.НоваяМетодикаОбменаНачало.Получить();
	Возврат (ДатаПроверки >= Начало);
КонецФункции	

Функция ДокументОтправлен(Документ) Экспорт
	Если не ЗначениеЗаполнено(Документ.Ссылка) Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	
КонецФункции	

Процедура СкорректироватьПоступления2() Экспорт

		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НеВыгруженноНаСайтОстатки.Заказ КАК Заказ,
		|	НеВыгруженноНаСайтОстатки.Партия КАК Партия,
		|	НеВыгруженноНаСайтОстатки.ПунктВыдачи КАК ПунктВыдачи,
		|	НеВыгруженноНаСайтОстатки.МестоХранения КАК МестоХранения,
		|	НеВыгруженноНаСайтОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ПОМЕСТИТЬ кКорректировке
		|ИЗ
		|	РегистрНакопления.НеВыгруженноНаСайт.Остатки КАК НеВыгруженноНаСайтОстатки
		|ГДЕ
		|	НеВыгруженноНаСайтОстатки.КоличествоОстаток < 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Заказ,
		|	Партия,
		|	ПунктВыдачи,
		|	МестоХранения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	кКорректировке.Заказ КАК Заказ,
		|	кКорректировке.Партия КАК Партия,
		|	кКорректировке.ПунктВыдачи КАК ПунктВыдачиНаСтикере,
		|	кКорректировке.МестоХранения КАК МестоХранения,
		|	кКорректировке.КоличествоОстаток КАК КоличествоОстаток,
		|	НеВыгруженноНаСайт.Регистратор КАК Регистратор
		|ИЗ
		|	кКорректировке КАК кКорректировке
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НеВыгруженноНаСайт КАК НеВыгруженноНаСайт
		|		ПО кКорректировке.Заказ = НеВыгруженноНаСайт.Заказ
		|			И кКорректировке.Партия = НеВыгруженноНаСайт.Партия
		|			И кКорректировке.ПунктВыдачи = НеВыгруженноНаСайт.ПунктВыдачи
		|			И кКорректировке.МестоХранения = НеВыгруженноНаСайт.МестоХранения
		|ИТОГИ ПО
		|	Регистратор";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаРегистратор = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРегистратор.Следующий() Цикл
		ДокументСинхронизауии =  ВыборкаРегистратор.Регистратор.ПолучитьОбъект();
	
		ВыборкаДетальныеЗаписи = ВыборкаРегистратор.Выбрать();
	    Измененен = Ложь;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			отборСтрок = Новый Структура("Заказ, Партия, ПунктВыдачиНаСтикере, МестоХранения");
			ЗаполнитьЗначенияСвойств(отборСтрок,ВыборкаДетальныеЗаписи);
			найдено = ДокументСинхронизауии.Данные.НайтиСтроки(отборСтрок);
			Для каждого элем из найдено Цикл
				Измененен = Истина;
				элем.ИзмененВПартии = Истина;
			КонецЦикла;	
		КонецЦикла;
		Если Измененен Тогда
			ДокументСинхронизауии.Записать(РежимЗаписиДокумента.Проведение)
		КонецЕсли;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры


Процедура СкорректироватьПоступления(СтарыеДанные, НовыеДанные, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	втСтарое.Заказ КАК Заказ,
		|	втСтарое.Партия КАК Партия,
		|	втСтарое.Габарит КАК Габарит,
		|	втСтарое.МестоХранения КАК МестоХранения,
		|	втСтарое.вес КАК вес,
		|	втСтарое.объем КАК объем,
		|	втСтарое.ОтдельнымМестом КАК ОтдельнымМестом,
		|	втСтарое.ДатаПриема КАК ДатаПриема,
		|	втСтарое.Коробка КАК Коробка
		|ПОМЕСТИТЬ Старое
		|ИЗ
		|	&втСтарое КАК втСтарое
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втНовое.Заказ КАК Заказ,
		|	втНовое.Партия КАК Партия,
		|	втНовое.Габарит КАК Габарит,
		|	втНовое.МестоХранения КАК МестоХранения,
		|	втНовое.вес КАК вес,
		|	втНовое.объем КАК объем,
		|	втНовое.ОтдельнымМестом КАК ОтдельнымМестом,
		|	втНовое.ДатаПриема КАК ДатаПриема,
		|	втНовое.Коробка КАК Коробка
		|ПОМЕСТИТЬ Новое
		|ИЗ
		|	&втНовое КАК втНовое
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Старое.Заказ КАК Заказ,
		|	Старое.Партия КАК Партия,
		|	Старое.Габарит КАК Габарит,
		|	Старое.МестоХранения КАК МестоХранения,
		|	Старое.вес КАК вес,
		|	Старое.объем КАК объем,
		|	Старое.ОтдельнымМестом КАК ОтдельнымМестом,
		|	Старое.ДатаПриема КАК ДатаПриема,
		|	Старое.Коробка КАК Коробка,
		|	Новое.Габарит КАК Габарит1,
		|	Новое.МестоХранения КАК МестоХранения1,
		|	Новое.Заказ КАК Заказ1,
		|	Новое.Партия КАК Партия1
		|ПОМЕСТИТЬ Изменились
		|ИЗ
		|	Старое КАК Старое
		|		ЛЕВОЕ СОЕДИНЕНИЕ Новое КАК Новое
		|		ПО Старое.Заказ = Новое.Заказ
		|			И Старое.Партия = Новое.Партия
		|ГДЕ
		|	(Старое.Габарит <> Новое.Габарит
		|			ИЛИ Старое.МестоХранения <> Новое.МестоХранения
		|			ИЛИ Старое.вес <> Новое.вес
		|			ИЛИ Старое.объем <> Новое.объем
		|			ИЛИ Старое.ОтдельнымМестом <> Новое.ОтдельнымМестом
		|			ИЛИ Старое.ДатаПриема <> Новое.ДатаПриема
		|			ИЛИ Старое.Коробка <> Новое.Коробка
		|			ИЛИ Новое.Заказ ЕСТЬ NULL)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Транзит.Регистратор.Представление КАК Регистратор,
		|	Транзит.ПокупкаСсылка.Представление КАК Заказ,
		|	Транзит.Партия.Представление КАК Партия
		|ИЗ
		|	РегистрНакопления.Транзит КАК Транзит
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Изменились КАК Изменились
		|		ПО Транзит.ПокупкаСсылка = Изменились.Заказ
		|			И Транзит.Партия = Изменились.Партия
		|			И (Транзит.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.РАсход))
		|			И (Транзит.Габарит <> Изменились.Габарит1
		|				ИЛИ Транзит.МестоХранения <> Изменились.МестоХранения1
		|				ИЛИ Изменились.Заказ1 ЕСТЬ NULL)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиТоваров.Покупка.Представление КАК Заказ,
		|	ОстаткиТоваров.Регистратор.Представление КАК Регистратор,
		|	ОстаткиТоваров.Партия.Представление КАК Партия
		|ИЗ
		|	Изменились КАК Изменились
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиТоваров КАК ОстаткиТоваров
		|		ПО Изменились.Заказ = ОстаткиТоваров.Покупка
		|			И Изменились.Партия = ОстаткиТоваров.Партия
		|			И (ОстаткиТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.РАсход))
		|			И (ОстаткиТоваров.Габарит <> Изменились.Габарит1
		|				ИЛИ ОстаткиТоваров.МестоХранения <> Изменились.МестоХранения1
		|				ИЛИ Изменились.Заказ1 ЕСТЬ NULL)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НеВыгруженноНаСайт.Регистратор КАК Регистратор,
		|	НеВыгруженноНаСайт.Заказ КАК Заказ,
		|	НеВыгруженноНаСайт.Партия КАК Партия
		|ИЗ
		|	РегистрНакопления.НеВыгруженноНаСайт КАК НеВыгруженноНаСайт
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Изменились КАК Изменились
		|		ПО НеВыгруженноНаСайт.Заказ = Изменились.Заказ
		|			И НеВыгруженноНаСайт.Партия = Изменились.Партия
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(НеВыгруженноНаСайт.Регистратор) = ТИП(Документ.СинхронизацияПоступлений)
		|ИТОГИ ПО
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Изменились.Заказ КАК Заказ,
		|	Изменились.Партия КАК Партия,
		|	Изменились.Габарит КАК Габарит,
		|	Изменились.МестоХранения КАК МестоХранения,
		|	Изменились.вес КАК вес,
		|	Изменились.объем КАК объем,
		|	Изменились.ОтдельнымМестом КАК ОтдельнымМестом,
		|	Изменились.ДатаПриема КАК ДатаПриема,
		|	Изменились.Коробка КАК Коробка,
		|	Изменились.Габарит1 КАК Габарит1,
		|	Изменились.МестоХранения1 КАК МестоХранения1,
		|	Изменились.Заказ1 КАК Заказ1,
		|	Изменились.Партия1 КАК Партия1
		|ИЗ
		|	Изменились КАК Изменились";
	
	Запрос.Параметры.Вставить("втСтарое", СтарыеДанные);
	Запрос.Параметры.Вставить("втНовое",  НовыеДанные);
	массивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатТранзит = массивРезультатов[3];
	РезультатОстатки = массивРезультатов[4];
	РезультатНеВыгружено = массивРезультатов[5];
	РезультатИзменились = массивРезультатов[6];
	
	выборкаТранзит = РезультатТранзит.Выбрать();	
	Пока выборкаТранзит.следующий() Цикл
		ОбщегоНазначенияклиентсервер.СообщитьПользователю("Заказ: "+ВЫборкаТранзит.Заказ + символы.ПС +"партия: "+выборкаТранзит.Партия +  символы.ПС +"Уже отправлен документом: "+выборкаТранзит.Регистратор+ символы.ПС+"------" );		
		Отказ = Истина;
	КонецЦикла;	  
	
	выборкаОстатки = РезультатОстатки.Выбрать();	
	Пока выборкаОстатки.следующий() Цикл
		ОбщегоНазначенияклиентсервер.СообщитьПользователю("Заказ: "+выборкаОстатки.Заказ + символы.ПС +"партия: "+выборкаОстатки.Партия +  символы.ПС +"Уже выбан документом: "+выборкаОстатки.Регистратор+ символы.ПС+"------" );		
		Отказ = Истина;
	КонецЦикла;	  
	
	
	Если Отказ Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ не проведен.");
		Возврат;
	КонецЕсли;	
	
	
	ВыборкаРегистратор = РезультатНеВыгружено.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРегистратор.Следующий() Цикл
		ДокументСинхронизауии =  ВыборкаРегистратор.Регистратор.ПолучитьОбъект();
		Если ТипЗнч(ДокументСинхронизауии) <> Тип("ДокументОбъект.СинхронизацияПоступлений") Тогда Продолжить; КонецЕсли;
	
		ВыборкаДетальныеЗаписи = ВыборкаРегистратор.Выбрать();
	    Измененен = Ложь;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			отборСтрок = Новый Структура("Заказ, Партия");
			ЗаполнитьЗначенияСвойств(отборСтрок,ВыборкаДетальныеЗаписи);
			найдено = ДокументСинхронизауии.Данные.НайтиСтроки(отборСтрок);
			Для каждого элем из найдено Цикл
				Измененен = Истина;
				элем.ИзмененВПартии = Истина;
			КонецЦикла;	
		КонецЦикла;
		Если Измененен Тогда
			ДокументСинхронизауии.Записать(РежимЗаписиДокумента.Проведение)
		КонецЕсли;
	КонецЦикла;

	
	
	
КонецПроцедуры
Функция ПолучитьДанныеЗаказов(Партия) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеЗаказов.Партия КАК Партия,
		|	ДанныеЗаказов.Заказ КАК Заказ,
		|	ДанныеЗаказов.Габарит КАК Габарит,
		|	ДанныеЗаказов.Вес КАК Вес,
		|	ДанныеЗаказов.Объем КАК Объем,
		|	ДанныеЗаказов.Количество КАК Количество,
		|	ДанныеЗаказов.ОтдельнымМестом КАК ОтдельнымМестом,
		|	ДанныеЗаказов.ДатаПриема КАК ДатаПриема,
		|	ДанныеЗаказов.Коробка КАК Коробка,
		|	ДанныеЗаказов.МестоХранения КАК МестоХранения
		|ИЗ
		|	РегистрСведений.ДанныеЗаказов КАК ДанныеЗаказов
		|ГДЕ
		|	ДанныеЗаказов.Партия = &Партия";
	
	Запрос.УстановитьПараметр("Партия", Партия);
	
	РезультатЗапроса = Запрос.Выполнить();
	таблицаДвижений = РезультатЗапроса.Выгрузить();
	Возврат таблицаДвижений;
КонецФункции

#Область ДляПереходаНаНовуюМетодику
Процедура УдалитьДвиженияДанныеЗаказов() Экспорт
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Приходная.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Приходная КАК Приходная
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РазборКоробки.Ссылка
		|ИЗ
		|	Документ.РазборКоробки КАК РазборКоробки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		нз = РегистрыСведений.ДанныеЗаказов.СоздатьНаборЗаписей();
		нз.Отбор.Регистратор.Значение = ВыборкаДетальныеЗаписи.ссылка;
		нз.Записать();
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры	

Процедура СформироватьДвиженияПриходнойПоДаннымЗаказа() Экспорт
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 	
	
		"ВЫБРАТЬ
		|	ВложЗапрос.Партия КАК Ссылка
		|ПОМЕСТИТЬ Доки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОстаткиТоваровОстатки.Партия КАК Партия
		|	ИЗ
		|		РегистрНакопления.ОстаткиТоваров.Остатки КАК ОстаткиТоваровОстатки
		|	ГДЕ
		|		ТИПЗНАЧЕНИЯ(ОстаткиТоваровОстатки.Партия) = ТИП(Документ.Приходная)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТранзитОстатки.Партия
		|	ИЗ
		|		РегистрНакопления.Транзит.Остатки КАК ТранзитОстатки
		|	ГДЕ
		|		ТИПЗНАЧЕНИЯ(ТранзитОстатки.Партия) = ТИП(Документ.Приходная)) КАК ВложЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложЗапрос.Партия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	Приходная.Ссылка КАК Ссылка
		//|ПОМЕСТИТЬ Доки2
		//|ИЗ
		//|	Документ.Приходная КАК Приходная
		//|ГДЕ
		//|	Приходная.Проведен
		//|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Посылки.Ссылка.Дата КАК Период,
		|	Посылки.Ссылка КАК Партия,
		|	Посылки.Посылка КАК Заказ,
		|	Посылки.Габарит КАК Габарит,
		|	Посылки.Вес КАК Вес,
		|	Посылки.объем КАК Объем,
		|	1 КАК Количество,
		|	Посылки.ОтдельнымМестом КАК ОтдельнымМестом,
		|	Посылки.ДатаПриема КАК ДатаПриема,
		|	ЗНАЧЕНИЕ(Справочник.Коробки.БезКоробки) КАК Коробка,
		|	Посылки.Ссылка КАК Ссылка,
		|	Посылки.Оплачен КАК Оплачен
		|ПОМЕСТИТЬ Сбор
		|ИЗ
		|	Документ.Приходная.Посылки КАК Посылки
		|ГДЕ
		|	Посылки.Ссылка В
		|			(ВЫБРАТЬ
		|				Доки.Ссылка КАК Ссылка
		|			ИЗ
		|				Доки КАК Доки)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Покупки.Ссылка.Дата,
		|	Покупки.Ссылка,
		|	Покупки.Покупка,
		|	Покупки.Габарит,
		|	Покупки.Вес,
		|	Покупки.объем,
		|	1,
		|	Покупки.ОтдельнымМестом,
		|	Покупки.ДатаПриема,
		|	ЗНАЧЕНИЕ(Справочник.Коробки.БезКоробки),
		|	Покупки.Ссылка,
		|	Покупки.Оплачен
		|ИЗ
		|	Документ.Приходная.Покупки КАК Покупки
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(Покупки.Покупка) = ТИП(Справочник.Коробки)
		|	И Покупки.Ссылка В
		|			(ВЫБРАТЬ
		|				Доки.Ссылка КАК Ссылка
		|			ИЗ
		|				Доки КАК Доки)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сбор.Период КАК Период,
		|	Сбор.Партия КАК Партия,
		|	Сбор.Заказ КАК Заказ,
		|	Сбор.Габарит КАК Габарит,
		|	Сбор.Вес КАК Вес,
		|	Сбор.Объем КАК Объем,
		|	Сбор.Количество КАК Количество,
		|	Сбор.ОтдельнымМестом КАК ОтдельнымМестом,
		|	Сбор.ДатаПриема КАК ДатаПриема,
		|	Сбор.Коробка КАК Коробка,
		|	Сбор.Ссылка КАК Ссылка,
		|	НЕ Сбор.Оплачен КАК НеОплачен
		|ИЗ
		|	Сбор КАК Сбор
		|ИТОГИ ПО
		|	Ссылка";
	
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ДокументыСОшибками = новый Массив;	
	Пока ВыборкаСсылка.Следующий() Цикл
		// Вставить обработку выборки ВыборкаСсылка
		
		Приходная = ВыборкаСсылка.Ссылка;
		
		ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();
		
		нз = РегистрыСведений.ДанныеЗаказов.СоздатьНаборЗаписей();
		нз.Отбор.Регистратор.Значение = Приходная;
		
		нз.Записывать = Истина;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтрокаНЗ =  нз.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНЗ,ВыборкаДетальныеЗаписи);
		КонецЦикла;
		Попытка
		    нз.Записать();
		Исключение
			ДокументыСОшибками.Добавить(Приходная);
		КонецПопытки;
	КонецЦикла;

	Для каждого элем из ДокументыСОшибками Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(элем);
		
	КонецЦикла;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры	

Процедура СформироватьДвиженияРазбораКоробкиПоДаннымЗаказа() Экспорт
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 	
	
		"ВЫБРАТЬ
		|	ВложЗапрос.Партия КАК Ссылка
		|ПОМЕСТИТЬ Доки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОстаткиТоваровОстатки.Партия КАК Партия
		|	ИЗ
		|		РегистрНакопления.ОстаткиТоваров.Остатки КАК ОстаткиТоваровОстатки
		|	ГДЕ
		|		ТИПЗНАЧЕНИЯ(ОстаткиТоваровОстатки.Партия) = ТИП(Документ.РазборКоробки)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТранзитОстатки.Партия
		|	ИЗ
		|		РегистрНакопления.Транзит.Остатки КАК ТранзитОстатки
		|	ГДЕ
		|		ТИПЗНАЧЕНИЯ(ТранзитОстатки.Партия) = ТИП(Документ.РазборКоробки)) КАК ВложЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложЗапрос.Партия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		
		//		|ВЫБРАТЬ
		//|	РазборКоробки.Ссылка КАК Ссылка
		//|ПОМЕСТИТЬ Доки
		//|ИЗ
		//|	Документ.РазборКоробки КАК РазборКоробки
		//|ГДЕ
		//|	РазборКоробки.Проведен
		//|;
		//|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Посылки.Ссылка.Дата КАК Период,
		|	Посылки.Ссылка КАК Партия,
		|	Посылки.Посылка КАК Заказ,
		|	Посылки.Габарит КАК Габарит,
		|	Посылки.Вес КАК Вес,
		|	Посылки.объем КАК Объем,
		|	1 КАК Количество,
		|	Посылки.ОтдельнымМестом КАК ОтдельнымМестом,
		|	Посылки.ДатаПриема КАК ДатаПриема,
		|	Посылки.Коробка КАК Коробка,
		|	Посылки.Ссылка КАК Ссылка,
		|	Посылки.Оплачен КАК Оплачен
		|ПОМЕСТИТЬ Сбор
		|ИЗ
		|	Документ.РазборКоробки.Посылки КАК Посылки
		|ГДЕ
		|	Посылки.Ссылка В
		|			(ВЫБРАТЬ
		|				Доки.Ссылка КАК Ссылка
		|			ИЗ
		|				Доки КАК Доки)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Группы.Ссылка.Дата,
		|	Группы.Ссылка,
		|	Группы.Коробка,
		|	Группы.Габарит,
		|	Группы.Вес,
		|	Группы.объем,
		|	Группы.Количество,
		|	Группы.ОтдельнымМестом,
		|	Группы.ДатаПриема,
		|	ЗНАЧЕНИЕ(Справочник.Коробки.БезКоробки),
		|	Группы.Ссылка,
		|	ИСТИНА
		|ИЗ
		|	Документ.РазборКоробки.ГруппыНаТранзит КАК Группы
		|ГДЕ
		|	Группы.Ссылка В
		|			(ВЫБРАТЬ
		|				Доки.Ссылка КАК Ссылка
		|			ИЗ
		|				Доки КАК Доки)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сбор.Период КАК Период,
		|	Сбор.Партия КАК Партия,
		|	Сбор.Заказ КАК Заказ,
		|	Сбор.Габарит КАК Габарит,
		|	Сбор.Вес КАК Вес,
		|	Сбор.Объем КАК Объем,
		|	Сбор.Количество КАК Количество,
		|	Сбор.ОтдельнымМестом КАК ОтдельнымМестом,
		|	Сбор.ДатаПриема КАК ДатаПриема,
		|	Сбор.Коробка КАК Коробка,
		|	Сбор.Ссылка КАК Ссылка,
		|	НЕ Сбор.Оплачен КАК НеОплачен
		|ИЗ
		|	Сбор КАК Сбор
		|ИТОГИ ПО
		|	Ссылка";
	
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ДокументыСОшибками = новый Массив;	
	
	Пока ВыборкаСсылка.Следующий() Цикл
		// Вставить обработку выборки ВыборкаСсылка
		
		Приходная = ВыборкаСсылка.Ссылка;
		
		ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();
		
		нз = РегистрыСведений.ДанныеЗаказов.СоздатьНаборЗаписей();
		нз.Отбор.Регистратор.Значение = Приходная;
		
		нз.Записывать = Истина;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтрокаНЗ =  нз.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНЗ,ВыборкаДетальныеЗаписи);
		КонецЦикла;
		Попытка
		    нз.Записать();
		Исключение
			ДокументыСОшибками.Добавить(Приходная);
		КонецПопытки;
	КонецЦикла;

	Для каждого элем из ДокументыСОшибками Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(элем);
		
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитДанныеУчастников()  Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Участники.Ссылка КАК Участник,
		|	Участники.Телефон1 КАК Телефон,
		|	Участники.Рэйтинг КАК Рэйтинг,
		|	Участники.ТелефонХэш КАК ТелефонХэш,
		|	Участники.Наименование КАК Имя
		|ИЗ
		|	Справочник.Участники КАК Участники";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	нз = РегистрыСведений.ДанныеУчастников.СоздатьНаборЗаписей();	
	нз.Загрузить(РезультатЗапроса.Выгрузить());
	нз.Записать();
	
	
КонецПроцедуры	

Процедура ПереходНаНовуюМетодику() Экспорт
	
	ДатаНовойМетодики = Константы.НоваяМетодикаОбменаНачало.Получить();
	Если ЗначениеЗаполнено(ДатаНовойМетодики) Тогда Возврат; КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СинхронизацияПоступлений.Дата КАК Дата
		|ИЗ
		|	Документ.СинхронизацияПоступлений КАК СинхронизацияПоступлений
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Константы.НоваяМетодикаОбменаНачало.Установить(ВыборкаДетальныеЗаписи.Дата);
	Иначе	
		Константы.НоваяМетодикаОбменаНачало.Установить(ТекущаяДата());	
	Конецесли;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
	событие = "Обновление.НоваяМетодикаОбмена";
	ЗаписьЖурналаРегистрации(событие, УровеньЖурналаРегистрации.Информация,,,"Установка констант");
	
	Константы.НоваяМетодикаОбмена.Установить(Истина);
	Константы.НоваяМетодикаСтрокВПакете.Установить(500);
	
	ЗаписьЖурналаРегистрации(событие, УровеньЖурналаРегистрации.Информация,,,"Данные заказов приходные");
	СформироватьДвиженияПриходнойПоДаннымЗаказа();
	ЗаписьЖурналаРегистрации(событие, УровеньЖурналаРегистрации.Информация,,,"Данные заказов Разбор коробок");
	СформироватьДвиженияРазбораКоробкиПоДаннымЗаказа();
	ЗаписьЖурналаРегистрации(событие, УровеньЖурналаРегистрации.Информация,,,"Данные заказов сайт на остатки");
	ДвиженияДанныеЗаказовСайтНаОстатки();
	Константы.ИспользоватьДатыЗапретаИзменения.Установить(Истина);	
	
	СинхронизацияПоступлений.Синхронизировать();
	СинхронизацияПоступлений.ЗаписатьДатуЗапретаСОписанием(НачалоМесяца((ТекущаяДата()) -1), "Установлено При переходе на новую методику обмена");
КонецПроцедуры	

&НаСервере
Процедура ДвиженияДанныеЗаказовСайтНаОстатки()
	//Формируем данные заказов на сайте на остатки
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	ТранзитОстатки.Партия КАК Ссылка,
		|	ТранзитОстатки.Партия.Дата КАК дата
		|ПОМЕСТИТЬ Доки
		|ИЗ
		|	РегистрНакопления.Транзит.Остатки(
		|			,
		|			НЕ Точка.ТранспортнаяКомпания
		|				И Партия.Дата >= &ДатаНачалаМесяца) КАК ТранзитОстатки
		|ГДЕ
		|	ТранзитОстатки.КоличествоОстаток > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОстаткиНаСкладеОстатки.Партия,
		|	ОстаткиНаСкладеОстатки.Партия.Дата
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Остатки КАК ОстаткиНаСкладеОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Доки.Ссылка КАК Ссылка,
		|	Доки.дата КАК Дата
		|ИЗ
		|	Доки КАК Доки
		|
		|СГРУППИРОВАТЬ ПО
		|	Доки.Ссылка,
		|	Доки.дата
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	

	Запрос.УстановитьПараметр("ДатаНачалаМесяца", НачалоМесяца(ТекущаяДата()));
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		док = Выборка.Ссылка.ПолучитьОбъект();
		Попытка
		   док.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(" "+Выборка.Ссылка+" "+ОписаниеОшибки());		
		КонецПопытки;
	КонецЦикла;
	

КонецПроцедуры


Процедура ЗаписатьДатуЗапретаСОписанием(ДатаЗапрета, Описание ="") Экспорт 
	Запрос = новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДатыЗапретаИзменения.ДатаЗапрета,
		|	ДатыЗапретаИзменения.ОписаниеДатыЗапрета
		|ИЗ
		|	РегистрСведений.ДатыЗапретаИзменения КАК ДатыЗапретаИзменения
		|ГДЕ
		|	ДатыЗапретаИзменения.Пользователь = Значение(Перечисление.ВидыНазначенияДатЗапрета.ДляВсехПользователей)
		|	И ДатыЗапретаИзменения.Раздел = ЗНАЧЕНИЕ(ПланВидовХарактеристик.РазделыДатЗапретаИзменения.ПустаяСсылка)
		|	И ДатыЗапретаИзменения.Объект = ЗНАЧЕНИЕ(ПланВидовХарактеристик.РазделыДатЗапретаИзменения.ПустаяСсылка)";
	Выборка = Запрос.Выполнить().Выбрать();
	ОбщаяДатаПрочитана = Выборка.Следующий();
	
	
	Если ОбщаяДатаПрочитана и Выборка.ДатаЗапрета >= НачалоДня(ДатаЗапрета) Тогда Возврат КонецЕсли; 
	
	ПустойРаздел 	= ПланыВидовХарактеристик.РазделыДатЗапретаИзменения.ПустаяСсылка();
	МенеджерЗаписи 	= РегистрыСведений.ДатыЗапретаИзменения.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Раздел              		= ПустойРаздел;
	МенеджерЗаписи.Объект              		= ПустойРаздел;
	МенеджерЗаписи.Пользователь        		= Перечисления.ВидыНазначенияДатЗапрета.ДляВсехПользователей;
	МенеджерЗаписи.ДатаЗапрета         		= ДатаЗапрета;
	//МенеджерЗаписи.ОписаниеДатыЗапрета 	= "КонецПрошлогоМесяца";
	МенеджерЗаписи.Комментарий 				= Описание;
	МенеджерЗаписи.Записать(Истина);
	
КонецПроцедуры

#КонецОбласти
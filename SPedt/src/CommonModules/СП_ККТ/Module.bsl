
Функция ВыбранаДневнаяСумма()
	ЛимитККМ	= Константы.ЛимитККМ_День.Получить();
	Если ЛимитККМ = 0 Тогда Возврат Ложь; КонецЕсли;
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= 
		"ВЫБРАТЬ
		|	СУММА(Расходная.СтоимостьИтого) КАК СтоимостьИтого
		|ИЗ
		|	Документ.Расходная КАК Расходная
		|ГДЕ
		|	Расходная.Дата МЕЖДУ &НачалоДня И &КонецДня
		|	И Расходная.НомерСменыККМ <> 0";
	
	Запрос.УстановитьПараметр("КонецДня", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СуммаЗаДень=0;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		СуммаЗаДень= ?(ВыборкаДетальныеЗаписи.СтоимостьИтого	= null,0,ВыборкаДетальныеЗаписи.СтоимостьИтого);
	КонецЕсли;
	Возврат (СуммаЗаДень>=ЛимитККМ);
КонецФункции


Функция НужноПечататьЧек(Объект) экспорт         
	Сумма			= Объект.СтоимостьИтого;
	Если Сумма = 0 													Тогда возврат Ложь 	КОнецЕсли; 
	Если Объект.ВидОплаты = Перечисления.ФормыОплаты.ПлатежнаяКарта Тогда возврат Истина; КонецЕсли;
	Если Объект.ВидОплаты = Перечисления.ФормыОплаты.ОплатаQR Тогда возврат Истина; КонецЕсли;
	
	ИмяКомпьютера		= ИмяКомпьютера();
	Участник			= Объект.Участник;
	ЛимитЧека			= Константы.ЛимитККМ_Чек.Получить();
	ПревышенаСуммаЧека	= Ложь;
	
	Если ЛимитЧека > 0 и Сумма > ЛимитЧека  Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Превышенна предельная сумма чека!");
		ПревышенаСуммаЧека = Истина;
	КонецЕсли;
	
	Если 	(  	участник.Рэйтинг<Константы.РейтингГраница.Получить() или 
				участник.ВсегдаПечататьЧек	)  	и 
			не ВыбранаДневнаяСумма() и 
			не ПревышенаСуммаЧека 		Тогда
		Возврат истина;
	Иначе
		Возврат Ложь;
	КонецЕсли	
КонецФункции


Функция ПолучитьШаблонЧека(УстройствоПечати, Объект, ВсегдаПечатать) Экспорт
	Если не ЗначениеЗаполнено(УстройствоПечати) Тогда Возврат неопределено; КонецЕсли;
		
	
	Если ВсегдаПечатать Тогда 
		Печатать = Истина;
	ИначеЕсли не Константы.ФискальныйЧекНеПечатать.Получить() Тогда
		Печатать = Истина;
	Иначе
		Печатать = Ложь;
	КонецЕсли;
	
	

   // Общие параметры чека
   ОбщиеПараметры = МенеджерОборудованияКлиентСервер.ПараметрыОперацииФискализацииЧека();

   ОбщиеПараметры.ДокументОснование = Объект.Ссылка;
   
    // Параметры установлены по умолчанию.
   ОбщиеПараметры.ТипРасчета 		= Перечисления.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств; // Перечисление "ТипыРасчетаДенежнымиСредствами"

   ОбщиеПараметры.Отправляет1СSMS   = Ложь; // SMS отправляет средствами 1C.
   ОбщиеПараметры.Отправляет1СEmail = Ложь; // Email отправляет средствами 1C.
   ОбщиеПараметры.ПокупательEmail 	= Неопределено;
   ОбщиеПараметры.ПокупательНомер 	= Неопределено;
   Если Печатать Тогда
	   ОбщиеПараметры.Электронно 		= Ложь; // Если Электронно = Истина, то чек будет предоставлен в элетронной форме, без печати.	   
   	   ОбщиеПараметры.ПокупательEmail 	= Неопределено;	   
   Иначе
	   ОбщиеПараметры.Электронно 		= Истина; // Если Электронно = Истина, то чек будет предоставлен в элетронной форме, без печати.	   
   	   ОбщиеПараметры.ПокупательEmail 	= ?(Объект.Участник.Почта = "", Объект.Участник.Наименование+"@yandex.ru", Объект.Участник.Почта ) ;	   
   КонецЕсли;   
 
   // Параметры необходимые для чека ЕНВД на принтере чеков
   Если Константы.ИспользоватьСотрудникаКакКассира.Получить()  и 
   		ЗначениеЗаполнено(Объект.Ответственный) Тогда
   			ОбщиеПараметры.Кассир 			= Объект.Ответственный.Наименование;
   Иначе		
   			ОбщиеПараметры.Кассир 			= УстройствоПечати.Организация.Кассир.Наименование; // Строка, Обязательно - ФИО лица, осуществившего расчет с покупателем (клиентом), оформившего кассовый чек.
   КонецЕсли;
   //ОбщиеПараметры.КассирИНН 				= КассирИНН; 	// Строка, Необязательно - Идентификационный номер налогоплательщика кассира, при наличии.
   ОбщиеПараметры.СистемаНалогообложения 	= УстройствоПечати.Организация.СистемаНалогообложения; // Системы налогообложения - "Перечисление.ТипыСистемНалогообложенияККТ" 
   
   // Параметры необходимые для чека ЕНВД на принтере чеков
   ОбщиеПараметры.ОрганизацияНазвание 	= УстройствоПечати.Организация.Наименование;
   ОбщиеПараметры.ОрганизацияИНН 	  	= УстройствоПечати.Организация.ИНН;
   ОбщиеПараметры.ОрганизацияКПП 		= УстройствоПечати.Организация.КПП;
   //ОбщиеПараметры.НомерКассы 			= "00001";
   //ОбщиеПараметры.НомерЧека 			= "1";
   //ОбщиеПараметры.НомерСмены 			= "1";
	
   // Формато-логический контроль - "ПеречислениеСсылка.СпособыФорматоЛогическогоКонтроля"
   //ОбщиеПараметры.СпособФорматоЛогическогоКонтроля = Неопределено; // Перечисление,Необязательно - Способ формато-логического контроля. 
   //ОбщиеПараметры.ДопустимоеРасхождениеФорматоЛогическогоКонтроля = 0; // Число,Необязательно - устанавливается значение по умолчанию. 

   
   // Формирование табличной части
   СуммаИтого 		= Объект.СтоимостьИтого;//Объект.Покупки.Итог("СтоимостьИтого")+Объект.ПоискНикаСтоимость;
   Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.Расходная") или
	   ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.Продажа")Тогда
	   
	   Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.Расходная") Тогда
		   
		   Запрос = Новый Запрос;
		   Запрос.Текст = 
		   "ВЫБРАТЬ
		   |	РасходнаяПокупки.Габарит.Представление КАК ГабаритПредставление,
		   |	РасходнаяПокупки.ОплачиваетУчастник КАК СтоимостьИтого,
		   |	СУММА(1) КАК Количество
		   |ИЗ
		   |	Документ.Расходная.Покупки КАК РасходнаяПокупки
		   |ГДЕ
		   |	РасходнаяПокупки.Ссылка = &Ссылка
		   |	И РасходнаяПокупки.ОплачиваетУчастник > 0
		   |	И РасходнаяПокупки.Подбор
		   |СГРУППИРОВАТЬ ПО
		   |	РасходнаяПокупки.Габарит.Представление,
		   |	РасходнаяПокупки.ОплачиваетУчастник";
		   
		   Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		   
		   РезультатЗапроса = Запрос.Выполнить();
		   
		   Выборка = РезультатЗапроса.Выбрать();
		   
		   Пока Выборка.Следующий() Цикл

			   СуммаВыдачи 		= Выборка.СтоимостьИтого;		//Объект.Покупки.Итог("СтоимостьИтого")+Объект.ПоискНикаСтоимость;
			   
			   СтрокаПозицииЧека 						= МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека();
			   СтрокаПозицииЧека.Наименование 			= "Хранение р. "+Выборка.ГабаритПредставление;
			   СтрокаПозицииЧека.Количество 			= Выборка.Количество;
			   СтрокаПозицииЧека.Цена 					= СуммаВыдачи; // Обязательно, Цена без учета скидок и наценок (Необходимо для ФР и ФФД 1.0)
			   СтрокаПозицииЧека.Сумма 					= Выборка.Количество * СуммаВыдачи;
			   СтрокаПозицииЧека.НомерСекции 			= 1;
			   СтрокаПозицииЧека.ЦенаСоСкидками 		= СуммаВыдачи; // Обязательно, Цена с учета скидок и наценок (Необходимо начиная с ФФД 1.0.5 и выше)
			   СтрокаПозицииЧека.ПризнакСпособаРасчета 	= Перечисления.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой; // Перечисление - ТипыПризнакаСпособаРасчет, Признак способа расчета. Обязательно для ФФД 1.0.5 и выше.
			   СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.Услуга;
			   ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);

		   КонецЦикла;
		   
		   Если Объект.ПоискНикаСтоимость>0 Тогда
			   
			   СуммаВыдачи 		= Объект.ПоискНикаСтоимость;		//Объект.Покупки.Итог("СтоимостьИтого")+Объект.ПоискНикаСтоимость;
			   
			   СтрокаПозицииЧека 						= МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека();
			   СтрокаПозицииЧека.Наименование 			= "Поиск ника ";
			   СтрокаПозицииЧека.Количество 			= 1;
			   СтрокаПозицииЧека.Цена 					= СуммаВыдачи; // Обязательно, Цена без учета скидок и наценок (Необходимо для ФР и ФФД 1.0)
			   СтрокаПозицииЧека.Сумма 					= СуммаВыдачи;
			   СтрокаПозицииЧека.НомерСекции 			= 1;
			   СтрокаПозицииЧека.ЦенаСоСкидками 		= СуммаВыдачи; // Обязательно, Цена с учета скидок и наценок (Необходимо начиная с ФФД 1.0.5 и выше)
			   СтрокаПозицииЧека.ПризнакСпособаРасчета 	= Перечисления.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой; // Перечисление - ТипыПризнакаСпособаРасчет, Признак способа расчета. Обязательно для ФФД 1.0.5 и выше.
			   СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.Услуга;
			   ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
			   
			   
		КонецЕсли;
		   
		   //
		   //СуммаВыдачи 		= Объект.СтоимостьИтого - Объект.Товары.Итог("Сумма");//Объект.Покупки.Итог("СтоимостьИтого")+Объект.ПоискНикаСтоимость;
		   //
		   //СтрокаПозицииЧека 						= МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека();
		   //СтрокаПозицииЧека.Наименование 			= "Услуга выдачи заказов";
		   //СтрокаПозицииЧека.Количество 			= 1;
		   //СтрокаПозицииЧека.Цена 					= СуммаВыдачи; // Обязательно, Цена без учета скидок и наценок (Необходимо для ФР и ФФД 1.0)
		   //СтрокаПозицииЧека.Сумма 					= СуммаВыдачи;
		   //СтрокаПозицииЧека.НомерСекции 			= 1;
		   //СтрокаПозицииЧека.ЦенаСоСкидками 		= СуммаВыдачи; // Обязательно, Цена с учета скидок и наценок (Необходимо начиная с ФФД 1.0.5 и выше)
		   //СтрокаПозицииЧека.ПризнакСпособаРасчета 	= Перечисления.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой; // Перечисление - ТипыПризнакаСпособаРасчет, Признак способа расчета. Обязательно для ФФД 1.0.5 и выше.
		   //СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.Услуга;
		   //ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
	   КонецЕсли;
	   
	   Для каждого товар Из Объект.Товары Цикл
		   СтрокаПозицииЧека 						= МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека();
		   СтрокаПозицииЧека.Наименование			= ?(ТипЗнч(товар.Номенклатура) = Тип("СправочникСсылка.КартыУчастников"), "Карта участника",товар.Номенклатура.Наименование);//Строка(СтрокаТЧ.Номенклатура));
		   СтрокаПозицииЧека.Количество				= товар.Количество;//СтрокаТЧ.Количество);
		   СтрокаПозицииЧека.Цена					= товар.Цена;//СтрокаТЧ.Цена);
		   СтрокаПозицииЧека.Сумма					= товар.Сумма;//СтрокаТЧ.Сумма);
		   СтрокаПозицииЧека.НомерСекции			= 1;//НомерСекции);
		   СтрокаПозицииЧека.ЦенаСоСкидками 		= товар.Цена;
		   СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.Товар;
		   СтрокаПозицииЧека.ПризнакСпособаРасчета 	= Перечисления.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой;
		   ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
	   КонецЦикла;
   ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПоступлениеПристроя") Тогда    
	   Для каждого товар Из Объект.Заказы Цикл
		   СтрокаПозицииЧека 						= МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека();
		   СтрокаПозицииЧека.Наименование			= "Хранение " + товар.Пристрой.Наименование;//Строка(СтрокаТЧ.Номенклатура));
		   СтрокаПозицииЧека.Количество				= 1;//СтрокаТЧ.Количество);
		   СтрокаПозицииЧека.Цена					= товар.Сумма;//СтрокаТЧ.Цена);
		   СтрокаПозицииЧека.Сумма					= товар.Сумма;//СтрокаТЧ.Сумма);
		   СтрокаПозицииЧека.НомерСекции			= 1;//НомерСекции);
		   СтрокаПозицииЧека.ЦенаСоСкидками 		= товар.Сумма;
		   СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.Услуга;
		   СтрокаПозицииЧека.ПризнакСпособаРасчета 	= Перечисления.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой;
		   ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
	   КонецЦикла;	   
	   Для каждого товар Из Объект.ЗаявкиНаДоставку Цикл
		   СтрокаПозицииЧека 						= МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека();
		   СтрокаПозицииЧека.Наименование			= "Хранение " + товар.Заявка.Наименование;//Строка(СтрокаТЧ.Номенклатура));
		   СтрокаПозицииЧека.Количество				= 1;//СтрокаТЧ.Количество);
		   СтрокаПозицииЧека.Цена					= товар.Сумма;//СтрокаТЧ.Цена);
		   СтрокаПозицииЧека.Сумма					= товар.Сумма;//СтрокаТЧ.Сумма);
		   СтрокаПозицииЧека.НомерСекции			= 1;//НомерСекции);
		   СтрокаПозицииЧека.ЦенаСоСкидками 		= товар.Сумма;
		   СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.Услуга;
		   СтрокаПозицииЧека.ПризнакСпособаРасчета 	= Перечисления.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой;
		   ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
	   КонецЦикла;	   
   ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПоступлениеЗаказаПочтыРоссии") Тогда    
		   СтрокаПозицииЧека 						= МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека();
		   СтрокаПозицииЧека.Наименование			= "Прием отправления почты россии №" + Объект.НомерЗаказа;//Строка(СтрокаТЧ.Номенклатура));
		   СтрокаПозицииЧека.Количество				= 1;//СтрокаТЧ.Количество);
		   СтрокаПозицииЧека.Цена					= Объект.СтоимостьИтого;//СтрокаТЧ.Цена);
		   СтрокаПозицииЧека.Сумма					= Объект.СтоимостьИтого;//СтрокаТЧ.Сумма);
		   СтрокаПозицииЧека.НомерСекции			= 1;//НомерСекции);
		   СтрокаПозицииЧека.ЦенаСоСкидками 		= Объект.СтоимостьИтого;
		   СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.Услуга;
		   СтрокаПозицииЧека.ПризнакСпособаРасчета 	= Перечисления.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой;
		   ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
   КонецЕсли;
   
   Если Объект.ВидОплаты=Перечисления.ФормыОплаты.ПлатежнаяКарта или
	   Объект.ВидОплаты=Перечисления.ФормыОплаты.ОплатаQR Тогда
	   ТипОплаты  =Перечисления.ТипыОплатыККТ.Электронно;
   Иначе 
	   ТипОплаты  =Перечисления.ТипыОплатыККТ.Наличные;
   КонецЕсли;
   СтрокаОплаты  = МенеджерОборудованияКлиентСервер.ПараметрыСтрокиОплаты();
   СтрокаОплаты.Вставить("ТипОплаты", 	ТипОплаты); 
   СтрокаОплаты.Вставить("Сумма", 		СуммаИтого);
   ОбщиеПараметры.ТаблицаОплат.Добавить(СтрокаОплаты);

   

   Возврат ОбщиеПараметры;

КонецФункции



Функция ПолучитьШаблонЧекаКоррекции(УстройствоПечати, Объект) Экспорт

   // Общие параметры чека
   ОбщиеПараметры =  МенеджерОборудованияКлиентСервер.ПараметрыОперацииЧекаКоррекции();
   
   ОбщиеПараметры.КорректируемыйДокумент = Объект.Ссылка;
   ОбщиеПараметры.ДокументОснование = Объект.Ссылка;
    // Параметры установлены по умолчанию.
   ОбщиеПараметры.ТипРасчета 		= Перечисления.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств; // Перечисление "ТипыРасчетаДенежнымиСредствами"
   ОбщиеПараметры.Электронно 		= Ложь; // Если Электронно = Истина, то чек будет предоставлен в элетронной форме, без печати.
   ОбщиеПараметры.Отправляет1СSMS   = Ложь; // SMS отправляет средствами 1C.
   ОбщиеПараметры.Отправляет1СEmail = Ложь; // Email отправляет средствами 1C.
   ОбщиеПараметры.ПокупательEmail 	= Неопределено;
   ОбщиеПараметры.ПокупательНомер 	= Неопределено;
 
   // Параметры необходимые для чека ЕНВД на принтере чеков
   ОбщиеПараметры.Кассир 					= УстройствоПечати.Организация.Кассир.Наименование; // Строка, Обязательно - ФИО лица, осуществившего расчет с покупателем (клиентом), оформившего кассовый чек.
   //ОбщиеПараметры.КассирИНН 				= КассирИНН; 	// Строка, Необязательно - Идентификационный номер налогоплательщика кассира, при наличии.
   ОбщиеПараметры.СистемаНалогообложения 	= УстройствоПечати.Организация.СистемаНалогообложения; // Системы налогообложения - "Перечисление.ТипыСистемНалогообложенияККТ" 
   
   // Параметры необходимые для чека ЕНВД на принтере чеков
   ОбщиеПараметры.ОрганизацияНазвание 	= УстройствоПечати.Организация.Наименование;
   ОбщиеПараметры.ОрганизацияИНН 	  	= УстройствоПечати.Организация.ИНН;
   ОбщиеПараметры.ОрганизацияКПП 		= УстройствоПечати.Организация.КПП;
   //ОбщиеПараметры.НомерКассы 			= "00001";
   //ОбщиеПараметры.НомерЧека 			= "1";
   //ОбщиеПараметры.НомерСмены 			= "1";
	
   // Формато-логический контроль - "ПеречислениеСсылка.СпособыФорматоЛогическогоКонтроля"
   //ОбщиеПараметры.СпособФорматоЛогическогоКонтроля = Неопределено; // Перечисление,Необязательно - Способ формато-логического контроля. 
   //ОбщиеПараметры.ДопустимоеРасхождениеФорматоЛогическогоКонтроля = 0; // Число,Необязательно - устанавливается значение по умолчанию. 

   
   // Формирование табличной части
   СуммаИтого 		= Объект.СтоимостьИтого;//Объект.Покупки.Итог("СтоимостьИтого")+Объект.ПоискНикаСтоимость;
   //СуммаВыдачи 		= Объект.СтоимостьИтого-Объект.Товары.Итог("Сумма");//Объект.Покупки.Итог("СтоимостьИтого")+Объект.ПоискНикаСтоимость;
   
   //СтрокаПозицииЧека 						= МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека(); 
   //СтрокаПозицииЧека.Наименование 			= "Услуга выдачи заказов";
   //СтрокаПозицииЧека.Количество 			= 1;
   //СтрокаПозицииЧека.Цена 					= СуммаВыдачи; // Обязательно, Цена без учета скидок и наценок (Необходимо для ФР и ФФД 1.0)
   //СтрокаПозицииЧека.Сумма 					= СуммаВыдачи;
   //СтрокаПозицииЧека.НомерСекции 			= 1;
   //СтрокаПозицииЧека.ЦенаСоСкидками 		= СуммаВыдачи; // Обязательно, Цена с учета скидок и наценок (Необходимо начиная с ФФД 1.0.5 и выше)
   //СтрокаПозицииЧека.ПризнакСпособаРасчета 	= Перечисления.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой; // Перечисление - ТипыПризнакаСпособаРасчет, Признак способа расчета. Обязательно для ФФД 1.0.5 и выше.
   //СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.Услуга;
   //ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
   //
   //Для каждого товар Из Объект.Товары Цикл
   //    СтрокаПозицииЧека 						= МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека();
   //    СтрокаПозицииЧека.Наименование			= товар.Номенклатура.Наименование;//Строка(СтрокаТЧ.Номенклатура));
   //    СтрокаПозицииЧека.Количество				= товар.Количество;//СтрокаТЧ.Количество);
   //    СтрокаПозицииЧека.Цена					= товар.Цена;//СтрокаТЧ.Цена);
   //    СтрокаПозицииЧека.Сумма					= товар.Сумма;//СтрокаТЧ.Сумма);
   //    СтрокаПозицииЧека.НомерСекции			= 1;//НомерСекции);
   //    СтрокаПозицииЧека.ЦенаСоСкидками 		= товар.Цена;
   //    СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.Товар;
   //    СтрокаПозицииЧека.ПризнакСпособаРасчета 	= Перечисления.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой;
   //    ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
   //КонецЦикла;
   //
   //Если Объект.ВидОплаты=Перечисления.ФормыОплаты.ПлатежнаяКарта Тогда
   //    ТипОплаты  =Перечисления.ТипыОплатыККТ.Электронно;
   //Иначе 
   //    ТипОплаты  =Перечисления.ТипыОплатыККТ.Наличные;
   //КонецЕсли;
   //СтрокаОплаты  = МенеджерОборудованияКлиентСервер.ПараметрыСтрокиОплаты();
   //СтрокаОплаты.Вставить("ТипОплаты", 	ТипОплаты); 
   //СтрокаОплаты.Вставить("Сумма", 		СуммаИтого);
   //ОбщиеПараметры.ТаблицаОплат.Добавить(СтрокаОплаты);

   

   Возврат ОбщиеПараметры;

КонецФункции


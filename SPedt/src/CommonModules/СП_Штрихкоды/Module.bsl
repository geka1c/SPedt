
#Область ПрограммныйИнтерфейс

Функция ПолучитьШтрихКод(Покупка,Участник,Точка,ВидСтикера = Неопределено) Экспорт
	Если Точка=неопределено или Точка = Справочники.ТочкиРаздачи.ПустаяСсылка() Тогда 
		Точка	= Константы.СвояТочка.Получить(); 
	КонецЕсли;
	
	Если 		ТипЗнч(Покупка)=Тип("СправочникСсылка.Покупки") Тогда
		типшк	= "11";
	ИначеЕсли 	ТипЗнч(Покупка)=Тип("СправочникСсылка.Заказы") Тогда
		типшк	= "33";
	ИначеЕсли 	ТипЗнч(Покупка)=Тип("СправочникСсылка.Коробки") Тогда
		Если Покупка.ВидСтикера = Перечисления.ВидыСтикеров.ГруппаДоставки или
			 ВидСтикера = Перечисления.ВидыСтикеров.ГруппаДоставки Тогда
			типшк = "43"
		Иначе		
			типшк	= "44";
		КонецЕсли;	
	ИначеЕсли 	ТипЗнч(Покупка)=Тип("СправочникСсылка.Посылки") Тогда
		типшк	= "12";
	ИначеЕсли 	ТипЗнч(Покупка)=Тип("СправочникСсылка.Пристрой") Тогда
		типшк	= "88";
	КонецЕсли;	
	
	Если ТипЗнч(Покупка)=Тип("СправочникСсылка.Покупки") или ТипЗнч(Покупка)=Тип("СправочникСсылка.Заказы") Тогда
		pid		= формат(Число(Покупка.Код)	,"ЧЦ=6; ЧН=0; ЧВН=; ЧГ=0");
		uid		= формат(Число(Участник.Код),"ЧЦ=6; ЧН=0; ЧВН=; ЧГ=0");
		disid	= формат(Число(Точка.Код)	,"ЧЦ=4; ЧН=0; ЧВН=; ЧГ=0");
		ШК		= типшк+uid+pid+disid;
	ИначеЕсли ТипЗнч(Покупка)=Тип("СправочникСсылка.Посылки")  Тогда
		pid		= формат(Число(Покупка.Код)	,"ЧЦ=12; ЧН=0; ЧВН=; ЧГ=0");
		//uid		= формат(0,"ЧЦ=6; ЧН=0; ЧВН=; ЧГ=0");
		disid	= формат(Число(Точка.Код)	,"ЧЦ=4; ЧН=0; ЧВН=; ЧГ=0");
		ШК		= типшк+pid+disid;	
	ИначеЕсли ТипЗнч(Покупка)=Тип("СправочникСсылка.ЗаявкаНаДоставку")  Тогда
		Возврат "";
	ИначеЕсли ТипЗнч(Покупка)=Тип("СправочникСсылка.Пристрой")  Тогда
		pid		= формат(Число(Покупка.Код)	,"ЧЦ=12; ЧН=0; ЧВН=; ЧГ=0");
	//	uid		= формат(0,"ЧЦ=6; ЧН=0; ЧВН=; ЧГ=0");
		disid	= формат(Число(Точка.Код)	,"ЧЦ=4; ЧН=0; ЧВН=; ЧГ=0");
		ШК		= типшк+pid+disid;	
		
	ИначеЕсли ТипЗнч(Покупка)=Тип("СправочникСсылка.Коробки") Тогда
		
		orgid	= формат(Число(Покупка.Организатор.Код),"ЧЦ=6; ЧН=0; ЧВН=; ЧГ=0");
		orgid	= ?(orgid="0","000000",orgid);
		kol  	= формат(Число(Покупка.Количество),"ЧЦ=4; ЧН=0; ЧВН=; ЧГ=0");
		kol  	= ?(kol="0","0000",kol);
		disid	= формат(Число(Точка.Код),	"ЧЦ=4; ЧН=0; ЧВН=; ЧГ=0");
		кодПокупки = СтрЗаменить(Покупка.Код,"гд_" ,"" );
		
		pid		= формат(Число(кодПокупки),"ЧЦ=8; ЧН=0; ЧВН=; ЧГ=0");
		pid		= ?(pid="0","00000000",pid);;
		
		ШК=типшк+orgid+kol+pid+disid;
	КонецЕсли;	
	ШК_Строка		= ДополнитьШтрихКодПроверочнымКодом(ШК);
	Возврат ШК_Строка;
КонецФункции	

Функция ПолучитьМегаордер(Заказ,Участник =Неопределено,Точка=неопределено,ВидСтикера = Неопределено) Экспорт
	ЭтоСтарыйЗаказ	= (ТипЗнч(Заказ)= Тип("СправочникСсылка.Покупки") или
					   ТипЗнч(Заказ)= Тип("СправочникСсылка.Заказы"));	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Мегаордера.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Мегаордера КАК Мегаордера
	|ГДЕ
	|	Мегаордера.Покупка 		= &Заказ	   " +
	
	?(ЭтоСтарыйЗаказ,"
	|	И Мегаордера.Участник 		= &Участник ","")+
	
	?(Точка=Неопределено ,"","
	|	И Мегаордера.ПунктВыдачи 	= &ПунктВыдачи");
	
	Запрос.УстановитьПараметр("Заказ", 			Заказ);
	Запрос.УстановитьПараметр("ПунктВыдачи", 	Точка);
	Запрос.УстановитьПараметр("Участник", 		Участник);
	РезультатЗапроса 	= Запрос.Выполнить();
	Выборка 			= РезультатЗапроса.Выбрать();
	ШК_Строка			= "";
	Если Выборка.Следующий() Тогда
		ШК_Строка =  Выборка.Ссылка.Код;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(ШК_Строка) Тогда
		ШК_Строка	= ПолучитьШтрихКод(Заказ,Участник,Точка,ВидСтикера);
	КонецЕсли;
	Мегаордер_Ссылка	=	СП_РаботаСоСправочниками.ПолучитьМегаордерПоШК(ШК_Строка);
	////////////////
	НужноОбновлятьМегаордер = Ложь;
	параметрыМегаордера	= новый Структура;




	Если 	не значениеЗаполнено(Мегаордер_Ссылка.Покупка) 	или
			Мегаордер_Ссылка.Покупка	<> Заказ				 Тогда
		параметрыМегаордера.Вставить("Покупка",		Заказ);
		НужноОбновлятьМегаордер = Истина;
	КонецЕсли;
	Если 	Участник <> Неопределено и
			(не значениеЗаполнено(Мегаордер_Ссылка.Участник) 	или
			Мегаордер_Ссылка.Участник	<> Участник)				 Тогда
		параметрыМегаордера.Вставить("Участник",		Участник);
		НужноОбновлятьМегаордер = Истина;
	КонецЕсли;

	Если 	Точка <> Неопределено и
			(не значениеЗаполнено(Мегаордер_Ссылка.ПунктВыдачи) 	или
			Мегаордер_Ссылка.ПунктВыдачи	<> Точка)				 Тогда
		параметрыМегаордера.Вставить("ПунктВыдачи",		Точка);
		НужноОбновлятьМегаордер = Истина;
	КонецЕсли;

	Если НужноОбновлятьМегаордер Тогда
		СП_РаботаСоСправочниками.ОбновитьМегаордер(Мегаордер_Ссылка,параметрыМегаордера);
	КонецЕсли;	

	Если ТипЗнч(Заказ) = Тип("СправочникСсылка.Посылки") Тогда
		СП_РаботаСоСправочниками.ОбновитьМегаордерПосылки(Мегаордер_Ссылка,Заказ);		
	КонецЕсли;	
	Возврат Мегаордер_Ссылка;
КонецФункции	

Функция ПолучитьДанныеПоШК(ШК)	Экспорт
	ШК	= СтрЗаменить(ШК," ","");
	Если 		СтрНачинаетсяС(ШК,"12") Тогда
		
		ДанныеШК = ПолучитьПосылку(ШК);
		//Если ДанныеШК.ПунктВыдачи = Справочники.ТочкиРаздачи.ПунтВыдачиНеУказан Тогда
		//	СтоСПОбмен_Посылки.Загрузить_СоставПосылкиПоКодам(ДанныеШК.Посылка.Код);
		//	ДанныеШК.ПунктВыдачи = ДанныеШК.Посылка.ПунктВыдачи;

		//КонецЕсли;

		//Если ДанныеШК.ПунктВыдачи = справочники.точкираздачи.ПустаяСсылка() Тогда
		//	СтоСПОбмен_Посылки.Загрузить_СоставПосылкиПоКодам(ДанныеШК.Посылка.Код)
		//КонецЕсли;
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.Посылка);
		
	ИначеЕсли 	СтрНачинаетсяС(ШК, "11") Тогда			
		
		ДанныеШК = ПолучитьСтарыйЗаказ(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.Покупка);
		
	ИначеЕсли 	СтрНачинаетсяС(ШК, "33") Тогда			
		
		ДанныеШК = ПолучитьСтарыйЗаказ(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.Заказ100маркета);
	ИначеЕсли 	СтрНачинаетсяС(ШК, "34") Тогда			
		
		ДанныеШК = ПолучитьОборотнуюТару(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.ОборотнаяТара);
		
	ИначеЕсли 	СтрНачинаетсяС(ШК, "43") Тогда			
		
		ДанныеШК = ПолучитьКоробку(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.ГруппаДоставки);
		
	ИначеЕсли 	СтрНачинаетсяС(ШК, "44") Тогда			
		
		ДанныеШК = ПолучитьКоробку(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.Коробка);
	ИначеЕсли 	СтрНачинаетсяС(ШК, "45") Тогда			
		
		ДанныеШК = ПолучитьСобранныйЗаказ(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.ЗаказКД);

		
	ИначеЕсли 	СтрНачинаетсяС(ШК, "22") Тогда			
		
		ДанныеШК = ПолучитьКартуУчастника(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.КартаУчастника);
		
	ИначеЕсли 	СтрНачинаетсяС(ШК, "23") Тогда			
		
		ДанныеШК = ПолучитьВиртуальнуюКарту(ШК);
		Если ЗначениеЗаполнено(ДанныеШК) Тогда
			ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.КартаУчастникаВиртуальная);
		КонецЕсли; 
		
	ИначеЕсли 	СтрНачинаетсяС(ШК, "24") Тогда			
		
		ДанныеШК = ПолучитьШтрихКодПриемаВозврата(ШК);
		Если ЗначениеЗаполнено(ДанныеШК) Тогда
			ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.ШтрихКодПриемаВозврата);
		КонецЕсли;
	ИначеЕсли 	СтрНачинаетсяС(ШК, "25") Тогда			
		
		ДанныеШК = ПолучитьШтрихКодПриемаВозврата_25(ШК);
		Если ЗначениеЗаполнено(ДанныеШК) Тогда
			ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.ШтрихКодПриемаВозврата);
		КонецЕсли;
	Иначеесли СтрНачинаетсяС(ШК, "51") Тогда	
		ДанныеШК = Новый Структура("Длина", Число(прав(шк,2)));;
		ДанныеШК.Вставить("Тип", "Длина");
	Иначеесли СтрНачинаетсяС(ШК, "52") Тогда	
		ДанныеШК = Новый Структура("Ширина", Число(прав(шк,2)));;
		ДанныеШК.Вставить("Тип", "Ширина");
	Иначеесли СтрНачинаетсяС(ШК, "53") Тогда	
		ДанныеШК = Новый Структура("Высота", Число(прав(шк,2)));;
		ДанныеШК.Вставить("Тип", "Высота");
		
	Иначеесли СтрНачинаетсяС(ШК, "55") Тогда	
		
		ДанныеШК = ПолучитьСотрудника(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.Сотрудник);
		
	ИначеЕсли СтрНачинаетсяС(ШК, "62") Тогда	
		
		ДанныеШК = ПолучитьГабарит(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.Габарит);
	
	ИначеЕсли СтрНачинаетсяС(ШК, "63") Тогда	
		
		ДанныеШК = ПолучитьМестоХранения(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.МестоХранения);
	ИначеЕсли СтрНачинаетсяС(ШК, "65") Тогда	
		
		ДанныеШК = ПолучитьУчастника(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.Участник);
		
	ИначеЕсли СтрНачинаетсяС(ШК, "66")      Тогда		
		
		ДанныеШК = ПолучитьФункциюШК(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.ФункцияШК);
		
	ИначеЕсли СтрНачинаетсяС(ШК, "61")      Тогда		
		
		ДанныеШК = ПолучитьНоменклатуру(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.Номенклатура);
		
	ИначеЕсли СтрНачинаетсяС(ШК, "64")      Тогда		
		
		ДанныеШК = ПолучитьПунктВыдачи(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.ПунктВыдачи);
	ИначеЕсли СтрНачинаетсяС(ШК, "67")      Тогда		
		
		ДанныеШК = ПолучитьСупергруппу(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.Супергруппа);
	ИначеЕсли СтрНачинаетсяС(ШК, "68")      Тогда		
		
		ДанныеШК = ПолучитьДокументРасходная(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.Расходная);
	ИначеЕсли СтрНачинаетсяС(ШК, "69")      Тогда		
		
		ДанныеШК = ПолучитьДокументДвижение(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.ДвижениеТовара);
	ИначеЕсли СтрНачинаетсяС(ШК, "70")      Тогда		
		
		ДанныеШК = ПолучитьДокументВыдачаТранзита(ШК);
		ДанныеШК.Вставить("Тип", Перечисления.типМегаордера.ДвижениеТовара);
		
		
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный тип. ШК = """+ШК+"""");
	КонецЕсли;	
	
	
	
	
	Если ДанныеШК <> Неопределено и ДанныеШК.Свойство("ПунктВыдачи") Тогда
		ДанныеШК.Вставить("ПроизыодитсяОтгрузка", ДанныеШК.ПунктВыдачи.ПроизводитсяОтгрузка);
	КонецЕсли;
	
	Возврат ДанныеШК;
	
КонецФункции	

#КонецОбласти

#Область ФункцииРазбораШтрихКодов

Функция ПолучитьПосылку(ШК) 			
	Если 		СтрНачинаетсяС(ШК,"12") и СтрДлина(шк) = 20 Тогда       //Посылка
		
		КодПосылки		= Сред(ШК,3,12);
		КодПунктаВыдачи = Сред(ШК,15,4);
		ПроверочныйКод  = Сред(ШК,19,2);
		Если не КорректныйШК(ШК,ПроверочныйКод) Тогда
			Возврат Неопределено;
		КонецЕсли;	
		
		Посылка_Ссылка	=	СП_РаботаСоСправочниками.ПолучитьПосылкуПо_Коду(КодПосылки);
		Параметры 		= новый Структура;
		Параметры.Вставить("ПунктВыдачи", СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду(КодПунктаВыдачи));
		Параметры.Вставить("Посылка", 	  Посылка_Ссылка);
		Параметры.Вставить("ШК", 		  СП_РаботаСоСправочниками.ПолучитьМегаордерПоШК(ШК, Параметры));
		Если Параметры.ПунктВыдачи = Справочники.ТочкиРаздачи.ПунтВыдачиНеУказан Тогда
			СтоСПОбмен_Посылки.Загрузить_СоставПосылкиПоКодам(Посылка_Ссылка);
			Если Посылка_Ссылка.Состав.Количество()>0   и 
				(ТипЗнч(Посылка_Ссылка.Состав[0].Покупка) = Тип("СправочникСсылка.ЗаявкаНаДоставку") или
				 ТипЗнч(Посылка_Ссылка.Состав[0].Покупка) = Тип("СправочникСсылка.Пристрой")) и
				 не Константы.ВыбиратьПВПристроя.Получить() Тогда
				СвойПунктВыдачи = Константы.СвояТочка.Получить();
				 Параметры.ПунктВыдачи = СвойПунктВыдачи;
			КонецЕсли;
		КонецЕсли;	
		
	//	СП_РаботаСоСправочниками.ОбновитьМегаордер(Параметры.ШК, Параметры);
		
		СП_РаботаСоСправочниками.ОбновитьПосылку(Посылка_Ссылка,	Параметры);
		
		Параметры.Вставить("Заказ",		  Параметры.Посылка);
		Параметры.Вставить("Транзит",	  Константы.СвояТочка.Получить()<>Параметры.ПунктВыдачи);
		Параметры.Вставить("ВозвратРазрешен",	  ?(константы.ВозвратыСогласовыватьСОрганизатором.Получить(),Посылка_Ссылка.ВозвратРазрешен,"permitted" ));
		
		
		Возврат Параметры;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК посылки. ШК = """+ШК+"""");
		Возврат Неопределено;
	КонецЕсли;
КонецФункции


Функция ПолучитьОборотнуюТару(ШК) 			
	Если 		СтрНачинаетсяС(ШК,"34") и СтрДлина(шк) = 14 Тогда       //Оборотная тара
		
		Код		= Сред(ШК,3,10);
		ПроверочныйКод  = Сред(ШК,13,2);
		Если не КорректныйШК(ШК,ПроверочныйКод) Тогда
			Возврат Неопределено;
		КонецЕсли;	
		
		ОборотнаяТара_Ссылка	=	СП_РаботаСоСправочниками.ПолучитьОборотнуюТаруПо_Коду(Код);
		Параметры 		= новый Структура;
		Параметры.Вставить("ОборотнаяТара", 	  ОборотнаяТара_Ссылка);
		
		Возврат Параметры;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК оборотной тары. ШК = """+ШК+"""");
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция ПолучитьСтарыйЗаказ(ШК) 		
	Если 		(СтрНачинаетсяС(ШК,"11") или 
				 СтрНачинаетсяС(ШК,"33")) и
					  СтрДлина(шк) = 20 		Тогда       
		
		КодУчастника	= Сред(ШК,3,6);
		КодПокупки		= Сред(ШК,9,6);
		КодПунктаВыдачи = Сред(ШК,15,4);
		ПроверочныйКод  = Сред(ШК,19,2);
		Если не КорректныйШК(ШК,ПроверочныйКод) Тогда
			Возврат Неопределено;
		КонецЕсли;	
		Параметры = новый Структура;
		
		Параметры.Вставить("Участник",			СП_РаботаСоСправочниками.ПолучитьУчастникаПо_Коду(КодУчастника));
		Если СтрНачинаетсяС(ШК,"11") Тогда
			Параметры.Вставить("Покупка",		СП_РаботаСоСправочниками.ПолучитьПокупкуПо_Коду(КодПокупки));
		КонецЕсли;	
		Если СтрНачинаетсяС(ШК,"33") Тогда
			Параметры.Вставить("Покупка",		СП_РаботаСоСправочниками.ПолучитьЗаказПо_Коду(КодПокупки));
		КонецЕсли;	
		Параметры.Вставить("ПунктВыдачи",		СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду(КодПунктаВыдачи));
		
		Параметры.Вставить("ШК", 		 		СП_РаботаСоСправочниками.ПолучитьМегаордерПоШК(ШК));
		СП_РаботаСоСправочниками.ОбновитьМегаордер(Параметры.ШК, Параметры);
		
		Параметры.Вставить("НеПринимать",		не аСПНаСервере.разрешеноПринимать(Параметры.Участник));
		Параметры.Вставить("Организатор",		СП_РаботаСоСправочниками.ПолучитьОрганизатораПо_Коду(Параметры.Покупка.Владелец.код));
		
		Параметры.Вставить("Заказ",				Параметры.Покупка);
		Параметры.Вставить("Транзит",			Константы.СвояТочка.Получить()<>Параметры.ПунктВыдачи);

		Возврат Параметры;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК (11) старого заказа. ШК = """+ШК+"""");
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
	
Функция ПолучитьКоробку(ШК) 			
	
	Если 		СтрНачинаетсяС(ШК,"44") Тогда       
		Если СтрДлина(ШК) = 26 Тогда
			КодОрганизатора	= Сред(ШК,3,6);
			Количество		= Число(Сред(ШК,9,4));
			КодКоробки		= Сред(ШК,13,8);
			КодПунктаВыдачи = Сред(ШК,21,4);
			ПроверочныйКод  = Сред(ШК,25,2);
		Иначе
			КодОрганизатора	= Сред(ШК,3,8);
			Количество		= Число(Сред(ШК,11,4));
			КодКоробки		= Сред(ШК,15,8);
			КодПунктаВыдачи = Сред(ШК,23,4);
			ПроверочныйКод  = Сред(ШК,27,2);
		КонецЕсли;
		Если не КорректныйШК(ШК,ПроверочныйКод) Тогда
			Возврат Неопределено;
		КонецЕсли;	
		
		ПунктВыдачи		= СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду(КодПунктаВыдачи);
		КРазбору		= 	(ПунктВыдачи = Неопределено или 
							 ПунктВыдачи = Справочники.ТочкиРаздачи.ПунтВыдачиНеУказан или
							 ПунктВыдачи.КОд	= "0" или
						 	 ПунктВыдачи.КРазбору  		или
						 	 ПунктВыдачи =  Константы.СвояТочка.Получить());
							 
							 
		Коробка_Ссылка		= СП_РаботаСоСправочниками.ПолучитьКоробкуПо_Коду(КодКоробки);
		ПараметрыКоробки	= новый Структура;
		ПараметрыКоробки.Вставить("Коробка",			Коробка_Ссылка);
		ПараметрыКоробки.Вставить("ПунктВыдачи",		ПунктВыдачи);
		ПараметрыКоробки.Вставить("Организатор",		СП_РаботаСоСправочниками.ПолучитьОрганизатораПо_Коду(КодОрганизатора));
		ПараметрыКоробки.Вставить("Количество",			Количество);		
		ПараметрыКоробки.Вставить("ШК", 		  		СП_РаботаСоСправочниками.ПолучитьМегаордерПоШК(ШК));
		СП_РаботаСоСправочниками.ОбновитьМегаордер(ПараметрыКоробки.ШК, ПараметрыКоробки);
		
		ПараметрыКоробки.Вставить("ВидСтикера",			Перечисления.ВидыСтикеров.ГС);
		ПараметрыКоробки.Вставить("ТочкаНазначения",	ПунктВыдачи);
		ПараметрыКоробки.Вставить("КРазбору",			КРазбору);

		СП_РаботаСоСправочниками.ОбновитьКоробку(ПараметрыКоробки.Коробка, ПараметрыКоробки);
		Если Коробка_Ссылка.Догрузить Тогда
			аспПроцедурыОбменаДанными.ДогрузитьЭлементСправочникаССайтаВФоне(Коробка_Ссылка);
		КонецЕсли;	
		
		ПараметрыКоробки.Вставить("Заказ",				ПараметрыКоробки.Коробка);
		ПараметрыКоробки.Вставить("Транзит",			Константы.СвояТочка.Получить() <> ПунктВыдачи);
		Возврат ПараметрыКоробки;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК (44) группового стикера. ШК = """+ШК+"""");
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция ПолучитьСобранныйЗаказ(ШК)
	Если 		СтрНачинаетсяС(ШК,"45") Тогда       
		
		КодЗаказа		= Сред(ШК,3,8);
		
		СобранныйЗаказ	= СП_РаботаСоСправочниками.ПолучитьСобранныйЗаказПо_Коду(КодЗаказа);
							 
		ПараметрыШК		= Новый Структура("Покупка, СобранныйЗаказ, ПунктВыдачи", 
											СобранныйЗаказ,СобранныйЗаказ,Константы.ПунктВыдачиКурьерскойДоставки.Получить());
		СП_РаботаСоСправочниками.ОбновитьМегаордер(СобранныйЗаказ.ШК, ПараметрыШК);
							 
		ПараметрыЗаказа	= новый Структура;
		ПараметрыЗаказа.Вставить("Заказ",				СобранныйЗаказ);
		ПараметрыЗаказа.Вставить("ПунктВыдачи",		константы.ПунктВыдачиКурьерскойДоставки.Получить());
		ПараметрыЗаказа.Вставить("ШК", 		  		СобранныйЗаказ.ШК);
		Возврат ПараметрыЗаказа;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК (45) заказа Курьерской доставки. ШК = """+ШК+"""");
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция ПолучитьСотрудника(ШК) 			
	Если СтрНачинаетсяС(ШК,"55")  Тогда       //Посылка
		КодСотрудника		= Сред(ШК,3,5);		
		Сотрудник_Ссылка	= Справочники.Сотрудники.НайтиПоКоду(КодСотрудника);
		Возврат Новый Структура("Сотрудник", Сотрудник_Ссылка);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК Сотрудника. ШК = """+ШК+"""");
		Возврат Неопределено;
	КонецЕсли;		

КонецФункции

Функция ПолучитьГабарит(ШК) 			
	
	Если СтрНачинаетсяС(ШК,"62")  Тогда       //Посылка
		КодГабарита		= Формат(Число(Сред(ШК,3,9)),"ЧГ=0");		
		Габарит_Ссылка	= Справочники.Габариты.НайтиПоКоду(КодГабарита);
		
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТарифыСрезПоследних.ЦенаХранения КАК ЦенаХранения,
		|	ТарифыСрезПоследних.СрокХранения КАК СрокХранения,
		|	ТарифыСрезПоследних.Штраф КАК Штраф,
		|	ТарифыСрезПоследних.Заморозка КАК Заморозка,
		|	ТарифыСрезПоследних.негабарит КАК негабарит,
		|	ТарифыСрезПоследних.ЦенаЗаКГ КАК ЦенаЗаКГ,
		|	ТарифыСрезПоследних.ЦенаЗаКуб КАК ЦенаЗаКуб,
		|	ТарифыСрезПоследних.Отменен КАК Отменен
		|ИЗ
		|	РегистрСведений.Тарифы.СрезПоследних(, Габарит = &Габарит) КАК ТарифыСрезПоследних
		|ГДЕ
		|	НЕ ТарифыСрезПоследних.Отменен";
	
	Запрос.УстановитьПараметр("Габарит", Габарит_Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если 	РезультатЗапроса.Пустой() Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не усстановлена стоимость расчета для габарита; "+Габарит_Ссылка);
		негабарит = Ложь;
		Габарит  = Справочники.Габариты.ПустаяСсылка();
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		негабарит = Выборка.негабарит;
		Габарит = Габарит_Ссылка;
	КонецЕсли;
		
		
		Возврат Новый Структура("Габарит, Негабарит",Габарит, негабарит);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК габарита . ШК = """+ШК+"""");
		Возврат Неопределено;
	КонецЕсли;		

КонецФункции

Функция ПолучитьМестоХранения(ШК) 		
	
	Если СтрНачинаетсяС(ШК,"63")  Тогда       //Посылка
		КодМестаХранения		= Сред(ШК,3,9);		
		МестоХранения_Ссылка	= Справочники.МестаХранения.НайтиПоКоду(КодМестаХранения);
		
		Возврат новый Структура("МестоХранения",МестоХранения_Ссылка);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК Места хранения. ШК = """+ШК+"""");
		Возврат Неопределено;
	КонецЕсли;		

КонецФункции

Функция ПолучитьУчастника(ШК) 		
	
	Если СтрНачинаетсяС(ШК,"65")  Тогда       //Участник
		Код_Участника		= Сред(ШК,3,9);		
		Участник_Ссылка		= СП_РаботаСоСправочниками.ПолучитьУчастникаПо_Коду(Код_Участника);
		
		Возврат новый Структура("Участник",Участник_Ссылка);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК Участника. ШК = """+ШК+"""");
		Возврат Неопределено;
	КонецЕсли;		

КонецФункции



Функция ПолучитьФункциюШК(ШК) 			
		
	Если СтрНачинаетсяС(ШК,"66") и СтрДлина(шк) = 13 Тогда       //Посылка
		Функция_Ссылка	= Справочники.ФункциональныеШК.НайтиПоКоду(ШК);
		Параметры 		= новый Структура;
		Параметры.Вставить("функция", 	  Функция_Ссылка);
		Параметры.Вставить("Действие", 	  Функция_Ссылка.ИмяПредопределенныхДанных);
		Если Параметры.Действие = "РазборКоробкиБезКоробки" Тогда	
			Параметры.Вставить("Коробка", Справочники.Коробки.БезКоробки);
			Параметры.Вставить("Организатор", Справочники.Организаторы.ПустаяСсылка());
		КонецЕсли;	
		
		Возврат Параметры;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК . ШК = """+ШК+"""");
		Возврат Неопределено;
	КонецЕсли;		

КонецФункции	

Функция ПолучитьНоменклатуру(ШК) 		
	Если СтрНачинаетсяС(ШК,"61")  Тогда       
		КодНоменклатуры		= Сред(ШК,3,5);		
		Номенклатура_Ссылка	= СП_РаботаСоСправочниками.ПолучитьНоменклатуруПо_Коду(КодНоменклатуры);
		Возврат новый Структура("Номенклатура",Номенклатура_Ссылка);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК Номенклатуры. ШК = """+ШК+"""");
		Возврат Неопределено;
	КонецЕсли;		

КонецФункции

Функция ПолучитьПунктВыдачи(ШК) 		
	
	Если 	СтрНачинаетсяС(ШК,"64") Тогда       
		КодПунктаВыдачий	= Сред(ШК,3,4);		
		КодДействия			= Сред(ШК,7,2);		
		ПунктВыдачи_Ссылка	= Справочники.ТочкиРаздачи.НайтиПоКоду(КодПунктаВыдачий);
		Действие			= ?(КодДействия = "01","Открыть Выдачу транзита" ,"Открыть Формирование коробки");
		
		Возврат Новый структура("ПунктВыдачи, Действие", ПунктВыдачи_Ссылка, Действие);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК Пункта выдачи. ШК = """+ШК+"""");
		Возврат Неопределено;
	КонецЕсли;		

КонецФункции
	
Функция ПолучитьСупергруппу(ШК) 		
	
	Если 		СтрНачинаетсяС(ШК,"67") Тогда  
		
		КодПунктаВыдачи = Сред(ШК,16,4);
		
		ПунктВыдачи			= СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду(КодПунктаВыдачи);
		ПараметрыМегаордера	= новый Структура;
		ПараметрыМегаордера.Вставить("ПерваяТочка",		ПунктВыдачи);
		ПараметрыМегаордера.Вставить("ШК", 			  			СП_РаботаСоСправочниками.ПолучитьМегаордерПоШК(ШК));
		ПараметрыМегаордера.Вставить("Супергруппа"			,	ПараметрыМегаордера.ШК);
		СП_РаботаСоСправочниками.ОбновитьМегаордер(ПараметрыМегаордера.ШК, ПараметрыМегаордера);
		ПараметрыМегаордера.Вставить("ОткрыватьРазборКоробки"	,Константы.РегистрироватьСупергруппуРазборомКоробки.Получить());
		Если ПараметрыМегаордера.ШК.Состав.Количество() = 0 Тогда
			аспПроцедурыОбменаДанными.ДогрузитьЭлементСправочникаССайтаВФоне(ПараметрыМегаордера.ШК);
		КонецЕсли;
		Возврат ПараметрыМегаордера;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК (67) супергуппы. ШК = """+ШК+"""");
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция ПолучитьВиртуальнуюКарту(ШК) 	
	Если СтрНачинаетсяС(ШК, "23") Тогда 
		соль 	= "mbc|N)UXl!yZ]~`";
		Хеш = Новый ХешированиеДанных(ХешФункция.MD5);
        Хеш.Добавить(Формат(ТекущаяДата(),"ДФ=yyyy-MM-dd")+соль);
        ключ	 	= Хеш.ХешСумма; 
		ключ	 	= нрег(СтрЗаменить(ключ," ","")); 
		//поток   	= ключ.ОткрытьПотокДляЧтения();
		//длинаПотока = поток.Размер();
		//БуферКлюча	= новый БуферДвоичныхДанных(длинаПотока);
		//поток.Прочитать(БуферКлюча, 0, длинаПотока);
		
		Код 		= Сред(ШК,3,СтрДлина(ШК));
		Код			= Base64Значение(Код);
		поток   	= Код.ОткрытьПотокДляЧтения();
		длинаПотока = поток.Размер();
		БуферКода	= новый БуферДвоичныхДанных(длинаПотока);
		поток.Прочитать(БуферКода, 0, длинаПотока);
		
	//	БуферКода.ЗаписатьПобитовоеИсключительноеИли(0, БуферКлюча, длинаПотока); 
		Код32 = "";
		для инд = 0 по длинаПотока-1 цикл
			к = КодСимвола(сред(ключ,инд+1,1));
			а = БуферКода.Получить(инд);
			
			с = ПобитовоеИсключительноеИли(а,к);
			Код32 = Код32 + символ(с)
		КонецЦикла;	
		
		ШК_Разкодированный 	= Формат(AnyToDec(Код32, 32),"ЧГ=0");
		
		длинаКода 			= СтрДлина(ШК_Разкодированный);
		длинаКодаУчастника  = длинаКода-4;
		КодУчастника		= Сред(сокрлп(ШК_Разкодированный),1,длинаКодаУчастника);
		//Участник			= СП_РаботаСоСправочниками.ПолучитьУчастникаПо_Коду(КодУчастника,,Истина);
		Участник			= СП_РаботаСоСправочниками.ПолучитьУчастникаПо_Коду(КодУчастника);
		КартаУчастника		= "С телефона "+ ШК_Разкодированный;
		
		Если формат(ТекущаяДата(),"ДФ=MMdd")<>Сред(ШК_Разкодированный,длинаКодаУчастника+1,4) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Срок карты """+КартаУчастника+""" участника:"+Участник+" истек !",);
			Возврат неопределено;
		КонецЕсли;		
		
		параметрыКарты			= новый Структура;
		параметрыКарты.Вставить("КартаУчастника", 	КартаУчастника);
		параметрыКарты.Вставить("Статус", 			Перечисления.СтатусКартыУчастника.Зарегистрированна);
		параметрыКарты.Вставить("Владелец", 		Участник);
		параметрыКарты.Вставить("Участник", 		Участник);
		параметрыКарты.Вставить("ШК",				ШК_Разкодированный);
		
		Возврат параметрыКарты;		
		
		
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК карты участника. ШК = """+ШК+"""");
		Возврат Неопределено		
	КонецЕсли;
	
КонецФункции	

Функция ПолучитьКартуУчастника(ШК) 		
	
	Если СтрНачинаетсяС(ШК,"22")  Тогда       //Посылка
		Отказ = ложь;
		Если СтрДлина(сокрлп(ШК))=7 Тогда
			КодКарты	= Сред(сокрлп(ШК),3,5);
		ИначеЕсли СтрДлина(сокрлп(ШК))=8 Тогда
			КодКарты	= Сред(сокрлп(ШК),3,6);
		Иначе
			Отказ = истина;
		КонецЕсли;
		Если не Отказ Тогда
			КартаУчастника_Ссылка	= СП_РаботаСоСправочниками.ПолучитьКартуУчастникаПо_Коду(КодКарты);
			параметрыКарты			= новый Структура;
			параметрыКарты.Вставить("КартаУчастника", 	КартаУчастника_Ссылка);
			параметрыКарты.Вставить("Статус", 			КартаУчастника_Ссылка.Статус);
			параметрыКарты.Вставить("Владелец", 		?(КартаУчастника_Ссылка.Владелец = Справочники.Участники.нулевой, Неопределено, КартаУчастника_Ссылка.Владелец));
			параметрыКарты.Вставить("Участник", 		параметрыКарты.Владелец);
			
			Возврат параметрыКарты;
		КонецЕсли;		
	КонецЕсли;		
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК карты участника. ШК = """+ШК+"""");
	Возврат Неопределено;
КонецФункции

Функция ПолучитьШтрихКодПриемаВозврата(ШК) 	
	//24AAAGDxACEwYC
	
	Если СтрНачинаетсяС(ШК, "24") Тогда      //24AVFQBRFeQwRQ
		соль 	= "mbc|N)UXl!yZ]~`";
		Хеш = Новый ХешированиеДанных(ХешФункция.MD5);
		Хеш.Добавить(Формат(ТекущаяДата(),"ДФ=yyyy-MM-dd")+соль);
		ключ	 	= Хеш.ХешСумма; 
		ключ	 	= нрег(СтрЗаменить(ключ," ","")); 
		//поток   	= ключ.ОткрытьПотокДляЧтения();
		//длинаПотока = поток.Размер();
		//БуферКлюча	= новый БуферДвоичныхДанных(длинаПотока);
		//поток.Прочитать(БуферКлюча, 0, длинаПотока);
		
		Код 		= Сред(ШК,3,СтрДлина(ШК));
		Код			= Base64Значение(Код);
		поток   	= Код.ОткрытьПотокДляЧтения();
		длинаПотока = поток.Размер();
		БуферКода	= новый БуферДвоичныхДанных(длинаПотока);
		поток.Прочитать(БуферКода, 0, длинаПотока);
		
		//	БуферКода.ЗаписатьПобитовоеИсключительноеИли(0, БуферКлюча, длинаПотока); 
		Код32 = "";
		для инд = 0 по длинаПотока-1 цикл
			к = КодСимвола(сред(ключ,инд+1,1));
			а = БуферКода.Получить(инд);
			
			с = ПобитовоеИсключительноеИли(а,к);
			Код32 = Код32 + символ(с)
		КонецЦикла;	
		
		ШК_Разкодированный 	= Формат(AnyToDec(Код32, 32),"ЧГ=0");
		
		длинаКода 			= СтрДлина(ШК_Разкодированный);
		длинаКодаУчастника  = длинаКода-4;
		КодМегаордера		= Сред(сокрлп(ШК_Разкодированный),1,длинаКодаУчастника);
		//Участник			= СП_РаботаСоСправочниками.ПолучитьУчастникаПо_Коду(КодУчастника,,Истина);
		//Участник			= СП_РаботаСоСправочниками.ПолучитьУчастникаПо_Коду(КодУчастника);
		//КартаУчастника		= "С телефона "+ ШК_Разкодированный;
		
		Если формат(ТекущаяДата(),"ДФ=MMdd")<>Сред(ШК_Разкодированный,длинаКодаУчастника+1,4) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При сдачи возврата по штрих коду """+ШК_Разкодированный+""", возникла ошибка (срок штрих кода истек)",);
			Возврат неопределено;
		КонецЕсли;	
		
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		// Данный фрагмент построен конструктором.
		// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
		
			
			
			параметрыКарты			= новый Структура;
			параметрыКарты.Вставить("КодМегаордера", 	КодМегаордера);
			параметрыКарты.Вставить("ШК",				ШК_Разкодированный);
		Возврат	параметрыКарты
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК приема возврата. ШК = """+ШК+"""");
		Возврат Неопределено		
	КонецЕсли;
	
КонецФункции	


Функция ПолучитьШтрихКодПриемаВозврата_25(ШК) 	
	//24AAAGDxACEwYC
	
	Если СтрНачинаетсяС(ШК, "25") Тогда      //24AVFQBRFeQwRQ
		соль 	= "mbc|N)UXl!yZ]~`";
		Хеш = Новый ХешированиеДанных(ХешФункция.MD5);
		Хеш.Добавить(соль);
		ключ	 	= Хеш.ХешСумма; 
		ключ	 	= нрег(СтрЗаменить(ключ," ","")); 
		//поток   	= ключ.ОткрытьПотокДляЧтения();
		//длинаПотока = поток.Размер();
		//БуферКлюча	= новый БуферДвоичныхДанных(длинаПотока);
		//поток.Прочитать(БуферКлюча, 0, длинаПотока);
		
		Код 		= Сред(ШК,3,СтрДлина(ШК));
		Код			= Base64Значение(Код);
		поток   	= Код.ОткрытьПотокДляЧтения();
		длинаПотока = поток.Размер();
		БуферКода	= новый БуферДвоичныхДанных(длинаПотока);
		поток.Прочитать(БуферКода, 0, длинаПотока);
		
		//	БуферКода.ЗаписатьПобитовоеИсключительноеИли(0, БуферКлюча, длинаПотока); 
		Код32 = "";
		для инд = 0 по длинаПотока-1 цикл
			к = КодСимвола(сред(ключ,инд+1,1));
			а = БуферКода.Получить(инд);
			
			с = ПобитовоеИсключительноеИли(а,к);
			Код32 = Код32 + символ(с)
		КонецЦикла;	
		
		ШК_Разкодированный 	= Формат(AnyToDec(Код32, 32),"ЧГ=0");
		
		//длинаКода 			= СтрДлина(ШК_Разкодированный);
		//длинаКодаУчастника  = длинаКода-4;
		КодМегаордера		= ШК_Разкодированный;
		//Участник			= СП_РаботаСоСправочниками.ПолучитьУчастникаПо_Коду(КодУчастника,,Истина);
		//Участник			= СП_РаботаСоСправочниками.ПолучитьУчастникаПо_Коду(КодУчастника);
		//КартаУчастника		= "С телефона "+ ШК_Разкодированный;
		
		//Если формат(ТекущаяДата(),"ДФ=MMdd")<>Сред(ШК_Разкодированный,длинаКодаУчастника+1,4) Тогда
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При сдачи возврата по штрих коду """+ШК_Разкодированный+""", возникла ошибка (срок штрих кода истек)",);
		//	Возврат неопределено;
		//КонецЕсли;	
		
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		// Данный фрагмент построен конструктором.
		// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
		
			
			
			параметрыКарты			= новый Структура;
			параметрыКарты.Вставить("КодМегаордера", 	КодМегаордера);
			параметрыКарты.Вставить("ШК",				ШК_Разкодированный);
		Возврат	параметрыКарты
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК приема возврата. ШК = """+ШК+"""");
		Возврат Неопределено		
	КонецЕсли;
	
КонецФункции	


Функция ПолучитьДокументРасходная(ШК)
	Если СтрНачинаетсяС(ШК,"68")  Тогда 
		префикс			= Константы.ПрефиксУзлаРаспределеннойИнформационнойБазы.Получить();
		НомерДокумента 	= ?(префикс = "","00",префикс)+"-"+Прав(ШК,СтрДлина(ШК)-2);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Расходная.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Расходная КАК Расходная
		|ГДЕ
		|	Расходная.Номер = &Номер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Расходная.Дата УБЫВ";
		
		Запрос.УстановитьПараметр("Номер", НомерДокумента);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			
			документ_Ссылка	= ВыборкаДетальныеЗаписи.Ссылка;
			Если не ЗначениеЗаполнено(документ_Ссылка) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найден не оплаченный Документ ""Расходная"". № """+НомерДокумента+"""");
			КонецЕсли;	
			
			параметры			= новый Структура;
			Параметры.Вставить("Ссылка",	документ_Ссылка);
			Возврат параметры;
		КонецЕсли;
	КонецЕсли;

	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК Документа ""Расходная"". ШК = """+ШК+"""");
	Возврат Неопределено;
КонецФункции	

Функция ПолучитьДокументДвижение(ШК)
	Если СтрНачинаетсяС(ШК,"69")  Тогда 
		префикс			= Константы.ПрефиксУзлаРаспределеннойИнформационнойБазы.Получить();
		НомерДокумента 	= ?(префикс = "","00",префикс)+"-"+Прав(ШК,СтрДлина(ШК)-2);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Движение.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Движение КАК Движение
		|ГДЕ
		|	Движение.Номер = &Номер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Движение.Дата УБЫВ";
		
		Запрос.УстановитьПараметр("Номер", НомерДокумента);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			
			документ_Ссылка	= ВыборкаДетальныеЗаписи.Ссылка;
			Если не ЗначениеЗаполнено(документ_Ссылка) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найден Документ ""Движение товара"". № """+НомерДокумента+"""");
			КонецЕсли;	
			
			параметры			= новый Структура;
			Параметры.Вставить("Ссылка",	документ_Ссылка);
			Возврат параметры;
		КонецЕсли;
	КонецЕсли;

	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК Документа ""Движение товара"". ШК = """+ШК+"""");
	Возврат Неопределено;
КонецФункции	


Функция ПолучитьДокументВыдачаТранзита(ШК)
	Если СтрНачинаетсяС(ШК,"70")  Тогда 
		префикс			= Константы.ПрефиксУзлаРаспределеннойИнформационнойБазы.Получить();
		НомерДокумента 	= ?(префикс = "","00",префикс)+"-"+Прав(ШК,СтрДлина(ШК)-2);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВыдачаТранзита.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВыдачаТранзита КАК ВыдачаТранзита
		|ГДЕ
		|	ВыдачаТранзита.Номер = &Номер
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВыдачаТранзита.Дата УБЫВ";
		
		Запрос.УстановитьПараметр("Номер", НомерДокумента);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			
			документ_Ссылка	= ВыборкаДетальныеЗаписи.Ссылка;
			Если не ЗначениеЗаполнено(документ_Ссылка) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найден Документ ""Выдача транзита"". № """+НомерДокумента+"""");
			КонецЕсли;	
			
			параметры			= новый Структура;
			Параметры.Вставить("Ссылка",	документ_Ссылка);
			Возврат параметры;
		КонецЕсли;
	КонецЕсли;

	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректный ШК Документа ""Расходная"". ШК = """+ШК+"""");
	Возврат Неопределено;
КонецФункции	



#КонецОбласти

Функция ШКДокумента(Док) Экспорт
	ШтрихКодДокумента = "";
	Если ТипЗнч(Док) = Тип("ДокументСсылка.Расходная") Тогда
		ШтрихКодДокумента = "68" + Прав(Док.Номер, СтрДлина(Док.Номер)- 3);
	ИначеЕсли ТипЗнч(Док) = Тип("ДокументСсылка.Движение") Тогда
		ШтрихКодДокумента = "69" + Прав(Док.Номер, СтрДлина(Док.Номер)- 3);
	ИначеЕсли ТипЗнч(Док) = Тип("ДокументСсылка.ВыдачаТранзита") Тогда
		ШтрихКодДокумента = "70" + Прав(Док.Номер, СтрДлина(Док.Номер)- 3);


		
	КонецЕсли;
	Возврат ШтрихКодДокумента;	
	
КонецФункции



#Область Вспомогательные

функция ДополнитьШтрихКодПроверочнымКодом(ШК)
	СуммаСимволов	=0;
	СтрокаЧтения 	= ШК;
	Для к = 1 По СтрДлина(СтрокаЧтения) Цикл
		ТекущийСимвол = Сред(СтрокаЧтения, к, 1);
		СуммаСимволов = СуммаСимволов+ к*Число(ТекущийСимвол);
	КонецЦикла;		
	РасщитанныйКод	= Число(СуммаСимволов%99);
	ШК_Строка 		= ШК+?(РасщитанныйКод=0,"00",формат(РасщитанныйКод,"ЧЦ=2; ЧН=0; ЧВН=; ЧГ=0"));
	Возврат ШК_Строка;
КонецФункции	

Функция КорректныйШК(ШК,ПроверочныйКод)
	СуммаСимволов=0;
	СтрокаЧтения = ШК;
	Для к = 1 По СтрДлина(СтрокаЧтения)-2 Цикл
		ТекущийСимвол = Сред(СтрокаЧтения, к, 1);
		СуммаСимволов = СуммаСимволов+ к*Число(ТекущийСимвол);
	КонецЦикла;		
	РасщитанныйКод=Число(СуммаСимволов%99);
	Если Число(ПроверочныйКод)<>РасщитанныйКод Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не верно считан ШК попробуйте еще раз");
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции

#КонецОбласти


#Область СистемыСчисления

Функция DecToAny(Знач тЗначение, тОснование)
   тРезультат = "";
 
   Пока тЗначение > 0 Цикл
      тРезультат = Сред(НРег("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"), тЗначение%тОснование + 1, 1) + тРезультат;
      тЗначение = Цел(тЗначение/тОснование) ;
   КонецЦикла;
 
   Возврат тРезультат;
КонецФункции

Функция AnyToDec(Знач тЗначение, тОснование)
   тРезультат=0;
 
   тДлина = СтрДлина(тЗначение);
   Для тСимвол = 1 По СтрДлина(тЗначение) Цикл
      тМножитель = 1;
      Для тСчет = 1 По тДлина-тСимвол Цикл 
         тМножитель = тМножитель * тОснование;
      КонецЦикла;
 
      тРезультат=тРезультат + (Найти(НРег("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"), Сред(тЗначение, тСимвол, 1))-1) * тМножитель;
   КонецЦикла;
 
   Возврат Окр(тРезультат);
КонецФункции

#КонецОбласти


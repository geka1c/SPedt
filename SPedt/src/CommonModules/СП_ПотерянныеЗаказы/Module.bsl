Функция  РасчитатьОстатки() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПотерянныеЗаказыОстатки.КоличествоОстаток КАК Количество
		|ПОМЕСТИТЬ Сбор
		|ИЗ
		|	РегистрНакопления.ПотерянныеЗаказы.Остатки КАК ПотерянныеЗаказыОстатки
		|ГДЕ
		|	ПотерянныеЗаказыОстатки.КоличествоОстаток > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(Сбор.Количество) КАК Количество
		|ИЗ
		|	Сбор КАК Сбор";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ?(ВыборкаДетальныеЗаписи.Количество =Null, 0, ВыборкаДетальныеЗаписи.Количество);	
	КонецЕсли;
	Возврат 0;	
КонецФункции


функция ПолучитьТекущийДокумент() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПотерянныеЗаказы.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПотерянныеЗаказы КАК ПотерянныеЗаказы
		|ГДЕ
		|	ПотерянныеЗаказы.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПотерянныеЗаказы.Дата УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;
	Возврат Неопределено;
	
КонецФункции	



процедура СформироватьТекущийДокумент() Экспорт
	ТекущаяДата 		= ТекущаяДата();
	срокдоставки 		= константы.срокДоставкиЗаказовВДн.Получить();
	ДатаДокумента 		= КонецДня(ТекущаяДата) - срокдоставки * 60*60*24;
	последнийДокумент	= ПолучитьТекущийДокумент();
	Если ПоследнийДокумент = Неопределено Тогда
		ДатаПоследнегоДокумента = НачалоДня(ДатаДокумента)-1;
	иначе
		ДатаПоследнегоДокумента = последнийДокумент.Дата;
	КонецЕсли;
	
	Если КонецДня(ДатаПоследнегоДокумента) < ДатаДокумента Тогда
		док = Документы.ПотерянныеЗаказы.СоздатьДокумент();
		док.Дата = КонецДня(ДатаПоследнегоДокумента)+60*60*24;
		док.ЗаполнитьПросроченнымиЗаказами();
		Попытка
			док.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры	
	
	
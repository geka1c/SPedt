Процедура Чек(ТабДок, Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Чек)
	Макет = Документы.ПередачаВозвратовОрганизаторам.ПолучитьМакет("Чек");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаВозвратовОрганизатору.Дата,
	|	ПередачаВозвратовОрганизатору.Номер,
	|	ПередачаВозвратовОрганизатору.Покупки.(
	|		Организатор КАК организатор,
	|		Участник,
	|		Покупка,
	|		Количество
	|	)
	|ИЗ
	|	Документ.ПередачаВозвратовОрганизаторам КАК ПередачаВозвратовОрганизатору
	|ГДЕ
	|	ПередачаВозвратовОрганизатору.Ссылка В(&Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПередачаВозвратовОрганизатору.Покупки.Организатор.Наименование";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПокупкиШапка = Макет.ПолучитьОбласть("ПокупкиШапка");
	ОбластьПокупки = Макет.ПолучитьОбласть("Покупки");
	ТабДок.Очистить();

	//ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		//Если ВставлятьРазделительСтраниц Тогда
		//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		//ТабДок.Вывести(ОбластьПокупкиШапка);
		ВыборкаПокупки = Выборка.Покупки.Выбрать();
		Пока ВыборкаПокупки.Следующий() Цикл
			ОбластьПокупки.Параметры.Заполнить(ВыборкаПокупки);
			ТабДок.Вывести(ОбластьПокупки, ВыборкаПокупки.Уровень());
		КонецЦикла;

		//ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры






//#Область Проведение

//Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
//	Запрос = Новый Запрос;
//	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
//	
//	ТекстыЗапроса = Новый СписокЗначений;

//	Получить_ТекстЗапроса_Возвраты(Запрос, ТекстыЗапроса, Регистры);

//	Получить_ТекстЗапроса_Расход(Запрос, ТекстыЗапроса, Регистры);
//	
//	ПроведениеСерверСП.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
//КонецПроцедуры


//Функция Получить_ТекстЗапроса_Возвраты(Запрос, ТекстыЗапроса, Регистры) 
//	
//	ИмяРегистра = "Возвраты";
//	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
//		Возврат "";
//	КонецЕсли; 
//	ТекстЗапроса = 
//		 "ВЫБРАТЬ
//		 |	&Период КАК Период,
//		 |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
//		 |	ПередачаВозвратовОрганизаторамПокупки.Организатор КАК Организатор,
//		 |	ПередачаВозвратовОрганизаторамПокупки.участник как участник,
//		 |	ПередачаВозвратовОрганизаторамПокупки.Покупка КАК Покупка,
//		 |	ВозвратГруппОрганизаторуВозвраты.МестоХранения КАК МестоХранения,
//		 |	1 КАК Количество,
//		 |	ВозвратГруппОрганизаторуВозвраты.Ссылка КАК Партия
//		 |ИЗ
//		 |	Документ.ПередачаВозвратовОрганизаторам.Покупки КАК ПередачаВозвратовОрганизаторамПокупки
//		 |ГДЕ
//		 |	ВозвратГруппОрганизаторуВозвраты.Ссылка = &Ссылка";


//	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
//	Возврат ТекстЗапроса;
//КонецФункции

//Функция Получить_ТекстЗапроса_Расход(Запрос, ТекстыЗапроса, Регистры) Экспорт
//	ИмяРегистра = "Расход";
//	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
//		Возврат "";
//	КонецЕсли; 
//	ТекстЗапроса = "ВЫБРАТЬ
//	               |	&Период КАК Период,
//	               |	Транзит.ПокупкаСсылка КАК Покупка,
//	               |	Значение(Перечисление.ТипРасхода.Транзит) как ТипРасхода,
//				   |	Истина как Списано,
//	               |	Транзит.Габарит КАК Габарит,
//	               |	Транзит.Участник КАК Участник,
//	               |	Транзит.ПокупкаСсылка.наименование КАК ПокупкаСпр,
//	               |	Транзит.Количество КАК Количество
//	               |ИЗ
//	               |	РегистрНакопления.Транзит КАК Транзит
//	               |ГДЕ
//	               |	Транзит.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
//	               |	И ТИПЗНАЧЕНИЯ(Транзит.ПокупкаСсылка) = ТИП(Справочник.Коробки)
//	               |	И Транзит.Регистратор = &ДокументОтправления";
//	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
//	Возврат ТекстЗапроса;

//КонецФункции

//#КонецОбласти
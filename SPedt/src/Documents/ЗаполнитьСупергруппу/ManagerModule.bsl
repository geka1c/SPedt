#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	ТекстыЗапроса = Новый СписокЗначений;
	СтоСПОбмен_Общий.Получить_ТекстЗапроса_Обмен100сп (Запрос, ТекстыЗапроса, Регистры);
	СтоСПОбмен_Общий.Получить_ТекстЗапроса_Обмен100СП_РН(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.Комментарий КАК Комментарий
	|ИЗ
	|	Документ.Приходная КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                                                         Реквизиты.Период);
	Запрос.УстановитьПараметр("Номер",                         Реквизиты.Номер);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",       ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяОбъекта()));
	Запрос.УстановитьПараметр("Комментарий",                   Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("ПометкаУдаления",               Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("Проведен",                      Реквизиты.Проведен);
КонецПроцедуры

#КонецОбласти


#Область Обмен100сп
Функция ПолучитьТэг_superGroup(Ссылка,НомерСтроки=Неопределено) Экспорт
	ОтборПоСсылке=?(ТипЗнч(Ссылка)=Тип("Массив")," В (&Ссылка) "," = &Ссылка ");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаполнитьСупергруппу.ДокументОснование.Дата КАК Дата,
		|	ЗаполнитьСупергруппу.Супергруппа КАК Супергруппа,
		|	ЗаполнитьСупергруппу.Комментарий КАК Комментарий,
		|	ЗаполнитьСупергруппу.Маршрут.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		ТранспортнаяКомпания КАК ТранспортнаяКомпания,
		|		ТрэкНомер КАК ТрэкНомер,
		|		ДатаДоставкиПлан КАК ДатаДоставкиПлан,
		|		ДатаДоставкиФакт КАК ДатаДоставкиФакт,
		|		Комментарий КАК Комментарий
		|	) КАК Маршрут,
		|	ЗаполнитьСупергруппу.ДокументОснование.Покупки.(
		|		Ссылка КАК Ссылка,
		|		Покупка КАК Покупка,
		|		Участник КАК Участник,
		|		Подбор КАК Подбор
		|	) КАК Покупки
		|ИЗ
		|	Документ.ЗаполнитьСупергруппу КАК ЗаполнитьСупергруппу
		|ГДЕ
		|	ЗаполнитьСупергруппу.Ссылка "+ОтборПоСсылке;
		
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
		

	
	ВыборкаСупергруппа = РезультатЗапроса.Выбрать();
	
	ЗаписьXML=новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку("UTF-8");	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Служебный");	
	
	Пока ВыборкаСупергруппа.Следующий() Цикл
		ЗаписьXML.ЗаписатьНачалоЭлемента("superGroup");
		СтоСП.Вставить_Тэг(ЗаписьXML,"documentNumber",		ВыборкаСупергруппа.Супергруппа.Код);
		СтоСП.Вставить_Тэг(ЗаписьXML,"nextDistributorCode", Формат(Число(ВыборкаСупергруппа.Супергруппа.ПунктВыдачи.Код)));
		СтоСП.Вставить_Тэг(ЗаписьXML,"processedAt",			ВыборкаСупергруппа.Дата);
		СтоСП.Вставить_Тэг(ЗаписьXML,"deliveryDescription",	ВыборкаСупергруппа.Комментарий);
		
		Маршрут=ВыборкаСупергруппа.Маршрут;
		ВыборкаМаршрут=Маршрут.Выбрать();
		ЗаписьXML.ЗаписатьНачалоЭлемента("stages");
		Пока ВыборкаМаршрут.Следующий() Цикл
			ЗаписьXML.ЗаписатьНачалоЭлемента("stage");
			СтоСП.Вставить_Тэг(ЗаписьXML,"ordinalNumber",			ВыборкаМаршрут.НомерСтроки);
			СтоСП.Вставить_Тэг(ЗаписьXML,"estimateDeliveryDate",	ВыборкаМаршрут.ДатаДоставкиПлан);
			СтоСП.Вставить_Тэг(ЗаписьXML,"deliveryNumber",			ВыборкаМаршрут.ТрэкНомер);
			СтоСП.Вставить_Тэг(ЗаписьXML,"deliveryServiceName",		ВыборкаМаршрут.ТранспортнаяКомпания.Наименование);
			СтоСП.Вставить_Тэг(ЗаписьXML,"deliveryDescription",		ВыборкаМаршрут.Комментарий);
			ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЦикла;
		ЗаписьXML.ЗаписатьКонецЭлемента();  //stages

		
		Покупки=ВыборкаСупергруппа.Покупки;
		ВыборкаПокупки=Покупки.Выбрать();
		ЗаписьXML.ЗаписатьНачалоЭлемента("orders");
		Пока ВыборкаПокупки.Следующий() Цикл
			Если не ВыборкаПокупки.Подбор Тогда Продолжить; КонецЕсли;
			Если ТипЗнч(ВыборкаПокупки.Покупка)=Тип("СправочникСсылка.Покупки") Тогда
				ЗаписьXML.ЗаписатьНачалоЭлемента("order");
				СтоСП.Вставить_Тэг(ЗаписьXML,"pid",               Формат(Число(ВыборкаПокупки.Покупка.Код),"ЧГ=0"));
				СтоСП.Вставить_Тэг(ЗаписьXML,"orderType",         "sp");
				СтоСП.Вставить_Тэг(ЗаписьXML,"uid",				  Формат(Число(ВыборкаПокупки.Участник.Код),"ЧГ=0"));
				ЗаписьXML.ЗаписатьКонецЭлемента();
			ИначеЕсли ТипЗнч(ВыборкаПокупки.Покупка)=Тип("СправочникСсылка.Посылки") Тогда
				ЗаписьXML.ЗаписатьНачалоЭлемента("order");
				СтоСП.Вставить_Тэг(ЗаписьXML,"packageId",               Формат(Число(ВыборкаПокупки.Покупка.Код),"ЧГ=0"));
				СтоСП.Вставить_Тэг(ЗаписьXML,"orderType",         "package");
				ЗаписьXML.ЗаписатьКонецЭлемента();
			ИначеЕсли ТипЗнч(ВыборкаПокупки.Покупка)=Тип("СправочникСсылка.Пристрой") Тогда
				ЗаписьXML.ЗаписатьНачалоЭлемента("order");					
				СтоСП.Вставить_Тэг(ЗаписьXML,"orderId",           Формат(Число(ВыборкаПокупки.Покупка.Код),"ЧГ=0"));
				СтоСП.Вставить_Тэг(ЗаписьXML,"orderType",         "bulletin");
				СтоСП.Вставить_Тэг(ЗаписьXML,"stickerId",         Формат(Число(Сред(ВыборкаПокупки.Покупка.Код,3,10)),"ЧГ=0"));
				СтоСП.Вставить_Тэг(ЗаписьXML,"uid",				  Формат(Число(ВыборкаПокупки.Участник.Код),"ЧГ=0"));
				ЗаписьXML.ЗаписатьКонецЭлемента();			
			ИначеЕсли ТипЗнч(ВыборкаПокупки.Покупка)=Тип("СправочникСсылка.Заказы") Тогда
				ЗаписьXML.ЗаписатьНачалоЭлемента("order");					
				СтоСП.Вставить_Тэг(ЗаписьXML,"orderId",           Формат(Число(ВыборкаПокупки.Покупка.Код),"ЧГ=0"));
				СтоСП.Вставить_Тэг(ЗаписьXML,"orderType",         "shop");
				СтоСП.Вставить_Тэг(ЗаписьXML,"uid",				  Формат(Число(ВыборкаПокупки.Участник.Код),"ЧГ=0"));
				ЗаписьXML.ЗаписатьКонецЭлемента();			
			ИначеЕсли ТипЗнч(ВыборкаПокупки.Покупка)=Тип("СправочникСсылка.Коробки") Тогда
				Если ВыборкаПокупки.Покупка.ВидСтикера = Перечисления.ВидыСтикеров.ГС Тогда
					ЗаписьXML.ЗаписатьНачалоЭлемента("order");					
					СтоСП.Вставить_Тэг(ЗаписьXML,"orderId",           Формат(Число(ВыборкаПокупки.Покупка.Код),"ЧГ=0"));
					СтоСП.Вставить_Тэг(ЗаписьXML,"orderType",         "group");
					ЗаписьXML.ЗаписатьКонецЭлемента();							
				Иначе	
					Для каждого стрКоробки из ВыборкаПокупки.Покупка.Состав Цикл
						Если ТипЗнч(стрКоробки.Покупка)=Тип("СправочникСсылка.Покупки") Тогда
							ЗаписьXML.ЗаписатьНачалоЭлемента("order");
							СтоСП.Вставить_Тэг(ЗаписьXML,"orderType",	"sp");
							СтоСП.Вставить_Тэг(ЗаписьXML,"orderId",		Формат(Число(стрКоробки.КодЗаказа),"ЧГ=0"));
							СтоСП.Вставить_Тэг(ЗаписьXML,"uid",			Формат(Число(стрКоробки.Участник.Код),"ЧГ=0"));
							ЗаписьXML.ЗаписатьКонецЭлемента();
						ИначеЕсли ТипЗнч(стрКоробки.Покупка)=Тип("СправочникСсылка.Заказы") Тогда
							ЗаписьXML.ЗаписатьНачалоЭлемента("order");
							СтоСП.Вставить_Тэг(ЗаписьXML,"orderType",	"shop");
							СтоСП.Вставить_Тэг(ЗаписьXML,"orderId",		Формат(Число(стрКоробки.КодЗаказа),"ЧГ=0"));
							СтоСП.Вставить_Тэг(ЗаписьXML,"uid",			Формат(Число(стрКоробки.Участник.Код),"ЧГ=0"));
							ЗаписьXML.ЗаписатьКонецЭлемента();
						КонецЕсли
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ЗаписьXML.ЗаписатьКонецЭлемента();     //orders
		
		ЗаписьXML.ЗаписатьКонецЭлемента();    //superGroup
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();    //Служебный
	рез=ЗаписьXML.Закрыть();
	рез=СтрЗаменить(рез,"<Служебный>","");
	рез=СтрЗаменить(рез,"</Служебный>","");
	Возврат рез;
	
КонецФункции
#КонецОбласти

Функция ПолноеИмяОбъекта()
	Возврат "Документ.ЗаполнитьСупергруппу";
КонецФункции

#Область ШтрихКоды

&НаКлиенте
Процедура ВвестиШтрихКодВручную(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаВводаШК",,ЭтотОбъект,,,,Новый ОписаниеОповещения("ВвестиШтрихКодВручную_Завершение", ЭтотОбъект));
	//12000008536904000077
КонецПроцедуры

&НаКлиенте
Процедура ВвестиШтрихКодВручную_Завершение(ШК, ДополнительныеПараметры) Экспорт
	ОбработатьШКнаКлиенте(ШК);
КонецПроцедуры	

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// ПодключаемоеОборудование                
	Если 	ИмяСобытия 	= "ScanData" 					и
			Источник 	= "ПодключаемоеОборудование" 	и
			ВводДоступен()										Тогда
			
			ШК 			= СтоСП_Клиент.ПолучитьШКизПараметров(Параметр);
			ОбработатьШКнаКлиенте(ШК);
			
	КонецЕсли;
	// Конец ПодключаемоеОборудование
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШКнаКлиенте(ШК)
	ДанныеШК    = СП_Штрихкоды.ПолучитьДанныеПоШК(ШК);
	Если Строка(ДанныеШК.Тип) = "Посылка (12)"  		или
		 Строка(ДанныеШК.Тип) = "Покупка (11)" 			или 
		 Строка(ДанныеШК.Тип) = "Заказ100маркета (33)"	или
		 Строка(ДанныеШК.Тип) = "Заказ КД (45)"	или
		 Строка(ДанныеШК.Тип) = "Коробка (44)"					Тогда	
		ДобавитьЗаказ(ДанныеШК);
		
	КонецЕсли;
	Модифицированность			= Истина;
КонецПроцедуры	

&НаКлиенте
Процедура ВыбратьПунктВыдачи(Команда)
	Если Элементы.Посылки.ТекущиеДанные <> Неопределено Тогда
		параметрыФормы = новый Структура;
		параметрыФормы.Вставить("Посылка", 		   			Элементы.Посылки.ТекущиеДанные.Посылка); 
		параметрыФормы.Вставить("ДокументПоступления", 		Объект.Ссылка);               
		параметрыФормы.Вставить("ПунктВыдачиНаСтикере", 	Элементы.Посылки.ТекущиеДанные.ПунктВыдачи);               
		ОткрытьФорму("ОбщаяФорма.ФормаВыбораПунктаВыдачи", 	параметрыФормы ,ЭтотОбъект,,,,Новый ОписаниеОповещения("ВыбратьПунктВыдачи_Завершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;	
КонецПроцедуры



#КонецОбласти


&НаКлиенте
Процедура ДобавитьЗаказ(ДанныеШК) Экспорт
	
	
	Если Строка(ДанныеШК.Тип) = "Посылка (12)" Тогда
			ПсылкаДобавлена = ДобавитьПосылку(ДанныеШК);
			Если ПсылкаДобавлена Тогда
				СтоСП_Клиент.СигналДинамика();
			КонецЕсли;
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаПосылки;
	ИначеЕсли Строка(ДанныеШК.Тип) = "Коробка (44)" Тогда //44352952000899132115000954   44017898000522752026005685
			ЗаказДобавлен = ДобавитьГруппу(ДанныеШК);
			Если ЗаказДобавлен Тогда
				СтоСП_Клиент.СигналДинамика();
			КОнецЕсли;
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаКоробки;
			
	КонецЕсли;

КонецПроцедуры


Функция ДобавитьПосылку(ПараметрыПосылки)
	Посылка 			= ПараметрыПосылки.Посылка;

	новая_строка				= Объект.Посылки.Добавить();
	новая_строка.Посылка	 	= Посылка;
	новая_строка.ШК				= Посылка.ШК;
	Возврат Истина;
КонецФункции


Функция ДобавитьГруппу(параметрыПосылки)
	новая_строка					= Объект.Коробки.Добавить();
	новая_строка.Коробка			= параметрыПосылки.Коробка;
	новая_строка.ШК					= параметрыПосылки.ШК;
	
	Возврат Истина;
КонецФункции





&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)    
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СП_РаботаСДокументами.ПриСозданииНаСервере(ЭтотОбъект);	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//Сканер штрихкода
   СтоСП_Клиент.ПодключитьСканерШК(УникальныйИдентификатор);
КонецПроцедуры



&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
КонецПроцедуры


&НаКлиенте
Процедура ПосылкиПосылкаПриИзменении(Элемент)
	Элементы.Посылки.ТекущиеДанные.ШК = ПолучитьШКПосылки(Элементы.Посылки.ТекущиеДанные.Посылка);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьШКПосылки(Посылка)
	если не ЗначениеЗаполнено(Посылка.ШК) Тогда
		шк =СП_Штрихкоды.ПолучитьМегаордер(Посылка,Посылка.Участник ,Посылка.ПунктВыдачи );			
		СП_РаботаСоСправочниками.ОбновитьПосылку(Посылка,новый Структура("ШК",шк));
		Возврат шк;
	КонецЕсли;;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Посылки.ШК КАК ШК
		|ИЗ
		|	Справочник.Посылки КАК Посылки
		|ГДЕ
		|	Посылки.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Посылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		возврат Выборка.ШК;
	Иначе	
		Возврат		СП_Штрихкоды.ПолучитьМегаордер(Посылка,Посылка.Участник ,Посылка.ПунктВыдачи );	

	КонецЕсли;
КонецФункции

&НаСервере
Процедура ОбновитьНаСервере()
	списокПосылок =  Новый СписокЗначений;
	Для каждого элем из объект.Посылки Цикл
		списокПосылок.Добавить(элем.Посылка);
	КонецЦикла;	
	СтоСПОбмен_Посылки.Загрузить_СоставПосылкиПоКодам(списокПосылок);
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры



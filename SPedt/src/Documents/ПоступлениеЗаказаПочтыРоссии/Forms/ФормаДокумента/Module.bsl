&НаКлиенте
Процедура РасчитатьКОплате() 
    Объект.НадбавкаПунктаВыдачи = Объект.СтоимостьДоставки * Объект.ПроцентНадбавки / 100;
	Объект.СтоимостьИтого = Окр(Объект.СтоимостьДоставки + Объект.НадбавкаПунктаВыдачи,0,РежимОкругления.Окр15как20);
КонецПроцедуры	

&НаКлиенте
Процедура СтоимостьДоставкиПриИзменении(Элемент)
	РасчитатьКОплате(); 
КонецПроцедуры

&НаКлиенте
Процедура ПроцентНадбавкиПриИзменении(Элемент)
	РасчитатьКОплате(); 
КонецПроцедуры

&НаКлиенте
Процедура НадбавкаПунктаВыдачиПриИзменении(Элемент)
	Объект.СуммаДокумента = Окр(Объект.СтоимостьДоставки + Объект.НадбавкаПунктаВыдачи);
КонецПроцедуры


#Область Эквайринг
&НаКлиенте
Процедура ОплатитьКартой(Команда)
	Если не  ПроверитьЗаполнение() Тогда Возврат; КонецЕсли;

	Сумма 				= Объект.СтоимостьИтого;
	Объект.ВидОплаты 	= ПредопределенноеЗначение("Перечисление.ФормыОплаты.ПлатежнаяКарта");
	ОчиститьСообщения();

	Если Объект.ОплатаВыполнена Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Для данного документа уже выполнена оплата платежной картой.'"));
		Возврат;
	КонецЕсли;

		ПараметрыОперации					=	МенеджерОборудованияКлиент.ПараметрыВыполненияЭквайринговойОперации();
		ПараметрыОперации.ТипТранзакции		=	"AuthorizeSales";
		ПараметрыОперации.СуммаОперации 	= 	Сумма;
		ПараметрыОперации.НомерЧека			=	"";
		ПараметрыОперации.СсылочныйНомер 	= 	"";

	МенеджерОборудованияКлиент.ПредложитьВыбратьУстройство(
		Новый ОписаниеОповещения("ОплатитьКартойПредложитьВыбратьЭквайринговыйТерминалЗавершение", ЭтотОбъект, ПараметрыОперации),
		"ЭквайринговыйТерминал",
		НСтр("ru='Выберите эквайринговый терминал'"),
		НСтр("ru='Эквайринговый терминал не подключен'"));
КонецПроцедуры

&НаКлиенте
Процедура ОплатитьКартойПредложитьВыбратьЭквайринговыйТерминалЗавершение(ИдентификаторУстройстваЭТ, ПараметрыОперации) Экспорт
	
	Если ИдентификаторУстройстваЭТ <> Неопределено Тогда
		
		ЭтаФорма.Доступность=Ложь;
		
		Оповещение = новый ОписаниеОповещения("ОплатитьКартойЗавершение", ЭтотОбъект);
		МенеджерОборудованияКлиент.НачатьВыполнениеОперацииНаЭквайринговомТерминале(Оповещение,УникальныйИдентификатор,
			ИдентификаторУстройстваЭТ,, ПараметрыОперации);	
		
		
		ОписаниеОшибки = "";
		РезультатЭТ = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
		                                                                                ИдентификаторУстройстваЭТ,
		                                                                                ОписаниеОшибки);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОплатитьКартойЗавершение(Результат, ДополнительныеПараметры) Экспорт
	ЭтаФорма.Доступность = Истина;
	Если Результат.Результат Тогда
		Если 		Результат.ТипТранзакции = "AuthorizeSales" Тогда
			Объект.ОплатаВыполнена 	= Истина;
			Объект.СсылочныйНомер 	= Результат.СсылочныйНомер;
			Объект.НомерКарты 		= Результат.НомерКарты;
			//ФискализироватьЧекАвтоПослеЗаписи();
		ИначеЕсли 	Результат.ТипТранзакции = "AuthorizeVoid" или 
					Результат.ТипТранзакции = "AuthorizeRefund" Тогда
			Объект.ОплатаВыполнена 	= Ложь;
			Объект.СсылочныйНомер 	= Результат.СсылочныйНомер;
			Объект.НомерКарты 		= Результат.НомерКарты;
			Объект.ВидОплаты 		= ПредопределенноеЗначение("Перечисление.ФормыОплаты.Наличные");
			
		КонецЕсли;
		Если СП_РаботаСДокументами_Клиент.ЗаписатьДокумент(ЭтотОбъект) Тогда
			Если Результат.ТипТранзакции = "AuthorizeSales" Тогда
				ПослеОплаты();
			КонецЕсли;
		КонецЕсли;
	Иначе
		Сообщить("При выполнении операции произошла ошибка "+Результат.ОписаниеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеОплаты()
	
	СП_РаботаСДокументами_Клиент.ЗаписатьДокумент(ЭтотОбъект);
	
	ОповеститьОбИзменении(Объект.Ссылка);
	ФискализироватьЧекАвтоПослеЗаписи();
	УстановитьВидимость();
	Если ЗакрытьПослеОплаты Тогда
		Закрыть();
	КонецЕсли;	
КонецПроцедуры	

#КонецОбласти

 



#Область ФискальныйЧек

&НаКлиенте
Процедура 	ФискализироватьЧекАвтоПослеЗаписи()
	Сумма 		= Объект.СтоимостьИтого;
	
	ДанныеФормы	= Объект;
	Если Сумма=0 тогда Возврат КонецЕсли;
	Если 	ПроверитьЗаполнениеДокумента()	и 
			ПроверитьЗаполнение() 			и  
			СП_ККТ.НужноПечататьЧек(ДанныеФормы)  	Тогда
		
		ОчиститьСообщения();
		
		Если Объект.СтатусККМ <> ПредопределенноеЗначение("Перечисление.СтатусыЧековККМ.Фискализирован") Тогда
			ФискализацияЧека();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФискализироватьЧек(Команда)
	Записать( Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	Если 	ПроверитьЗаполнениеДокумента() и 
			ПроверитьЗаполнение() 				Тогда
		
		ОчиститьСообщения();
		Если Объект.СтатусККМ <> ПредопределенноеЗначение("Перечисление.СтатусыЧековККМ.Фискализирован") Тогда
			ФискализацияЧека(Истина);
		Иначе
			ТекстПредупреждения = НСтр("ru = 'Чек уже фискализирован на фискальном устройстве'");
			ПоказатьПредупреждение( , ТекстПредупреждения, 10);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура 	ФискализацияЧека(Печатать = Ложь) Экспорт
	ЭтаФорма.Доступность 	= Ложь;
	
	данныеформы				= Объект;
	ОбщиеПараметры 		 	= СП_ККТ.ПолучитьШаблонЧека(УстройствоПечати, данныеформы,Печатать);
	ОписаниеОповещения 		= Новый ОписаниеОповещения("ФискализацияЧека_Завершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьФискализациюЧекаНаФискальномУстройстве(ОписаниеОповещения, УникальныйИдентификатор, ОбщиеПараметры, ?(УстройствоПечати.Пустая(), Неопределено, УстройствоПечати));
КонецПроцедуры


&НаКлиенте
Процедура 	ФискализацияЧека_Завершение(РезультатВыполнения, Параметры) Экспорт
	ЭтаФорма.Доступность = Истина;
	Если РезультатВыполнения.Результат Тогда
		Объект.НомерСменыККМ = РезультатВыполнения.ВыходныеПараметры[0];
		Объект.НомерЧекаККМ  = РезультатВыполнения.ВыходныеПараметры[1];
		Объект.СтатусККМ	 = ПредопределенноеЗначение("Перечисление.СтатусыЧековККМ.Фискализирован");
		Объект.Дата   		 = МенеджерОборудованияКлиентПереопределяемый.ДатаСеанса();
		Если Не ЗначениеЗаполнено(Объект.НомерЧекаККМ) Тогда
			Объект.НомерЧекаККМ = 1;
		КонецЕсли;
			
		СП_РаботаСДокументами_Клиент.ЗаписатьДокумент(ЭтотОбъект);
	Иначе
		ТекстСообщения = НСтр("ru = 'При выполнении операции произошла ошибка:""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти 


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИспользоватьПодключаемоеОборудование 	= ПодключаемоеОборудованиеВызовСервера.ИспользоватьПодключаемоеОборудование();
	УстройствоПечати 						= ПодключаемоеОборудованиеВызовСервера.ВернутьИдентификаторУстройстваДляПечатиДокументов();
    ЗакрытьПослеОплаты	= константы.ЗакрыватьДокументПослеОплаты.Получить();	
	Если не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		объект.ПроцентНадбавки = Константы.ПочтаРоссииПроцентНадбавкиПВ.Получить();	
	КонецЕсли;
КонецПроцедуры



Процедура УстановитьВидимость()
	ТолькоПросмотр 	= ?(ТолькоПросмотр,
						ТолькоПросмотр,
						( Объект.НомерЧекаККМ<>0) или 
						  (ЗначениеЗаполнено(Объект.ВидОплаты) и Объект.Проведен)
						);
КонецПроцедуры	


&НаКлиенте
Функция 	ПроверитьЗаполнениеДокумента()
	
	Результат = Истина;
	
	Текст = "";
	Если Объект.СтоимостьИтого = 0 Тогда
		Текст = Текст + НСтр("ru = 'Не указана сумма'");
		Результат = Ложь;
	КонецЕсли;
	Если не ЗначениеЗаполнено(Объект.ВидОплаты) Тогда
		Текст = Текст + НСтр("ru = 'Не выбран вид оплаты'");
		Результат = Ложь;
	КонецЕсли;
	
	Если не Объект.Проведен Тогда
		Текст = Текст + НСтр("ru = 'документ не проведен!'");
		Результат = Ложь;
	КонецЕсли;	
	
	
	Если Текст <> "" Тогда
		ТекстЗаголовка = НСтр("ru = 'Ошибка заполнения'");
		ПоказатьПредупреждение(, Текст, 10 ,ТекстЗаголовка);
	КонецЕсли;
	
	
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
		Если не ЗначениеЗаполнено(Объект.ВидОплаты) Тогда
		Объект.ВидОплаты = ПредопределенноеЗначение("Перечисление.ФормыОплаты.Наличные");
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ЧекОтмены(Команда)
	СП_ККТ_клиент.ЧекОтмены(Объект, ЭтотОбъект,УникальныйИдентификатор,УстройствоПечати);
КонецПроцедуры

&НаКлиенте
Процедура ОтменаОплатыКартой(Команда)
	СП_ККТ_клиент.ОтменаОплатыКартой(Объект, ЭтотОбъект);
КонецПроцедуры




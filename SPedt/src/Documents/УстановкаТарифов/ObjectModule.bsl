
Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр Тарифы
	ТорифыИзРегистра = ПолучитьТарифыИзРегистра();
	Движения.Тарифы.Записывать = Истина;
	Для Каждого ТекСтрокаТарифы Из Тарифы Цикл
		
		массСтрок = ТорифыИзРегистра.НайтиСтроки(Новый Структура("Габарит",ТекСтрокаТарифы.Габарит));

		НужноЗаписывать =  (массСтрок.Количество() = 0);
		Если не НужноЗаписывать Тогда
			ТарифИзРегистра = массСтрок[0];
			
			
		НужноЗаписывать =  	(
			ТарифИзРегистра.НовыйТариф или
			ТарифИзРегистра.ЦенаХранения 	<> ТекСтрокаТарифы.ЦенаХранения 	или
			ТарифИзРегистра.СрокХранения 	<> ТекСтрокаТарифы.СрокХранения 	или
			ТарифИзРегистра.Штраф 			<> ТекСтрокаТарифы.Штраф 			или
			ТарифИзРегистра.Заморозка 		<> ТекСтрокаТарифы.Заморозка		или
			ТарифИзРегистра.негабарит 		<> ТекСтрокаТарифы.негабарит 		или
			ТарифИзРегистра.ЦенаЗаКГ 		<> ТекСтрокаТарифы.ЦенаЗаКГ 		или
			ТарифИзРегистра.ЦенаЗаКуб 		<> ТекСтрокаТарифы.ЦенаЗаКуб 		или
			ТекСтрокаТарифы.Отменен);
			
			
		КонецЕсли;
		
		Если НужноЗаписывать Тогда
			Движение 				= Движения.Тарифы.Добавить();
			Движение.Период 		= Дата;
			Движение.Габарит 		= ТекСтрокаТарифы.Габарит;
			Движение.ЦенаХранения 	= ТекСтрокаТарифы.ЦенаХранения;
			Движение.СрокХранения 	= ТекСтрокаТарифы.СрокХранения;
			Движение.Штраф 			= ТекСтрокаТарифы.Штраф;
			Движение.Заморозка 		= ТекСтрокаТарифы.Заморозка;
			Движение.Негабарит 		= ТекСтрокаТарифы.негабарит;
			Движение.ЦенаЗаКГ 		= ТекСтрокаТарифы.ЦенаЗаКГ;
			Движение.ЦенаЗаКуб 		= ТекСтрокаТарифы.ЦенаЗаКуб;
			Движение.кодТарифа		= ТекСтрокаТарифы.КодОтправлен;
			Движение.Отменен		= ТекСтрокаТарифы.Отменен;
		КонецЕсли;
	КонецЦикла;


КонецПроцедуры


Функция ПолучитьТарифыИзРегистра() 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТарифыСрезПоследних.Период КАК Период,
		|	ТарифыСрезПоследних.Габарит КАК Габарит,
		|	ТарифыСрезПоследних.ЦенаХранения КАК ЦенаХранения,
		|	ТарифыСрезПоследних.СрокХранения КАК СрокХранения,
		|	ТарифыСрезПоследних.Штраф КАК Штраф,
		|	ТарифыСрезПоследних.Заморозка КАК Заморозка,
		|	ТарифыСрезПоследних.негабарит КАК негабарит,
		|	ТарифыСрезПоследних.ЦенаЗаКГ КАК ЦенаЗаКГ,
		|	ТарифыСрезПоследних.ЦенаЗаКуб КАК ЦенаЗаКуб,
		|	ТарифыСрезПоследних.Отменен КАК Отменен,
		|	ТарифыСрезПоследних.кодТарифа КАК кодТарифа,
		|	ЛОЖЬ КАК НовыйТариф
		|ПОМЕСТИТЬ втТарифыИзРегистра
		|ИЗ
		|	РегистрСведений.Тарифы.СрезПоследних(&НаДату, ) КАК ТарифыСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Габариты.Ссылка КАК Габарит,
		|	ИСТИНА КАК НовыйТариф
		|ПОМЕСТИТЬ втНовыеТарифы
		|ИЗ
		|	Справочник.Габариты КАК Габариты
		|ГДЕ
		|	НЕ Габариты.Ссылка В
		|				(ВЫБРАТЬ
		|					втТарифыИзРегистра.Габарит КАК Габарит
		|				ИЗ
		|					втТарифыИзРегистра КАК втТарифыИзРегистра)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТарифыИзРегистра.Период КАК Период,
		|	втТарифыИзРегистра.Габарит КАК Габарит,
		|	втТарифыИзРегистра.ЦенаХранения КАК ЦенаХранения,
		|	втТарифыИзРегистра.СрокХранения КАК СрокХранения,
		|	втТарифыИзРегистра.Штраф КАК Штраф,
		|	втТарифыИзРегистра.Заморозка КАК Заморозка,
		|	втТарифыИзРегистра.негабарит КАК негабарит,
		|	втТарифыИзРегистра.ЦенаЗаКГ КАК ЦенаЗаКГ,
		|	втТарифыИзРегистра.ЦенаЗаКуб КАК ЦенаЗаКуб,
		|	втТарифыИзРегистра.Отменен КАК Отменен,
		|	втТарифыИзРегистра.кодТарифа КАК кодТарифа,
		|	втТарифыИзРегистра.НовыйТариф КАК НовыйТариф
		|ПОМЕСТИТЬ Сбор
		|ИЗ
		|	втТарифыИзРегистра КАК втТарифыИзРегистра
		|ГДЕ
		|	НЕ втТарифыИзРегистра.Отменен
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	втНовыеТарифы.Габарит,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	ЛОЖЬ,
		|	NULL,
		|	втНовыеТарифы.НовыйТариф
		|ИЗ
		|	втНовыеТарифы КАК втНовыеТарифы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сбор.Период КАК Период,
		|	Сбор.Габарит КАК Габарит,
		|	Сбор.ЦенаХранения КАК ЦенаХранения,
		|	Сбор.СрокХранения КАК СрокХранения,
		|	Сбор.Штраф КАК Штраф,
		|	Сбор.Заморозка КАК Заморозка,
		|	Сбор.негабарит КАК негабарит,
		|	Сбор.ЦенаЗаКГ КАК ЦенаЗаКГ,
		|	Сбор.ЦенаЗаКуб КАК ЦенаЗаКуб,
		|	Сбор.Отменен КАК Отменен,
		|	Сбор.кодТарифа КАК кодТарифа,
		|	Сбор.НовыйТариф КАК НовыйТариф
		|ИЗ
		|	Сбор КАК Сбор
		|
		|УПОРЯДОЧИТЬ ПО
		|	НовыйТариф УБЫВ";
	
	Если ЗначениеЗаполнено(Дата) Тогда
		НаДату = Новый Граница(Дата,ВидГраницы.Исключая);
	Иначе	
		НаДату = ТекущаяДата();
	КонецЕсли;	
	
	Запрос.Параметры.Вставить("НаДату",НаДату);
	РезультатЗапроса = Запрос.Выполнить();
	
	Тз = РезультатЗапроса.Выгрузить();
	Возврат ТЗ;
КонецФункции

Процедура ЗаполнитьПоРегистру() Экспорт
	ТорифыИзРегистра = ПолучитьТарифыИзРегистра(); 
	Тарифы.Загрузить(ТорифыИзРегистра);
	Для каждого элем из Тарифы Цикл
		Позиция = СтрНайти(элем.Габарит.Код,"-");
		Если Позиция = 0   Тогда
			КодОтправили = Число(Элем.Габарит.Код);
		Иначе	
			КодОтправили = Число(Прав(Элем.Габарит.Код,СтрДлина(Элем.Габарит.Код)-Позиция));
		КонецЕсли;
		элем.КодОтправлен = КодОтправили;
		
	КонецЦикла;
КОнецПроцедуры	


Процедура ЗаполнитьПоСправочнику() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Габариты.Ссылка 				КАК Габарит,
		|	Габариты.СтоимостьХранения 		КАК ЦенаХранения,
		|	Габариты.ДниХранения 			КАК СрокХранения,
		|	Габариты.ДобавочнаяСтоимость	 КАК Штраф,
		|	Габариты.НеГабарит 				КАК НеГабарит,
		|	Габариты.СтоимостьКуб 			КАК ЦенаЗаКуб,
		|	Габариты.СтоимостьКГ 			КАК ЦенаЗаКГ,
		|	Габариты.Заморозка 				КАК Заморозка
		|ИЗ
		|	Справочник.Габариты КАК Габариты
		|ГДЕ
		|	НЕ Габариты.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	Габариты.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если не РезультатЗапроса.Пустой() Тогда
		Тарифы.Загрузить(РезультатЗапроса.Выгрузить());
	
	КонецЕсли;	
	
	
	Для каждого элем из Тарифы Цикл
		Позиция = СтрНайти(элем.Габарит.Код,"-");
		Если Позиция = 0   Тогда
			КодОтправили = Число(Элем.Габарит.Код);
		Иначе	
			КодОтправили = Число(Прав(Элем.Габарит.Код,СтрДлина(Элем.Габарит.Код)-Позиция));
		КонецЕсли;
		элем.КодОтправлен = КодОтправили;
		
	КонецЦикла;
КОнецПроцедуры	

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	УстановкаТарифовТарифы.НомерСтроки КАК НомерСтроки,
	//	|	УстановкаТарифовТарифы.Габарит КАК Габарит,
	//	|	УстановкаТарифовТарифы.КодОтправлен КАК КодОтправлен,
	//	|	ПРЕДСТАВЛЕНИЕ(УстановкаТарифовТарифы.Габарит) КАК ГабаритПредставление
	//	|ИЗ
	//	|	Документ.УстановкаТарифов.Тарифы КАК УстановкаТарифовТарифы
	//	|ГДЕ
	//	|	УстановкаТарифовТарифы.Ссылка = &Ссылка
	//	|	И УстановкаТарифовТарифы.КодПолучен = 0";
	//
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//Выборка = РезультатЗапроса.Выбрать();
	//
	//Пока Выборка.Следующий() Цикл
	//	Отказ = истина;
	//	ТекстСообщения = "В строке №"+Выборка.НомерСтроки+" не указан  полученный код габарита "+Выборка.ГабаритПредставление+". Отправлен код; "+Выборка.КодОтправлен;
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	//КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
КонецПроцедуры


Процедура ПеренумероватьГабариты() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УстановкаТарифовТарифы.НомерСтроки КАК НомерСтроки,
		|	УстановкаТарифовТарифы.Габарит КАК Габарит,
		|	УстановкаТарифовТарифы.КодОтправлен КАК КодОтправлен,
		|	ПРЕДСТАВЛЕНИЕ(УстановкаТарифовТарифы.Габарит) КАК ГабаритПредставление,
		|	УстановкаТарифовТарифы.КодПолучен КАК КодПолучен
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	Документ.УстановкаТарифов.Тарифы КАК УстановкаТарифовТарифы
		|ГДЕ
		|	УстановкаТарифовТарифы.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(вт.КодОтправлен) КАК КодОтправлен
		|ИЗ
		|	вт КАК вт
		|ГДЕ
		|	вт.КодПолучен <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.НомерСтроки КАК НомерСтроки,
		|	вт.Габарит КАК Габарит,
		|	вт.КодОтправлен КАК КодОтправлен,
		|	вт.ГабаритПредставление КАК ГабаритПредставление
		|ИЗ
		|	вт КАК вт
		|ГДЕ
		|	вт.КодПолучен = 0";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатЗапроса = МассивРезультатов[1];
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
    максимальныйкод = Выборка.КодОтправлен;
	
	РезультатЗапроса = МассивРезультатов[2]	;
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		максимальныйкод = максимальныйкод +1;
		габарит = Выборка.Габарит.ПолучитьОбъект();
		габарит.Код =  Формат(максимальныйкод, "ЧЦ=9; ЧН=0; ЧВН=; ЧГ=0");
		Попытка
			габарит.Записать();
		Исключение
		
		КонецПопытки;
	КонецЦикла;
	
	ЗаполнитьКодыИнегабарит();
	
КонецПроцедуры


Процедура ЗаполнитьКодыИнегабарит()
	Для каждого элем из Тарифы Цикл
		Позиция = СтрНайти(элем.Габарит.Код,"-");
		Если Позиция = 0   Тогда
			КодОтправили = Число(Элем.Габарит.Код);
		Иначе	
			КодОтправили = Число(Прав(Элем.Габарит.Код,СтрДлина(Элем.Габарит.Код)-Позиция));
		КонецЕсли;
		элем.КодОтправлен = КодОтправили;
		
		Если элем.ЦенаЗаКГ<>0 или элем.ЦенаЗаКуб<>0 Тогда
			элем.негабарит = Истина;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры	

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Если Объект.Возвраты.НайтиСтроки(Новый Структура("Отправлено", Ложь)).Количество() > 0 Тогда
			ТекстСообщения = "Не все позиции привязаны к стикерам. Документ не проведен. При отсутствии интернета, можете записать документ и провести его позже."
				+ символы.ПС + "При возникновении ошибки привязки, проверьте уникальность стикера Возврата.";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Отказ=Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// ПодключаемоеОборудование
	Если ИмяСобытия = "ScanData" И Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда
			
			//@skip-check bsl-variable-name-invalid
		ШК 			= СтоСП_Клиент.ПолучитьШКизПараметров(Параметр);
		ОбработатьШКнаКлиенте(ШК);

	КонецЕсли;
	
	
	// Конец ПодключаемоеОборудование
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
    // СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СтоСПОбмен_Возвраты_СРазрешением.ОбновитьСписокПрав();
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	СП_РаботаСДокументами.ПриСозданииНаСервере(ЭтотОбъект);
	Если Не ЗначениеЗаполнено(Объект.ВидОперации) Тогда
		объект.ВидОперации=Перечисления.ВидыВозвратов.ОтУчастника;
	КонецЕсли;
	ВозвратыБезДетализации = Константы.ВозвратыБезДетализации.Получить(); //12000012774583000369
	МестоХранения=Получить_ПоследнееМестоХранения();

	Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаПокупкиРазрешенные.Видимость = (Не Константы.ВозвратыНовыйВариантОтключить.Получить()
		Или (Объект.Возвраты.Количество() > 0));
	Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаПокупки.Видимость = (Константы.ВозвратыСтарыйВариантВключить.Получить()
		Или (Объект.Покупки.Количество() > 0));

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//Сканер штрихкода
	СтоСП_Клиент.ПодключитьСканерШК(УникальныйИдентификатор);

	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если ЗначениеЗаполнено(Объект.Основание) И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Оповестить("ПроведенВозврат", Объект.Основание, ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Если Константы.ВыгружатьВозвратПриЗаписи.Получить() Тогда
		аспПроцедурыОбменаДанными.СформироватИОтправитьПакет();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Для Каждого стр Из ВыбранноеЗначение Цикл
		СтрТЧ				= Объект.Покупки.Добавить();
		СтрТч.Покупка		= стр.Значение.Покупка;
		СтрТч.Организатор	= стр.Значение.Организатор;
		СтрТч.Участник		= Объект.Участник;
		СтрТч.МестоХранения	= МестоХранения;
		СтрТч.ШК			= СП_Штрихкоды.ПолучитьМегаордер(СтрТч.Покупка, СтрТч.Участник);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ГруппаСтраницыПриСменеСтраницыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	УстановитьВидимость();
	Если Строка(Объект.ВидОперации) = "Изменился пункт выдачи" Тогда

		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, "Табличная часть будет перезаполнена! Продолжить?", Режим, 0);

	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПокупки

&НаКлиенте
Процедура ПокупкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.МестоХранения) Тогда
		Элемент.ТекущиеДанные.МестоХранения=МестоХранения;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Участник) Тогда
		Элемент.ТекущиеДанные.Участник=Объект.Участник;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПокупкиПриИзменении(Элемент)
	Объект.Сумма = Объект.Покупки.Итог("СтоимостьВозврата") + Объект.Возвраты.Итог("СтоимостьВозврата");
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПечатьСтикеров(Команда)
	КомандаПечати		= ПолучитьКомандуПечати("Печать cтикеров");
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(Этотобъект, Команды[командаПечати], Объект);
	//УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команды[командаПечати], ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрXML(Команда)
	Если Модифицированность Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись));
	КонецЕсли;
	Хмл_отправили	= СтоСПОбмен_Запрос.ПривязатьСтикерВозврата(Объект.Ссылка);
	СтоСП_Клиент.Показать_XML(хмл_отправили);
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрПолученногоXML(Команда)
	Хмл_incomes = Элементы.Протокол.ТекущиеДанные.ПолученныеДанные;
	СтоСП_Клиент.Показать_XML(хмл_incomes);
КонецПроцедуры

&НаКлиенте
Процедура Картинка(Команда)
	Если элементы.Товары.ТекущиеДанные <> Неопределено Тогда
		ЗапуститьПриложение(элементы.Товары.ТекущиеДанные.Картинка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПокупки(Команда)
	Если Не ПроверитьЗаполнение() Тогда
		//Предупреждение("Необходимо выбрать участника!!!");
		Возврат;
	КонецЕсли;
	ОткрытьПодборВыданыхПокупок();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоДатеВыдачиНаСвоемПВ(Команда)
	ОткрытьФорму("ОбщаяФорма.ВыборЗаказаПолученногоУчастником", Новый Структура("Участник, Локально", Объект.Участник,
		Истина), ЭтотОбъект, , , , Новый ОписаниеОповещения("ДобавитьПоДатеВыдачи_Завершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоДатеВыдачи(Команда)
	Если ПроверитьЗаполнение() Тогда
		ОткрытьФорму("ОбщаяФорма.ВыборЗаказаПолученногоУчастником", Новый Структура("Участник, Локально",
			Объект.Участник, Ложь), ЭтотОбъект, , , , Новый ОписаниеОповещения("ДобавитьПоДатеВыдачи_Завершение",
			ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПосылку(Команда)
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Покупка", Элементы.Покупки.ТекущиеДанные.Покупка);
	ПараметрыОтбора.Вставить("Участник", Элементы.Покупки.ТекущиеДанные.Участник);
	ОткрытьФорму("ОбщаяФорма.ВыборПосылкиПоПокупкеУчастнику", ПараметрыОтбора, ЭтотОбъект, , , ,
		Новый ОписаниеОповещения("ДобавитьПоПокупкеУчастнику_Завершение", ЭтотОбъект, ПараметрыОтбора),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоПокупкеУчастнику(Команда)
	ОткрытьФорму("ОбщаяФорма.ВыборПосылкиПоПокупкеУчастнику", , ЭтотОбъект, , , ,
		Новый ОписаниеОповещения("ДобавитьПоПокупкеУчастнику_Завершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоКодуПосылки(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораПосылкиПоКодуПосылки", , ЭтотОбъект, , , ,
		Новый ОписаниеОповещения("ДобавитьПоПокупкеУчастнику_Завершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПривязатьСтикеры(Команда)
	Отказ = Ложь;
	Для Каждого элем Из объект.Возвраты Цикл
		Если Не ЗначениеЗаполнено(элем.ШК) Тогда
			сообщение = Новый СообщениеПользователю;
			сообщение.Текст = "В строке " + элем.ИсходныйНомерСтроки + "не указан новый штрихкод возврата";
			сообщение.Поле = "Возвраты[" + (элем.ИсходныйНомерСтроки - 1) + "].ШК";
			сообщение.Сообщить();
			Отказ = истина
		КонецЕсли;
	КонецЦикла
	;

	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
//	Если Модифицированность или не ЗначениеЗаполнено( Тогда
	Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись));
//	КонецЕсли;	
	ПривязатьСтикерыНаСервере();
	//Для каждого стр из Объект.Заказы Цикл
	//	Если стр.Отправлено Тогда
	//		ОповеститьОбИзменении(стр.Пристрой);
	//	Конецесли;
	//КонецЦикла;
	//Для каждого стр из Объект.ЗаявкиНаДоставку Цикл
	//	Если стр.Отправлено Тогда
	//		ОповеститьОбИзменении(стр.заявка);
	//	Конецесли;
	//КонецЦикла;
	//
	//ПересчитатьСумму();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоКолуВозврата(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаВводаШК", Новый Структура("Заголовок, ПолеВвода", "Введите код возврата!",
		"Код возврата"), ЭтотОбъект, , , , Новый ОписаниеОповещения("ВвестиКодВозвратаВручную_Завершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура СчитатьШКВручную(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаВводаШК", , ЭтотОбъект, , , ,
		Новый ОписаниеОповещения("ВвестиШтрихКодВручную_Завершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ИсторияДоставки(Команда)
//	ИсторияЗаказов	= ИсторияДоставкиНаСервере(Элементы.Покупки.ТекущиеДанные.ШК);
	ОткрытьФорму(	"Отчет.ИсторияЗаказов.Форма.ФормаОтчета", Новый структура("мегаордер, СформироватьПриОткрытии",
		Элементы.Покупки.ТекущиеДанные.ШК, Истина), ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Функция ПолучитьКомандуПечати(ИмяКоманды)

	Для Каждого ком Из Команды Цикл
		Если ком.Заголовок = ИмяКоманды Тогда
			Возврат ком.Имя;
		КонецЕсли;
	КонецЦикла;
КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПосылкамиИзменившимиПВ();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ГруппаСтраницыПриСменеСтраницыНаСервере()
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаПротокол Тогда
		ПарамДок=Протокол.Параметры.Элементы.Найти("Документ");
		парамДок.Значение=Объект.Ссылка;
		парамДок.Использование=Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьЗаказСТоварами(ЗаказыСТоварами)
	Объект.Покупки.Очистить();
	Объект.Товары.Очистить();

	ТзПосылок	=	Новый ТаблицаЗначений;
	тзПосылок.Колонки.Добавить("Посылка", Новый ОписаниеТипов("СправочникСсылка.Посылки"));
	тзПосылок.Колонки.Добавить("ШК", Новый ОписаниеТипов("СправочникСсылка.Мегаордера"));
	тзПосылок.Колонки.Добавить("КодыТоваров", Новый ОписаниеТипов("Строка"));

	Для Каждого элем Из ЗаказыСТоварами Цикл
		найдено = тзПосылок.НайтиСтроки(Новый структура("Посылка", элем.Значение.Посылка));
		Если найдено.Количество() = 0 Тогда
			строкаТаблицы 				= тзПосылок.Добавить();
			строкаТаблицы.Посылка		= элем.Значение.Посылка;
			строкаТаблицы.ШК			= элем.Значение.ШК;
			строкаТаблицы.КодыТоваров	= элем.Значение.Кодтовара;
		Иначе
			строкаТаблицы	= найдено[0];
			строкаТаблицы.КодыТоваров	= строкаТаблицы.КодыТоваров + "," + элем.Значение.КодТовара;
		КонецЕсли;
		новыйТовар	= Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(новыйТовар, элем.Значение);
	КонецЦикла;
	Объект.Участник = элем.Значение.Посылка.Участник;
	Для Каждого элем Из тзПосылок Цикл
		ДобавитьЗаказ(Новый структура("ШК ", элем.ШК), элем.КодыТоваров);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ДобавитьЗаказ(ДанныеШК, КодыТоваров = Неопределено)
	Если Не Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаПокупки.Видимость Тогда
		Возврат Ложь;
	КонецЕсли;

	Док=РеквизитФормыВЗначение("Объект");
	ДействиеВыполнено = Док.ДобавитьПокупку(ДанныеШК.ШК, МестоХранения, КодыТоваров);
	Если ДействиеВыполнено Тогда
		ЗначениеВДанныеФормы(Док, Объект);
	КонецЕсли;
	Возврат ДействиеВыполнено;
КонецФункции

&НаКлиенте
Процедура ВвестиКодВозвратаВручную_Завершение(КодВозврата, ДополнительныеПараметры) Экспорт

	ДанныеШК = Новый Структура;
	ДанныеШК.Вставить("КодМегаордера", КодВозврата);
	ДанныеШК.Вставить("ШК", КодВозврата + "(без ШК по коду" + КодВозврата + ")");
	ЗаказДобавлен = ДобавитьВозврт(ДанныеШК);
	Если ЗаказДобавлен Тогда
#Если Не ВебКлиент Тогда
		Сигнал();
#КонецЕсли
	КонецЕсли
	;
КонецПроцедуры

&НаКлиенте
Процедура ВвестиШтрихКодВручную_Завершение(ШКод, ДополнительныеПараметры) Экспорт
	ОбработатьШКнаКлиенте(ШКод);
КонецПроцедуры

&НаКлиенте
Функция ОбработатьШКнаКлиенте(ШКод)
	ДанныеШК    = СП_Штрихкоды.ПолучитьДанныеПоШК(ШКод);
	ЭтоВозвратСРазрешением = (Элементы.ГруппаСтраницы.ТекущаяСтраница
		= Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаПокупкиРазрешенные);
	Если Строка(ДанныеШК.Тип) = "Посылка (12)" И Не ЭтоВозвратСРазрешением Тогда
		Если ДанныеШК.ВозвратРазрешен = "" Тогда
			СтоСПОбмен_Возвраты.Загрузить_РазрешенияВозвратаПосылки(ДанныеШК.Посылка);
			ДанныеШК    = СП_Штрихкоды.ПолучитьДанныеПоШК(ШКод);
		КонецЕсли;

		Если ДанныеШК.ВозвратРазрешен = "forbidden" Тогда
			ТекстСообщения = "Организатор запретил возврат " + ДанныеШК.Посылка;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат Ложь;
		ИначеЕсли ДанныеШК.ВозвратРазрешен = "permitted" Тогда
					//
		Иначе
			ТекстСообщения = "У посылки не был установлен статус разрешения или запрета возврата " + ДанныеШК.Посылка;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	Если Строка(ДанныеШК.Тип) = "Посылка (12)" И ЭтоВозвратСРазрешением Тогда
		СтрокаЗаказа	=	Элементы.Возвраты.ТекущиеДанные;
		Если СтрокаЗаказа = Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Установите курсор на строку с Возвратом, для привязки стикера");
			Возврат Ложь;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаЗаказа.ШК) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Уже привязан штрих код:" + СтрокаЗаказа.ШК);
			Возврат Ложь;
		КонецЕсли;
		СтрокаЗаказа.МестоХранения	= МестоХранения;
		СтрокаЗаказа.ШК				= ДанныеШК.ШК;

#Если Не ВебКлиент Тогда
		Сигнал();
#КонецЕсли
	ИначеЕсли
	Строка(ДанныеШК.Тип) = "Посылка (12)" Или
		//		 		Строка(ДанныеШК.Тип) 	= "Покупка (11)"			Или		
		//		 		Строка(ДанныеШК.Тип) 	= "Заказ100маркета (33)"	или
	Строка(ДанныеШК.Тип) = "Коробка (44)" Тогда

		Если ВозвратыБезДетализации Тогда
			ЗаказДобавлен	= ДобавитьЗаказ(ДанныеШК);
			Если ЗаказДобавлен Тогда
#Если Не ВебКлиент Тогда
				Сигнал();
#КонецЕсли
			КонецЕсли
			;
		Иначе
			ОткрытьФорму("ОбщаяФорма.ВыборЗаказаПолученногоУчастником", Новый Структура("ДанныеШК, Локально", ДанныеШК,
				Ложь), ЭтотОбъект, , , , Новый ОписаниеОповещения("ДобавитьПоДатеВыдачи_Завершение", ЭтотОбъект),
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

		КонецЕсли;
	ИначеЕсли Строка(ДанныеШК.Тип) = "Штрих код приема возврата (24)" Тогда
		ЗаказДобавлен = ДобавитьВозврт(ДанныеШК);
		Если ЗаказДобавлен Тогда
#Если Не ВебКлиент Тогда
			Сигнал();
#КонецЕсли
		КонецЕсли
		;
	ИначеЕсли Строка(ДанныеШК.Тип) = "Карта участника (22)" Или Строка(ДанныеШК.Тип) = "Карта участника (23)" Тогда
		Объект.Участник = ДанныеШК.Участник;
	ИначеЕсли Строка(ДанныеШК.Тип) = "Место хранения (63)" Тогда
		МестоХранения	= ДанныеШК.МестоХранения;
	ИначеЕсли Строка(ДанныеШК.Тип) = "Сотрудник (55)" Тогда
		Если СП_РаботаСДокументами_Клиент.ЗаписатьДокумент(этотОбъект, , ДанныеШК.Сотрудник) Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;

КонецФункции

&НаСервере
Функция Получить_ПоследнееМестоХранения()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВозвратОтУчастникаПокупки.МестоХранения
	|ИЗ
	|	Документ.ВозвратПокупокОрганизатору.Покупки КАК ВозвратОтУчастникаПокупки
	|ГДЕ
	|	ВозвратОтУчастникаПокупки.МестоХранения <> ЗНАЧЕНИЕ(Справочник.МестаХранения.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВозвратОтУчастникаПокупки.Ссылка.Дата УБЫВ,
	|	ВозвратОтУчастникаПокупки.Ссылка.Номер УБЫВ,
	|	ВозвратОтУчастникаПокупки.НомерСтроки УБЫВ";

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.МестоХранения;
	КонецЕсли;
	Возврат Справочники.МестаХранения.ПустаяСсылка();
КонецФункции

&НаСервере
Процедура ЗаполнитьПосылкамиИзменившимиПВ()

	Док=РеквизитФормыВЗначение("Объект");
	Док.ЗаполнитьПосылкамиИзменившимиПВ(МестоХранения);
	ЗначениеВДанныеФормы(Док, Объект);
КонецПроцедуры

#Область ОбработчикиДобавленияЗаказов

&НаКлиенте
Процедура ДобавитьПоПокупкеУчастнику_Завершение(ШКод, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(ШКод) Тогда
		Если ЗначениеЗаполнено(ДополнительныеПараметры) Тогда
			Масс_Строк	= объект.Покупки.НайтиСтроки(ДополнительныеПараметры);
			Для Каждого элем Из масс_Строк Цикл
				Объект.Покупки.Удалить(Элем);
			КонецЦикла;
		КонецЕсли;
		ДобавитьЗаказ(Новый структура("ШК", ШКод.ШК));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоДатеВыдачи_Завершение(ШКод, ДополнительныеПараметры) Экспорт
	Если Не ЗначениеЗаполнено(ШКод) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ШКод) = Тип("СписокЗначений") Тогда
		ДобавитьЗаказСТоварами(ШКод);
	Иначе
		Масс_Строк	= объект.Покупки.НайтиСтроки(Новый структура("ШК", ШКод));
		Для Каждого элем Из масс_Строк Цикл
			Объект.Покупки.Удалить(Элем);
		КонецЦикла;
		ДобавитьЗаказ(Новый структура("ШК", ШКод));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборВыданыхПокупок()
	ОткрытьФорму("обработка.ПодборВыданыхПокупок.Форма", Новый Структура("Участник,ДатаОтбора", Объект.Участник,
		ОбщегоНазначенияКлиент.ДатаСеанса()));
КонецПроцедуры
#КонецОбласти

#Область ВозвратыСПравами
&НаСервере
Функция ДобавитьВозврт(ДанныеШК)
	Если Не Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаПокупкиРазрешенные.Видимость Тогда
		Возврат Ложь;
	КонецЕсли;
	ПраваВозврата = ПолучитьПраваВозврата(ДанныеШК);
	Отказ = Ложь;
	Если ПраваВозврата = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При сдачи возврата по штрих коду """ + ДанныеШК.ШК
			+ """, возникла ошибка (не найдено разрешение организатора)", );
		отказ = Истина;
		Возврат Ложь;
	КонецЕсли;
	Если ТекущаяДатаСеанса() > ПраваВозврата.Срок Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При сдачи возврата по штрих коду """ + ДанныеШК.ШК
			+ """, возникла ошибка (срок сдачи возврата " + ПраваВозврата.Срок + " истек)", );
		отказ = Истина;
	КонецЕсли;
	НаденыСтроки = Объект.Возвраты.НайтиСтроки(Новый структура("КодЗаказа", Число(ДанныеШК.КодМегаордера)));
	Если наденыСтроки.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При сдачи возврата по штрих коду """ + ДанныеШК.ШК
			+ """, возникла ошибка (Заказ уже добавлен)", );
		отказ = Истина;
	КонецЕсли;
	Если отказ Тогда
		Возврат Ложь;
	КонецЕсли;

	НоваяСтрока = Объект.Возвраты.Добавить();

	ЗаполнитьЗначенияСвойств(новаяСтрока, ПраваВозврата);
	НоваяСтрока.МестоХранения = МестоХранения;
	Объект.Отправлено = Ложь;
	Возврат Истина;
КонецФункции

&НаСервере
Функция ПолучитьПраваВозврата(ДанныеШК)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВозвратыПрава.Участник КАК Участник,
	|	ВозвратыПрава.Мегаордер КАК Мегаордер,
	|	ВозвратыПрава.Срок КАК Срок,
	|	ВозвратыПрава.Организатор КАК Организатор,
	|	ВозвратыПрава.Покупка КАК Покупка
	|ИЗ
	|	РегистрСведений.ВозвратыПрава КАК ВозвратыПрава
	|ГДЕ
	|	ВозвратыПрава.Мегаордер = &Мегаордер";

	Запрос.УстановитьПараметр("Мегаордер", Число(ДанныеШК.КодМегаордера));

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			ПараметрыКарты			= Новый Структура;
			параметрыКарты.Вставить("КодЗаказа", ДанныеШК.КодМегаордера);
			параметрыКарты.Вставить("Срок", Выборка.срок);
			параметрыКарты.Вставить("Организатор", "");
			параметрыКарты.Вставить("Посылка", "");
			параметрыКарты.Вставить("Участник", Выборка.Участник);
			параметрыКарты.Вставить("Организатор", Выборка.Организатор);
			параметрыКарты.Вставить("Покупка", Выборка.Покупка);
			параметрыКарты.Вставить("ШК", ДанныеШК.ШК);

			Возврат параметрыКарты;
		КонецЕсли;

	КонецЕсли;
КонецФункции
&НаСервере
Процедура ПривязатьСтикерыНаСервере()
	Док=РеквизитФормыВЗначение("Объект");
	Док.ПривязатьСтикеры();
	ЗначениеВДанныеФормы(Док, Объект);
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура УстановитьВидимость()
	Элементы.Участник.Видимость=(Объект.ВидОперации = Перечисления.ВидыВозвратов.ОтУчастника);
	Если ЗначениеЗаполнено(Объект.Основание) И ТипЗнч(Объект.Основание) = Тип("ДокументСсылка.ОтправлениеТранзита") Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ 	ОтправлениеТранзита.Коробка.Представление КоробкаПредставление ИЗ
							  |	Документ.ОтправлениеТранзита КАК ОтправлениеТранзита ГДЕ
							  |	ОтправлениеТранзита.Ссылка = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка", Объект.Основание);
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();

		Элементы.Оповещение.Заголовок = "Группа: " + Выборка.КоробкаПредставление + " будет списанна со склада,"
			+ Символы.ПС + "а заказы удаленны из группы!";
		Элементы.Оповещение.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры // УстановитьВидимость()


	// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
#КонецОбласти
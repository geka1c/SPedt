#Область ПолучитьТрекНомера
&НаСервере
Процедура ПолучитьТрекНомераНаСервере()
	Ошибки = Неопределено;
	Для каждого элемт из Объект.ТрекНомера Цикл
		Если Не ЗначениеЗаполнено(элемт.ТрекНомер) Тогда
			
			Если ЗначениеЗаполнено(элемт.ИдентификаторЗаказаВТК) Тогда //ПолучениеИнформации о заказе
				
				ответ 	 = Интеграция_СДЭК_в20.ИнформацияОЗаказе(элемт.Партия);
				
			Иначе	  //Создание Заказа
				Протокол 					 = ПолучитьТрекНомерПОДокументу(элемт.Партия);
				
			КонецЕсли;
			элемт.ТрекНомер 			 = элемт.Партия.НомерЗаказа;
			элемт.ИдентификаторЗаказаВТК = элемт.Партия.ИдентификаторЗаказаВТК;
			элемт.СтатусЗаказа			 = элемт.Партия.СтатусЗаказа;
			Если Протокол.Результат = "error" Тогда
				элемт.СообщениеОшибки = Протокол.ТекстОшибки;
			КонецЕсли;
			
		Иначе	
			ТектОшибки = "Трек номер уже получен." +элемт.ТрекНомер+ ", " + элемт.ГруппаДоставки;
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки,,ТектОшибки,);
		КонецЕсли;
	КонецЦикла;	
	Если Ошибки<>Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	КонецЕсли;;	
	ПерезаполнитьДляРасчетаТрекНомераНаСервере()
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТрекНомера(Команда)
	ПолучитьТрекНомераНаСервере();
	Записать();
КонецПроцедуры

Функция  ПолучитьТрекНомерПОДокументу(Док)
	
	ДокОбъект = Док.ПолучитьОбъект();
	Если не ЗначениеЗаполнено(ДокОбъект.Коробка.МетодОплаты) и Объект.Коробка.ВидСтикера=Перечисления.ВидыСтикеров.ГруппаДоставки тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран метод оплаты! " + ДокОбъект.Коробка);
		Возврат Неопределено;	
	КонецЕсли;
	Протокол = Интеграция_ТранспортныеКомпании_Общий.СформироватьЗаказ(ДокОбъект);

   Попытка
    	ДокОбъект.Записать(РежимЗаписиДокумента.Проведение)
   Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось записать документ " + Док +" , группы "+ДокОбъект.Коробка);  
	КонецПопытки; 
	Возврат Протокол;
КонецФункции

//когда получение трек номера в асинхронном режиме
//сначала получаем ид заказа
//потом трек номер в инжормации о заказе
Функция  ПолучитьИнформациюПоЗаказу(Док)
	
	ДокОбъект = Док.ПолучитьОбъект();
	Если не ЗначениеЗаполнено(ДокОбъект.Коробка.МетодОплаты) и Объект.Коробка.ВидСтикера=Перечисления.ВидыСтикеров.ГруппаДоставки тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран метод оплаты! " + ДокОбъект.Коробка);
		Возврат Неопределено;	
	КонецЕсли;
	Протокол = Интеграция_ТранспортныеКомпании_Общий.СформироватьЗаказ(ДокОбъект);

   Попытка
    	ДокОбъект.Записать(РежимЗаписиДокумента.Проведение)
   Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось записать документ " + Док +" , группы "+ДокОбъект.Коробка);  
	КонецПопытки; 
	Возврат Протокол;
КонецФункции



&НаКлиенте
Процедура ОбновитьТрекНомера(Команда)
	ПерезаполнитьДляРасчетаТрекНомераНаСервере()
КонецПроцедуры

Процедура  ЗаполнитьДляРасчетаТрекНомераНаСервере(СписокГрупп = Неопределено)
	ДокОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.СдэкИнеграция"));
	ДокОбъект.ЗаполнитьТабчастьТрекНомераПоСпискуГрупп(СписокГрупп);
	ЗначениеВДанныеФормы(ДокОбъект, Объект);
	УстановитьВидимость()
	
	
КонецПроцедуры

Процедура  ПерезаполнитьДляРасчетаТрекНомераНаСервере()
	СписокГрупп = Новый СписокЗначений;
	масГрупп = Объект.ГруппыСОшибками.Выгрузить().ВыгрузитьКолонку("ГруппаДоставки");
	СписокГрупп.ЗагрузитьЗначения(масГрупп);
	Для каждого элем из Объект.ТрекНомера Цикл
		СписокГрупп.Добавить(элем.ГруппаДоставки);
	КонецЦикла;
	
	ДокОбъект = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.СдэкИнеграция"));
	ДокОбъект.ЗаполнитьТабчастьТрекНомераПоСпискуГрупп(СписокГрупп);
	ЗначениеВДанныеФормы(ДокОбъект, Объект);
	УстановитьВидимость();
	
КонецПроцедуры



#КонецОбласти




#Область получитьКвитанцию
&НаКлиенте
Процедура ПолучитьКвитанции(Команда)
	Протокол 		= ПолучитьКвитанцииНасервере();
	
	Адрес			= Протокол.АдресФайла;
	Описание		= Новый ОписаниеПередаваемогоФайла(ПолучитьИмяВременногоФайла("pdf"),Адрес);
	МассивОписаний	= Новый Массив;
	МассивОписаний.Добавить(Описание);
	ПолучитьФайлы(МассивОписаний,,,Ложь);			
	ЗапуститьПриложение(МассивОписаний[0].Имя);
	
КонецПроцедуры

Функция  ПолучитьКвитанцииНасервере()
	масс = Объект.Квитанции.Выгрузить(,"ГруппаДоставки").ВыгрузитьКолонку("ГруппаДоставки");
	СписокГрупп = Новый СписокЗначений;
	СписокГрупп.ЗагрузитьЗначения(масс);
	ПараметрыКвитанции = Новый Структура;
	ПараметрыКвитанции.Вставить("ИдентификаторКвитанцииВТК",	объект.ИдентификаторКвитанцииВТК);
	ПараметрыКвитанции.Вставить("СписокГрупп",				СписокГрупп);
	Протокол = Интеграция_СДЭК_в20.ФормированиеКвитанцииКЗаказу(ПараметрыКвитанции);
	Возврат Протокол;
КонецФункции



#КонецОбласти


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
	Если Параметры.Свойство("СписокГрупп") Тогда
		ЗаполнитьДляРасчетаТрекНомераНаСервере(Параметры.СписокГрупп)
	КонецЕсли;	
	ПодсветкаСтрок();
	ПерезаполнитьДляРасчетаТрекНомераНаСервере();
КонецПроцедуры



&НаКлиенте
Процедура ГруппыСОшибкамиПриАктивизацииСтроки(Элемент)
	Если Элемент.текущиеДанные	= неопределено Тогда Возврат; КонецЕсли;
	Элементы.НетВНаличии.ОтборСтрок	= новый ФиксированнаяСтруктура("ГруппаДоставки",Элемент.текущиеДанные.ГруппаДоставки);


КонецПроцедуры


&НаКлиенте
Процедура СформироватьОтправлениеТранзитаПоГруппе(Команда)
	Если Элементы.ГруппыСОшибками.ТекущиеДанные = Неопределено или
	Элементы.ГруппыСОшибками.ТекущиеДанные.Ошибка <> "Нет Отрправления транзита" Тогда
		Возврат;
	КонецЕсли;
	парамГД = Новый Структура("ГруппаДоставки", Элементы.ГруппыСОшибками.ТекущиеДанные.ГруппаДоставки );
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("СформироватьОтправлениеТранзитаПоГруппеЗавершение",ЭтотОбъект,парамГД);
	ОткрытьФорму("Документ.ОтправлениеТранзита.Форма.ФормаДокумента",парамГД ,ЭтаФорма,,,,ОповещениеОЗакрытии);
КонецПроцедуры

Процедура СформироватьОтправлениеТранзитаПоГруппеЗавершение(Результат, параметрыОп) Экспорт
	
	ПерезаполнитьДляРасчетаТрекНомераНаСервере()	
КонецПроцедуры	



Процедура УстановитьВидимость()
	всегоОшибок = Объект.ГруппыСОшибками.Количество();
	Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаГруппыСОшибками.Заголовок=?(всегоОшибок=0,"Группы с ошибками","Группы с ошибками ("+всегоОшибок+")");
	
	всегоГрупБезОшибок = Объект.ТрекНомера.Количество();
	Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаТрекНомер.Заголовок=?(всегоГрупБезОшибок=0,"Получение трек номера","Получение трек номера ("+всегоГрупБезОшибок+")");
	
	всегоСтРекНомером = Объект.Квитанции.Количество();
	Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаКвитанции.Заголовок=?(всегоСтРекНомером=0,"Квитанции","Квитанции ("+всегоСтРекНомером+")");
	
	Если всегоОшибок>0 Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаГруппыСОшибками;
	ИначеЕсли всегоСтРекНомером>0 Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаКвитанции;
	КонецЕсли
КонецПроцедуры	


&НаСервере
Процедура ПодсветкаСтрок()

    ЭтаФорма.УсловноеОформление.Элементы.Очистить();
	ЭлементУсловногоОформления 		= УсловноеОформление.Элементы.Добавить();
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("ТрекНомераИтого");
	
	ЭлементыОтбора 					= ЭлементУсловногоОформления.Отбор.Элементы;
	ЭлементыОтбора.Очистить();
	Группа 							= ЭлементыОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
    Группа.ТипГруппы 				= ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ЭлементОтбора					= Группа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Объект.ТрекНомера.ИтогоСтоимость");
	ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение 	= 0;


	ЭлементОтбора					= Группа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Объект.ТрекНомера.МетодОплаты");
	ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение 	= Перечисления.МетодыОплаты.cod;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноКрасноФиолетовый);	
	
	
	
	
	ЭлементУсловногоОформления 		= УсловноеОформление.Элементы.Добавить();
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("ТрекНомераОбъявленнаяСтоимость");
	ЭлементОтбора					= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Объект.ТрекНомера.ОбъявленнаяСтоимость");
	ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение 	= 0;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноКрасноФиолетовый);	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноКрасноФиолетовый);	
	//ПолеОформления 					= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	//ПолеОформления.Поле 			= Новый ПолеКомпоновкиДанных("Объект.ТрекНомера.ОбъявленнаяСтоимость");
	//ПолеОформления.Использование 	= Истина;
	
	
КонецПроцедуры // ПодсветкаСтрок()


&НаКлиенте
Процедура ПриОткрытии(Отказ) 
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ЗаписатьИзмененияВОтправлениеТранзита();
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры


Процедура ЗаписатьИзмененияВОтправлениеТранзита()
	Для каждого Элем  из Объект.Квитанции Цикл 
		Отправление = Элем.ГруппаДоставки.ОтправлениеТранзита;
		Если 	Элем.ТрекНомер <> Отправление.НомерЗаказа или 
				Элем.ИдентификаторЗаказаВТК <> Отправление.ИдентификаторЗаказаВТК Тогда
			об = Отправление.ПолучитьОбъект();
			об.НомерЗаказа     				= Элем.ТрекНомер;
			об.ИдентификаторЗаказаВТК     	= Элем.ИдентификаторЗаказаВТК;
			Попытка
			    об.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				ТектОшибки = Строка(Элем.ГруппаДоставки) + " "+ОписаниеОшибки();
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТектОшибки);
			КонецПопытки;
		КонецЕсли;	
	Конеццикла;
	Для каждого Элем  из Объект.ТрекНомера Цикл 
		Отправление = Элем.ГруппаДоставки.ОтправлениеТранзита;
		Если 	(Элем.ТрекНомер <> "" и
				Элем.ТрекНомер <> Отправление.НомерЗаказа) или 
				(Элем.ИдентификаторЗаказаВТК <> "" и
				Элем.ИдентификаторЗаказаВТК <> Отправление.ИдентификаторЗаказаВТК) Тогда
			об = Отправление.ПолучитьОбъект();
			об.НомерЗаказа     				= Элем.ТрекНомер;
			об.ИдентификаторЗаказаВТК     	= Элем.ИдентификаторЗаказаВТК;
			Попытка
			    об.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				ТектОшибки = Строка(Элем.ГруппаДоставки) + " "+ОписаниеОшибки();
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТектОшибки);
			КонецПопытки;
		КонецЕсли;	
	Конеццикла;
	
	
	
КонецПроцедуры	

 
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, ЭтотОбъект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, ЭтотОбъект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, ЭтотОбъект);
КонецПроцедуры


// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
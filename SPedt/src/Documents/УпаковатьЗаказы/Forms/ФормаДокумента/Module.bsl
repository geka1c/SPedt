#Область ШтрихКоды

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если 	ИмяСобытия 	= "ScanData" и
			Источник 	= "ПодключаемоеОборудование" и
			ВводДоступен() 											Тогда
			ШК = СтоСП_Клиент.ПолучитьШКизПараметров(Параметр);
			ОбработатьШКнаКлиенте(ШК)
	ИначеЕсли ИмяСобытия="ПерепровестиДокумент" и Параметр=Объект.Ссылка Тогда
			СП_РаботаСДокументами_Клиент.ЗаписатьДокумент(этотОбъект);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШКнаКлиенте(ШК)
	ДанныеШК    = СП_Штрихкоды.ПолучитьДанныеПоШК(ШК);
	Если Строка(ДанныеШК.Тип) = "Посылка (12)" 								Тогда
		ПометитьПокупку(ДанныеШК.посылка);
	ИначеЕсли Строка(ДанныеШК.Тип) = "Покупка (11)" или 
			  Строка(ДанныеШК.Тип) = "Заказ100маркета (33)"	     			Тогда			//11043940487532000904		
		ПометитьПокупку(ДанныеШК.Покупка, ДанныеШК.Участник);
	ИначеЕсли Строка(ДанныеШК.Тип) = "Коробка (44)"						    Тогда			//44352952000899132115000954   44017898000522752026005685
		ПометитьПокупку(ДанныеШК.Коробка);
	Иначеесли Строка(ДанныеШК.Тип) = "Сотрудник (55)" 			Тогда	
		Если СП_РаботаСДокументами_Клиент.ЗаписатьДокумент(этотОбъект,,ДанныеШК.Сотрудник) Тогда
			Закрыть();
		КонецЕсли;	
	КонецЕсли;
	Модифицированность			= Истина;
КонецПроцедуры	

&НаКлиенте
Процедура ПометитьПокупку(Покупка, Участник = Неопределено)

	стр_Поиска = Новый Структура;
	Если  Участник <> Неопределено Тогда
		стр_Поиска.Вставить("Участник",	Участник);
	КонецЕсли;
	стр_Поиска.Вставить("Покупка", Покупка);

	МассивСтрок = Объект.Покупки.НайтиСтроки(стр_Поиска);
	Если МассивСтрок.Количество()=0 Тогда
		ТекстСообщения="Не найдено в документе: "+Символы.ПС+
						?(Участник = Неопределено,"", "участник: "+Участник)+" ,"+
						 "покупка:  "+Покупка+".";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	ИначеЕсли МассивСтрок[0].Подбор=Истина Тогда
		ТекстСообщения="Строка уже помечена: "+Символы.ПС+
						?(Участник = Неопределено,"", "участник: "+Участник)+" ,"+
						 "покупка:  "+Покупка+".";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.Покупки["+(МассивСтрок[0].НомерСтроки-1)+"].Покупка");
		Возврат;
	Иначе	
		МассивСтрок[0].Подбор=Истина;
	КонецЕсли;	
	УстановитьКоличествоПомеченныхСтрок();

#Если НЕ ВебКлиент Тогда
	сигнал();
#КонецЕсли

КонецПроцедуры


&НаКлиенте
Процедура ВвестиШтрихКодВручную(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаВводаШК",,ЭтотОбъект,,,,Новый ОписаниеОповещения("ВвестиШтрихКодВручную_Завершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ВвестиШтрихКодВручную_Завершение(ШК, ДополнительныеПараметры) Экспорт
	ОбработатьШКнаКлиенте(ШК);
КонецПроцедуры	


#КонецОбласти

#Область ПроцедурыЗаполнения

&НаКлиенте
Процедура ДоЗаполнитьОстатками(Команда)
	Если Объект.Проведен Тогда
		ДоЗаполнитьОстаткамиНаСервере(ложь);
	Иначе	
		ДоЗаполнитьОстаткамиНаСервере(Истина);
	КонецЕсли;	
КонецПроцедуры

Процедура ДоЗаполнитьОстаткамиНаСервере(ОчищатьЗаказы)
	об=ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.УпаковатьЗаказы"));
	об.ЗаполнитьПоТочкеНазначения(ОчищатьЗаказы);
	ЗначениеВДанныеФормы(об,Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьКоличествоСумму(Команда)
	ПересчитатьКоличествоСуммуНаСервере()
КонецПроцедуры

Процедура ПересчитатьКоличествоСуммуНаСервере()
	если не ЗначениеЗаполнено(Объект.Ссылка) тогда Возврат; КонецЕсли;
	
	
	//СП_РаботаСДокументами.РасчитатьСтоимостьХранения(объект.Покупки);
	Для каждого элем из Объект.Покупки Цикл
		Результат = СП_РаботаСДокументами.РасчитатьСтоимостьХраненияПоСтроке(элем);
		//	Если ТипЗнч(элем.Покупка) = Тип("СправочникСсылка.Коробки") Тогда
	//		элем.Количество	= элем.Покупка.Количество;
	//	Иначе
	//		элем.Количество	= элем.КоличествоМест;
	//	КонецЕсли;	
	//	
	//	//ПараметрыДляРасчета		= СП_РаботаСДокументами.ПолучитьПараметрыРасчетаСтоимости(элем.Габарит, элеи.Покупка, элем.Участник, элем.Партия);
	//	//ЗаполнитьЗначенияСвойств(ПараметрыРасчета,Элем);
	//	//структура_Стоимости 	= СП_РаботаСДокументами.РасчитатьСтоимостьХраненияПоСтроке(элем);
	//	//
	//	структура_Стоимости 	= СП_РаботаСДокументами.ПолучитьСтоимостьХранения(элем,Объект.Дата);
	//	элем.ВремяХранения     	= структура_Стоимости.ВремяХранения;
	//	элем.СтоимостьХранения 	= структура_Стоимости.СтоимостьХранения;
	КонецЦикла;
КонецПроцедуры


#КонецОбласти

#Область СобытияФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)  
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СП_РаботаСДокументами.ПриСозданииНаСервере(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(Параметры.ТочкаНазначения) Тогда
		объект_ВыдачаТранзита					= ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.УпаковатьЗаказы"));
		объект_ВыдачаТранзита.ТочкаНазначения	= Параметры.ТочкаНазначения;
		объект_ВыдачаТранзита.ЗаполнитьПоТочкеНазначения();		
		ЗначениеВДанныеФормы(объект_ВыдачаТранзита,Объект);
	КонецЕсли;
	УстановитьВидимость();
	
	ПодсветкаСтрок();
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	УстановитьКоличествоПомеченныхСтрок();
	//Сканер штрихкода
	СтоСП_Клиент.ПодключитьСканерШК(УникальныйИдентификатор);
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	СП_РаботаСДокументами_Клиент.ПроверитьОтветственного(ЭтотОбъект,Отказ);
	УстановитьКоличествоПомеченныхСтрок();	
	если    	объект.КонтролироватьСупергруппы  Тогда
		Если	не 	ЗначениеЗаполнено(Объект.Супергруппа) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо сформировать ""супергруппу""");
			Отказ 									= истина;
			Элементы.ГруппаСтраницы.ТекущаяСтраница = элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаСупергруппа;
		КонецЕсли;	
		Если	не 	ЗначениеЗаполнено(Объект.МестоХраненияСупергруппы) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить ""место хранения супер группы""");
			Отказ 									= истина;
			Элементы.ГруппаСтраницы.ТекущаяСтраница = элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаСупергруппа;
		КонецЕсли;	
		Если	не 	ЗначениеЗаполнено(Объект.ГабаритСупергруппы) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить ""габарит супергруппы""");
			Отказ 									= истина;
			Элементы.ГруппаСтраницы.ТекущаяСтраница = элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаСупергруппа;
		КонецЕсли;	

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПокупкиПриИзменении(Элемент)
	УстановитьКоличествоПомеченныхСтрок();
	ОБъект.Супергруппа = Неопределено;
КонецПроцедуры


&НаКлиенте
Процедура КонтролироватьСупергруппыПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры



#КонецОбласти

#Область Выделение


&НаКлиенте
Процедура ПометитьВсе(Команда)
	Если Элементы.Покупки.ТолькоПросмотр Тогда Возврат; КонецЕсли;
	Для каждого стр из Объект.Покупки Цикл
		стр.Подбор=Истина;
	КонецЦикла;	
	УстановитьКоличествоПомеченныхСтрок();
КонецПроцедуры


&НаКлиенте
Процедура СнятьВыделениеВсе(Команда)
	Если Элементы.Покупки.ТолькоПросмотр Тогда Возврат; КонецЕсли;
	Для каждого стр из Объект.Покупки Цикл
		стр.Подбор=Ложь;
	КонецЦикла;
	УстановитьКоличествоПомеченныхСтрок();
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьВыделение(Команда)
	Если Элементы.Покупки.ТолькоПросмотр Тогда Возврат; КонецЕсли;
	Для каждого стр из Объект.Покупки Цикл
		стр.Подбор=не стр.Подбор;
	КонецЦикла;
	УстановитьКоличествоПомеченныхСтрок();
КонецПроцедуры


#КонецОбласти


#Область ВспомогательныеПроцедуры

Процедура ПодсветкаСтрок()
    ЭтаФорма.УсловноеОформление.Элементы.Очистить();
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Покупки");
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Покупки.Подбор");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = истина;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноЗеленый);	
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Покупки");
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Покупки.Предупреждение");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Перечисления.ПредупрежденияПрихода.ЧерныйСписок;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоСерый);	
	
КонецПроцедуры

Процедура УстановитьКоличествоПомеченныхСтрок()
	Масс						= Объект.Покупки.НайтиСтроки(новый Структура("Подбор",Истина));	
	КоличествоПомеченныхСтрок	= масс.Количество();
	Объект.СтоимостьИтого		= 0;
	Объект.КоличествоИтого		= 0;
	Для каждого стр из Масс Цикл
		Объект.СтоимостьИтого		= Объект.СтоимостьИтого		+ Стр.СтоимостьХранения;
		Объект.КоличествоИтого		= Объект.КоличествоИтого	+ Стр.Количество;
	КонецЦикла;
КонецПроцедуры	

Процедура УстановитьВидимость()
	УстановитьКоличествоПомеченныхСтрок();
	Элементы.ГруппаСупергруппа.Видимость	= Объект.КонтролироватьСупергруппы;	
	Элементы.ПокупкиТочкаНазначения.Видимость = не ЗначениеЗаполнено(Объект.ТочкаНазначения);
КонецПроцедуры

#КонецОбласти

#Область Супергруппы

&НаКлиенте
Процедура СформироватьСупергруппу(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("СформироватьСупергруппу_Завершение", ЭтотОбъект),
					"Документ будет записан. Продолжить?", РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСупергруппу_Завершение(РезультатЗапроса, ДополнительныеПараметры)  Экспорт
	Если РезультатЗапроса 	= КодВозвратаДиалога.Нет Тогда Возврат; КонецЕсли;
	УстановитьКоличествоПомеченныхСтрок();
	СформироватьСупергруппу_Завершение_НаСервере(ДополнительныеПараметры);
	Умолчания	= аСПНаСервере.ПолучитьЗначенияПоУмолчанию(объект.ТочкаНазначения,Ложь);
	Если ЗначениеЗаполнено(Умолчания.Габарит) Тогда
		Объект.ГабаритСупергруппы = Умолчания.Габарит;
	КонецЕсли;
	Если ЗначениеЗаполнено(Умолчания.МестоХранения) Тогда
		Объект.МестоХраненияСупергруппы = Умолчания.МестоХранения;
	КонецЕсли;
	
КонецПроцедуры 

Процедура СформироватьСупергруппу_Завершение_НаСервере(ДополнительныеПараметры)
	Записать();
	Объект.Супергруппа		= СП_РаботаСоСправочниками.ПолучитьСупергруппуПоНакладной(Объект.Ссылка);
	Модифицированность		= истина;
КонецПроцедуры 


#КонецОбласти


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если ЗначениеЗаполнено(Объект.Супергруппа) Тогда
		СП_РаботаСоСправочниками.ПолучитьСупергруппуПоНакладной(Объект.Ссылка);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ТочкаНазначенияПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры



// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

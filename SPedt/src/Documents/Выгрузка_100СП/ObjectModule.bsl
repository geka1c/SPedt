Функция   ЗаполнитьНеОтправленными() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	Обмен100СПрнОстатки.Партия КАК Документ,
		|	Обмен100СПрнОстатки.типОбмена КАК типОбмена,
		|	Обмен100СПрнОстатки.КоличествоНеОтправленыхОстаток КАК КоличествоНеОтправленыхОстаток
		|ПОМЕСТИТЬ ДокументыДляВыгрузки
		|ИЗ
		|	РегистрНакопления.Обмен100СПрн.Остатки(&НаДату, ) КАК Обмен100СПрнОстатки
		|ГДЕ
		|	Обмен100СПрнОстатки.КоличествоНеОтправленыхОстаток > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Обмен100СПрнОстатки.Партия.Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументыДляВыгрузки.Документ КАК Документ,
		|	ДокументыДляВыгрузки.типОбмена КАК типОбмена
		|ИЗ
		|	ДокументыДляВыгрузки КАК ДокументыДляВыгрузки
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументыДляВыгрузки.Документ.Дата,
		|	ДокументыДляВыгрузки.Документ,
		|	ДокументыДляВыгрузки.типОбмена
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДокументыДляВыгрузки.Документ.Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриходнаяПокупки.ШК КАК Мегаордер,
		|	ДокументыДляВыгрузки.Документ.Ссылка КАК Партия,
		|	ПриходнаяПокупки.НомерСтроки КАК СтрокаВПартии,
		|	ДокументыДляВыгрузки.типОбмена КАК ТипОбмена,
		|	ДокументыДляВыгрузки.Документ.Дата КАК Период,
		|	ДокументыДляВыгрузки.Документ.Номер КАК ПартияНомер
		|ИЗ
		|	ДокументыДляВыгрузки КАК ДокументыДляВыгрузки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Приходная.Покупки КАК ПриходнаяПокупки
		|		ПО ДокументыДляВыгрузки.Документ = ПриходнаяПокупки.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДвижениеТранзитаПокупки.Покупка.ШК,
		|	ДокументыДляВыгрузки.Документ.Ссылка,
		|	ДвижениеТранзитаПокупки.НомерСтроки,
		|	ДокументыДляВыгрузки.типОбмена,
		|	ДокументыДляВыгрузки.Документ.Дата,
		|	ДвижениеТранзитаПокупки.Партия.Номер
		|ИЗ
		|	ДокументыДляВыгрузки КАК ДокументыДляВыгрузки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Движение.Покупки КАК ДвижениеТранзитаПокупки
		|		ПО ДокументыДляВыгрузки.Документ = ДвижениеТранзитаПокупки.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДвижениеТранзитаПокупки.Покупка.ШК,
		|	ДокументыДляВыгрузки.Документ.Ссылка,
		|	ДвижениеТранзитаПокупки.НомерСтроки,
		|	ДокументыДляВыгрузки.типОбмена,
		|	ДокументыДляВыгрузки.Документ.Дата,
		|	ДокументыДляВыгрузки.Документ.Номер
		|ИЗ
		|	ДокументыДляВыгрузки КАК ДокументыДляВыгрузки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеТранзита.ПокупкиТранзит КАК ДвижениеТранзитаПокупки
		|		ПО ДокументыДляВыгрузки.Документ = ДвижениеТранзитаПокупки.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РазборКоробкиПокупки.ШК,
		|	ДокументыДляВыгрузки.Документ.Ссылка,
		|	РазборКоробкиПокупки.НомерСтроки,
		|	ДокументыДляВыгрузки.типОбмена,
		|	ДокументыДляВыгрузки.Документ.Дата,
		|	ДокументыДляВыгрузки.Документ.Номер
		|ИЗ
		|	ДокументыДляВыгрузки КАК ДокументыДляВыгрузки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазборКоробки.Покупки КАК РазборКоробкиПокупки
		|		ПО ДокументыДляВыгрузки.Документ = РазборКоробкиПокупки.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасходнаяПокупки.ШК,
		|	ДокументыДляВыгрузки.Документ.Ссылка,
		|	РасходнаяПокупки.НомерСтроки,
		|	ДокументыДляВыгрузки.типОбмена,
		|	ДокументыДляВыгрузки.Документ.Дата,
		|	ДокументыДляВыгрузки.Документ.Номер
		|ИЗ
		|	ДокументыДляВыгрузки КАК ДокументыДляВыгрузки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Расходная.Покупки КАК РасходнаяПокупки
		|		ПО ДокументыДляВыгрузки.Документ = РасходнаяПокупки.Ссылка
		|		и РасходнаяПокупки.Подбор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВыдачаТранзитаПокупки.ШК,
		|	ДокументыДляВыгрузки.Документ.Ссылка,
		|	ВыдачаТранзитаПокупки.НомерСтроки,
		|	ДокументыДляВыгрузки.типОбмена,
		|	ДокументыДляВыгрузки.Документ.Дата,
		|	ДокументыДляВыгрузки.Документ.Номер
		|ИЗ
		|	ДокументыДляВыгрузки КАК ДокументыДляВыгрузки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыдачаТранзита.Покупки КАК ВыдачаТранзитаПокупки
		|		ПО ДокументыДляВыгрузки.Документ = ВыдачаТранзитаПокупки.Ссылка
		|			И (ДокументыДляВыгрузки.типОбмена = ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.СуперГруппа))
		|			И (ВыдачаТранзитаПокупки.ШК.типМегаордера = ЗНАЧЕНИЕ(Перечисление.типМегаордера.Супергруппа))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВыдачаТранзитаПокупки.ШК,
		|	ДокументыДляВыгрузки.Документ.Ссылка,
		|	ВыдачаТранзитаПокупки.НомерСтроки,
		|	ДокументыДляВыгрузки.типОбмена,
		|	ДокументыДляВыгрузки.Документ.Дата,
		|	ДокументыДляВыгрузки.Документ.Номер
		|ИЗ
		|	ДокументыДляВыгрузки КАК ДокументыДляВыгрузки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыдачаТранзита.Покупки КАК ВыдачаТранзитаПокупки
		|		ПО ДокументыДляВыгрузки.Документ = ВыдачаТранзитаПокупки.Ссылка
		|			И (ДокументыДляВыгрузки.типОбмена <> ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.СуперГруппа))
		|			И (ВыдачаТранзитаПокупки.ШК.типМегаордера <> ЗНАЧЕНИЕ(Перечисление.типМегаордера.Супергруппа))
		|			И (ВыдачаТранзитаПокупки.ШК <> ЗНАЧЕНИЕ(Справочник.Мегаордера.нулевой))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ФормированиеКоробкиНовыеПокупки.ШК,
		|	ДокументыДляВыгрузки.Документ.Ссылка,
		|	ФормированиеКоробкиНовыеПокупки.НомерСтроки,
		|	ДокументыДляВыгрузки.типОбмена,
		|	ДокументыДляВыгрузки.Документ.Дата,
		|	ДокументыДляВыгрузки.Документ.Номер
		|ИЗ
		|	ДокументыДляВыгрузки КАК ДокументыДляВыгрузки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ФормированиеКоробки.НовыеПокупки КАК ФормированиеКоробкиНовыеПокупки
		|		ПО ДокументыДляВыгрузки.Документ = ФормированиеКоробкиНовыеПокупки.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВозвратПокупокОрганизаторуПокупки.ШК,
		|	ДокументыДляВыгрузки.Документ.Ссылка,
		|	ВозвратПокупокОрганизаторуПокупки.НомерСтроки,
		|	ДокументыДляВыгрузки.типОбмена,
		|	ДокументыДляВыгрузки.Документ.Дата,
		|	ДокументыДляВыгрузки.Документ.Номер
		|ИЗ
		|	ДокументыДляВыгрузки КАК ДокументыДляВыгрузки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратПокупокОрганизатору.Покупки КАК ВозвратПокупокОрганизаторуПокупки
		|		ПО ДокументыДляВыгрузки.Документ = ВозвратПокупокОрганизаторуПокупки.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПередачаВозвратовОрганизаторуПокупки.ШК,
		|	ДокументыДляВыгрузки.Документ.Ссылка,
		|	ПередачаВозвратовОрганизаторуПокупки.НомерСтроки,
		|	ДокументыДляВыгрузки.типОбмена,
		|	ДокументыДляВыгрузки.Документ.Дата,
		|	ДокументыДляВыгрузки.Документ.Номер
		|ИЗ
		|	ДокументыДляВыгрузки КАК ДокументыДляВыгрузки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаВозвратовОрганизатору.Покупки КАК ПередачаВозвратовОрганизаторуПокупки
		|		ПО ДокументыДляВыгрузки.Документ = ПередачаВозвратовОрганизаторуПокупки.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПоступлениеПристрояЗаказы.ШК,
		|	ДокументыДляВыгрузки.Документ.Ссылка,
		|	ПоступлениеПристрояЗаказы.НомерСтроки,
		|	ДокументыДляВыгрузки.типОбмена,
		|	ДокументыДляВыгрузки.Документ.Дата,
		|	ДокументыДляВыгрузки.Документ.Номер
		|ИЗ
		|	ДокументыДляВыгрузки КАК ДокументыДляВыгрузки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеПристроя.Заказы КАК ПоступлениеПристрояЗаказы
		|		ПО ДокументыДляВыгрузки.Документ = ПоступлениеПристрояЗаказы.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РазборКоробки.Супергруппа,
		|	ДокументыДляВыгрузки.Документ.Ссылка,
		|	1,
		|	ДокументыДляВыгрузки.типОбмена,
		|	ДокументыДляВыгрузки.Документ.Дата,
		|	ДокументыДляВыгрузки.Документ.Номер
		|ИЗ
		|	ДокументыДляВыгрузки КАК ДокументыДляВыгрузки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазборКоробки КАК РазборКоробки
		|		ПО ДокументыДляВыгрузки.Документ = РазборКоробки.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрацияСупперГруппыГруппы.СупперГруппа,
		|	ДокументыДляВыгрузки.Документ.Ссылка,
		|	РегистрацияСупперГруппыГруппы.НомерСтроки,
		|	ДокументыДляВыгрузки.типОбмена,
		|	ДокументыДляВыгрузки.Документ.Дата,
		|	ДокументыДляВыгрузки.Документ.Номер
		|ИЗ
		|	ДокументыДляВыгрузки КАК ДокументыДляВыгрузки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РегистрацияСупперГруппы.Группы КАК РегистрацияСупперГруппыГруппы
		|		ПО ДокументыДляВыгрузки.Документ = РегистрацияСупперГруппыГруппы.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДокументыДляВыгрузки.Документ.Супергруппа,
		|	ДокументыДляВыгрузки.Документ.Ссылка,
		|	1,
		|	ДокументыДляВыгрузки.типОбмена,
		|	ДокументыДляВыгрузки.Документ.Дата,
		|	ДокументыДляВыгрузки.Документ.Номер
		|ИЗ
		|	ДокументыДляВыгрузки КАК ДокументыДляВыгрузки
		|ГДЕ
		|	ДокументыДляВыгрузки.Документ.Супергруппа <> ЗНАЧЕНИЕ(Справочник.Мегаордера.ПустаяСсылка)
		|	И (ДокументыДляВыгрузки.типОбмена = ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.СуперГруппаКолено)
		|			ИЛИ ДокументыДляВыгрузки.типОбмена = ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.СуперГруппа))";
	
	Запрос.УстановитьПараметр("НаДату", КонецДня(Дата));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВыгружаемыДокументы.Загрузить(МассивРезультатов[1].Выгрузить());
	ВыгружаемыеДанные.Загрузить(МассивРезультатов[2].Выгрузить());
	Для каждого стр из ВыгружаемыеДанные Цикл
		Если ЗначениеЗаполнено(стр.Мегаордер)Тогда
			Если  не ЗначениеЗаполнено(стр.Мегаордер.Участник) Тогда
				об				= стр.Мегаордер.ПолучитьОбъект();
				об.Участник		= Справочники.Участники.нулевой   ;
				об.Записать();
			КонецЕсли;		
			
			Если Истина Тогда
				
			КонецЕсли;			
		КонецЕсли;	
		
	КонецЦикла;	
	Статус=Перечисления.СтатусОтпавкиНаСайт.Сформирован;
	Возврат ВыгружаемыеДанные.Количество();
КонецФункции

Функция   СкомпоноватьДляВыгрузки() Экспорт
	тзВсеДокументы	= выгружаемыеДанные.Выгрузить(,"типОбмена,Партия");
	тзВсеДокументы.Колонки.Добавить("ТипПартии");
	Для каждого стр из тзВсеДокументы Цикл
		стр.ТипПартии=ТипЗнч(стр.Партия);
	КонецЦикла;	
		
	ЗаписьXML	= новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку("UTF-8");
	ЗаписьXML.ЗаписатьНачалоЭлемента("distributors");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:xsd","http://www.w3.org/2001/XMLSchema");
	ЗаписьXML.ЗаписатьАтрибут("apiVersion","17");	
	///////
	ЗаписьXML.ЗаписатьНачалоЭлемента("incomes");	
	ТипОбмена = Перечисления.ТипыОбменов100сп.Приход;
	тзТипыПартии=тзВсеДокументы.Скопировать(новый Структура("ТипОбмена",ТипОбмена),"ТипПартии");
	тзТипыПартии.Свернуть("ТипПартии");
	Для каждого Элем Из тзТипыПартии Цикл
		тзПартии_incomes	= тзВсеДокументы.Скопировать(новый Структура("ТипПартии,типОбмена",Элем.ТипПартии,ТипОбмена),"Партия");
		хмл_income			= Документы[Метаданные.НайтиПоТипу(Элем.ТипПартии).Имя].ПолучитьТэг_Income(тзПартии_incomes.ВыгрузитьКолонку("Партия"));	
		ЗаписьXML.ЗаписатьБезОбработки(хмл_income);
	КонецЦикла;	
	ЗаписьXML.ЗаписатьКонецЭлемента();           //incomes
	//////
	
	
	
	///////
	ЗаписьXML.ЗаписатьНачалоЭлемента("deliveries");	
	ТипОбмена = Перечисления.ТипыОбменов100сп.Расход;
	тзТипыПартии=тзВсеДокументы.Скопировать(новый Структура("ТипОбмена",ТипОбмена),"ТипПартии");
	тзТипыПартии.Свернуть("ТипПартии");
	Для каждого Элем Из тзТипыПартии Цикл
		тзПартии_incomes	= тзВсеДокументы.Скопировать(новый Структура("ТипПартии,типОбмена",Элем.ТипПартии,ТипОбмена),"Партия");
		хмл_income			= Документы[Метаданные.НайтиПоТипу(Элем.ТипПартии).Имя].ПолучитьТэг_delivery(тзПартии_incomes.ВыгрузитьКолонку("Партия"));	
		ЗаписьXML.ЗаписатьБезОбработки(хмл_income);
	КонецЦикла;	
	ЗаписьXML.ЗаписатьКонецЭлемента();           //deliveries
	
	
	///////
	ЗаписьXML.ЗаписатьНачалоЭлемента("transfers");	
	ТипОбмена = Перечисления.ТипыОбменов100сп.Транзит;
	тзТипыПартии=тзВсеДокументы.Скопировать(новый Структура("ТипОбмена",ТипОбмена),"ТипПартии");
	тзТипыПартии.Свернуть("ТипПартии");
	Для каждого Элем Из тзТипыПартии Цикл
		тзПартии_incomes	= тзВсеДокументы.Скопировать(новый Структура("ТипПартии,типОбмена",Элем.ТипПартии,ТипОбмена),"Партия");
		хмл_income			= Документы[Метаданные.НайтиПоТипу(Элем.ТипПартии).Имя].ПолучитьТэг_transfer(тзПартии_incomes.ВыгрузитьКолонку("Партия"));	
		ЗаписьXML.ЗаписатьБезОбработки(хмл_income);
	КонецЦикла;	
	ЗаписьXML.ЗаписатьКонецЭлемента();           //transfers
	
	
	///////
	ЗаписьXML.ЗаписатьНачалоЭлемента("returns");	
	ТипОбмена = Перечисления.ТипыОбменов100сп.Возврат;
	тзТипыПартии=тзВсеДокументы.Скопировать(новый Структура("ТипОбмена",ТипОбмена),"ТипПартии");
	тзТипыПартии.Свернуть("ТипПартии");
	Для каждого Элем Из тзТипыПартии Цикл
		тзПартии_incomes	= тзВсеДокументы.Скопировать(новый Структура("ТипПартии,типОбмена",Элем.ТипПартии,ТипОбмена),"Партия");
		хмл_income			= Документы[Метаданные.НайтиПоТипу(Элем.ТипПартии).Имя].ПолучитьТэг_return(тзПартии_incomes.ВыгрузитьКолонку("Партия"));	
		ЗаписьXML.ЗаписатьБезОбработки(хмл_income);
	КонецЦикла;	
	ЗаписьXML.ЗаписатьКонецЭлемента();           //returns
	
	//////
	
	
	///////
	ЗаписьXML.ЗаписатьНачалоЭлемента("discards");	
	ТипОбмена = Перечисления.ТипыОбменов100сп.ПередачаВозврата;
	тзТипыПартии=тзВсеДокументы.Скопировать(новый Структура("ТипОбмена",ТипОбмена),"ТипПартии");
	тзТипыПартии.Свернуть("ТипПартии");
	Для каждого Элем Из тзТипыПартии Цикл
		тзПартии_incomes	= тзВсеДокументы.Скопировать(новый Структура("ТипПартии,типОбмена",Элем.ТипПартии,ТипОбмена),"Партия");
		хмл_income			= Документы[Метаданные.НайтиПоТипу(Элем.ТипПартии).Имя].ПолучитьТэг_discard(тзПартии_incomes.ВыгрузитьКолонку("Партия"));	
		ЗаписьXML.ЗаписатьБезОбработки(хмл_income);
	КонецЦикла;	
	ЗаписьXML.ЗаписатьКонецЭлемента();           //discard
	
	//////
	///////
	ЗаписьXML.ЗаписатьНачалоЭлемента("discards");	
	ТипОбмена = Перечисления.ТипыОбменов100сп.Списание;
	тзТипыПартии=тзВсеДокументы.Скопировать(новый Структура("ТипОбмена",ТипОбмена),"ТипПартии");
	тзТипыПартии.Свернуть("ТипПартии");
	Для каждого Элем Из тзТипыПартии Цикл
		тзПартии_incomes	= тзВсеДокументы.Скопировать(новый Структура("ТипПартии,типОбмена",Элем.ТипПартии,ТипОбмена),"Партия");
		хмл_income			= Документы[Метаданные.НайтиПоТипу(Элем.ТипПартии).Имя].ПолучитьТэг_discard(тзПартии_incomes.ВыгрузитьКолонку("Партия"));	
		ЗаписьXML.ЗаписатьБезОбработки(хмл_income);
	КонецЦикла;	
	ЗаписьXML.ЗаписатьКонецЭлемента();           //discard

	
	
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("superGroups");	
	ТипОбмена = Перечисления.ТипыОбменов100сп.СуперГруппа;
	тзТипыПартии=тзВсеДокументы.Скопировать(новый Структура("ТипОбмена",ТипОбмена),"ТипПартии");
	тзТипыПартии.Свернуть("ТипПартии");
	Для каждого Элем Из тзТипыПартии Цикл
		тзПартии_incomes	= тзВсеДокументы.Скопировать(новый Структура("ТипПартии,типОбмена",Элем.ТипПартии,ТипОбмена),"Партия");
		хмл_income			= Документы[Метаданные.НайтиПоТипу(Элем.ТипПартии).Имя].ПолучитьТэг_superGroup(тзПартии_incomes.ВыгрузитьКолонку("Партия"));	
		ЗаписьXML.ЗаписатьБезОбработки(хмл_income);
	КонецЦикла;	
	ЗаписьXML.ЗаписатьКонецЭлемента();           //superGroups
	
	//////
	ЗаписьXML.ЗаписатьНачалоЭлемента("superGroupReceipts");	
	ТипОбмена = Перечисления.ТипыОбменов100сп.СуперГруппаРегистрация;
	тзТипыПартии=тзВсеДокументы.Скопировать(новый Структура("ТипОбмена",ТипОбмена),"ТипПартии");
	тзТипыПартии.Свернуть("ТипПартии");
	Для каждого Элем Из тзТипыПартии Цикл
		тзПартии_incomes	= тзВсеДокументы.Скопировать(новый Структура("ТипПартии,типОбмена",Элем.ТипПартии,ТипОбмена),"Партия");
		хмл_income			= Документы[Метаданные.НайтиПоТипу(Элем.ТипПартии).Имя].ПолучитьТэг_superGroupReceipt(тзПартии_incomes.ВыгрузитьКолонку("Партия"));	
		ЗаписьXML.ЗаписатьБезОбработки(хмл_income);
	КонецЦикла;	
	ЗаписьXML.ЗаписатьКонецЭлемента();           //superGroupReceipts
	
	
	//////
	ЗаписьXML.ЗаписатьНачалоЭлемента("superGroupStages");	
	ТипОбмена = Перечисления.ТипыОбменов100сп.СуперГруппаКолено;
	тзТипыПартии=тзВсеДокументы.Скопировать(новый Структура("ТипОбмена",ТипОбмена),"ТипПартии");
	тзТипыПартии.Свернуть("ТипПартии");
	Для каждого Элем Из тзТипыПартии Цикл
		тзПартии_incomes	= тзВсеДокументы.Скопировать(новый Структура("ТипПартии,типОбмена",Элем.ТипПартии,ТипОбмена),"Партия");
		хмл_income			= Документы[Метаданные.НайтиПоТипу(Элем.ТипПартии).Имя].ПолучитьТэг_superGroupStage(тзПартии_incomes.ВыгрузитьКолонку("Партия"));	
		ЗаписьXML.ЗаписатьБезОбработки(хмл_income);
	КонецЦикла;	
	ЗаписьXML.ЗаписатьКонецЭлемента();           //superGroupStages

	
	
	ЗаписьXML.ЗаписатьКонецЭлемента();           //distributors
	Возврат ЗаписьXML.Закрыть();
КонецФункции	

Функция   ВыгрузитьНаСайт() Экспорт
	
	СтрокаПротокола					= ПротоколыПередач.Добавить();
	СтрокаПротокола.ДатаНачала		= ТекущаяДата();
	хмл_отправили					= СкомпоноватьДляВыгрузки();
	стр_Ответа 						= СтоСПОбмен_Выгрузка100сп.Выгрузить(хмл_отправили);
	СтрокаПротокола.ДатаОкончания=ТекущаяДата();
	СтрокаПротокола.ПолученныеДанные= стр_Ответа.Получили;
	Если не стр_Ответа.Свойство("Разбор") Тогда
		СтрокаПротокола.Результат=Ложь;
		Возврат ложь;
	КонецЕсли;
	СтрокаПротокола.Результат= стр_Ответа.Разбор.авторизацияВыполнена;
	Если не стр_Ответа.Разбор.авторизацияВыполнена Тогда Возврат ложь; КонецЕсли;
	
	Статус=Перечисления.СтатусОтпавкиНаСайт.Отправлен;
	тз=Неопределено;
	Если стр_Ответа.Разбор.Свойство("incomes",тз) Тогда
		incomes_ОтразитьРезультатВыгрузки(тз);
	КонецЕсли;
	Если стр_Ответа.Разбор.Свойство("deliveries",тз) Тогда
		deliveries_ОтразитьРезультатВыгрузки(тз);
	КонецЕсли;	
	
	Если стр_Ответа.Разбор.Свойство("transfers",тз) Тогда
		transfers_ОтразитьРезультатВыгрузки(тз);
	КонецЕсли;	
	
	Если стр_Ответа.Разбор.Свойство("returns",тз) Тогда
		returns_ОтразитьРезультатВыгрузки(тз);
	КонецЕсли;		
	Если стр_Ответа.Разбор.Свойство("discards",тз) Тогда
		discards_ОтразитьРезультатВыгрузки(тз);
	КонецЕсли;	
	Если стр_Ответа.Разбор.Свойство("superGroups",тз) Тогда
		superGroups_ОтразитьРезультатВыгрузки(тз);
	КонецЕсли;	
	Если стр_Ответа.Разбор.Свойство("superGroupReceipts",тз) Тогда
		superGroupReceipts_ОтразитьРезультатВыгрузки(тз);
	КонецЕсли;	
	Если стр_Ответа.Разбор.Свойство("superGroupStages",тз) Тогда
		superGroupStages_ОтразитьРезультатВыгрузки(тз);
	КонецЕсли;		
	
	Возврат Истина;
	
КонецФункции

Процедура incomes_ОтразитьРезультатВыгрузки(тз) 
	массСтрок=тз.НайтиСтроки(новый структура("orderType","group"));
	Для каждого стр из массСтрок Цикл
		стр.groupCode=Формат(число(стр.groupCode),"ЧЦ=8; ЧН=0; ЧВН=; ЧГ=0"); 
	КонецЦикла;		
	массСтрок=тз.НайтиСтроки(новый структура("orderType","bulletin"));
	Для каждого стр из массСтрок Цикл
		стр.orderId=Формат(число(стр.orderId),"ЧЦ=10; ЧН=0; ЧВН=; ЧГ=0"); 
	КонецЦикла;		
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ТЗ.arrivalNumber КАК arrivalNumber,
	|	ТЗ.firstIncomeCode КАК firstIncomeCode,
	|	ТЗ.message КАК message,
	|	ТЗ.stickerId КАК stickerId,
	|	ТЗ.orderId КАК orderId,
	|	ТЗ.packageId КАК packageId,
	|	ТЗ.groupCode КАК groupCode,
	|	ТЗ.orderType КАК orderType,
	|	ТЗ.pid КАК pid,
	|	ТЗ.result КАК result,
	|	ТЗ.date КАК date,
	|	ТЗ.uid КАК uid
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выгрузка_100СПВыгружаемыеДанные.Мегаордер КАК Мегаордер,
	|	Выгрузка_100СПВыгружаемыеДанные.НомерСтроки КАК НомерСтроки,
	|	Выгрузка_100СПВыгружаемыеДанные.Партия КАК Партия,
	|	Выгрузка_100СПВыгружаемыеДанные.ПартияНомер КАК ПартияНомер
	|ПОМЕСТИТЬ Пакет
	|ИЗ
	|	Документ.Выгрузка_100СП.ВыгружаемыеДанные КАК Выгрузка_100СПВыгружаемыеДанные
	|ГДЕ
	|	Выгрузка_100СПВыгружаемыеДанные.Ссылка = &Ссылка
	|	И Выгрузка_100СПВыгружаемыеДанные.типОбмена = ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.Приход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.arrivalNumber КАК arrivalNumber,
	|	ВТ.firstIncomeCode КАК firstIncomeCode,
	|	ВТ.message КАК message,
	|	ВТ.orderId КАК orderId,
	|	ВТ.stickerId КАК stickerId,
	|	ВТ.groupCode КАК groupCode,
	|	ВТ.orderType КАК orderType,
	|	ВТ.pid КАК pid,
	|	ВТ.result КАК result,
	|	ВТ.date КАК date,
	|	ВТ.uid КАК uid,
	|	ПакетНаСайтДетально.Мегаордер.Покупка.Код КАК ДляПроверки,
	|	ВЫРАЗИТЬ(ПакетНаСайтДетально.Мегаордер.Покупка.Код КАК ЧИСЛО) КАК ДляПроверки2,
	|	ПакетНаСайтДетально.Мегаордер КАК Мегаордер,
	|	ПакетНаСайтДетально.НомерСтроки КАК НомерСтроки,
	|	ПакетНаСайтДетально.Партия КАК Партия,
	|	ПакетНаСайтДетально.ПартияНомер КАК ПартияНомер
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Пакет КАК ПакетНаСайтДетально
	|		ПО (ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(2))) = ""sp""
	|					ТОГДА ВТ.pid = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Покупки)
	|							И ВТ.uid = ПакетНаСайтДетально.Мегаордер.Участник.Код
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(5))) = ""group""
	|					ТОГДА (ВЫРАЗИТЬ(ВТ.groupCode КАК СТРОКА(25))) = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Коробки)
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(7))) = ""package""
	|					ТОГДА ВТ.packageId = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Посылки)
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(8))) = ""bulletin""
	|					ТОГДА (ВЫРАЗИТЬ(ВТ.orderId КАК СТРОКА(10))) = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Пристрой)
	|				ИНАЧЕ (ВЫРАЗИТЬ(ВТ.orderId КАК СТРОКА(8))) = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|						И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Заказы)
	|			КОНЕЦ)";
	Запрос.Параметры.Вставить("ТЗ",ТЗ);
	Запрос.Параметры.Вставить("Ссылка",Ссылка);
	Результат=Запрос.Выполнить();
	ТЗ = Результат.Выгрузить();
	
	//Отражаем результат обмена
	Если тз<>неопределено Тогда  
		Для каждого стр из тз Цикл
			Если стр.НомерСтроки =null Тогда Продолжить; КонецЕсли;
			//Если Стр.arrivalNumber<>Прав(Стр.Партия.Номер,(СтрДлина(Стр.Партия.Номер)-3)) 
			//	или (Стр.ПартияНомер<>Прав(Стр.Партия.Номер,(СтрДлина(Стр.Партия.Номер)-3)))
			//	Тогда Продолжить; КонецЕсли;
			
			ВыгружаемыеДанные[стр.НомерСтроки-1].Отправлено			= Истина;
			ВыгружаемыеДанные[стр.НомерСтроки-1].РезультатОбмена	= Стр.result;
			ВыгружаемыеДанные[стр.НомерСтроки-1].ПерваяТочка		= СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду(Стр.firstIncomeCode);

			Если стр.result="error" Тогда
				ВыгружаемыеДанные[стр.НомерСтроки-1].СообщениеОшибки =Стр.message;
				Продолжить;
			Конецесли;
		КонецЦикла;
	КонецЕсли;		
КонецПроцедуры

Процедура deliveries_ОтразитьРезультатВыгрузки(тз) 
	массСтрок=тз.НайтиСтроки(новый структура("orderType","group"));
	Для каждого стр из массСтрок Цикл
		стр.groupCode=Формат(число(стр.groupCode),"ЧЦ=8; ЧН=0; ЧВН=; ЧГ=0"); 
	КонецЦикла;		
	массСтрок=тз.НайтиСтроки(новый структура("orderType","bulletin"));
	Для каждого стр из массСтрок Цикл
		стр.orderId=Формат(число(стр.orderId),"ЧЦ=10; ЧН=0; ЧВН=; ЧГ=0"); 
	КонецЦикла;		
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ТЗ.arrivalNumber КАК arrivalNumber,
	|	ТЗ.packageId КАК packageId,
	|	ТЗ.message КАК message,
	|	ТЗ.stickerId КАК stickerId,
	|	ТЗ.orderId КАК orderId,
	|	ТЗ.groupCode КАК groupCode,
	|	ТЗ.orderType КАК orderType,
	|	ТЗ.pid КАК pid,
	|	ТЗ.result КАК result,
	|	ТЗ.date КАК date,
	|	ТЗ.uid КАК uid
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выгрузка_100СПВыгружаемыеДанные.Мегаордер КАК Мегаордер,
	|	Выгрузка_100СПВыгружаемыеДанные.НомерСтроки КАК НомерСтроки,
	|	Выгрузка_100СПВыгружаемыеДанные.Партия КАК Партия
	|ПОМЕСТИТЬ Пакет
	|ИЗ
	|	Документ.Выгрузка_100СП.ВыгружаемыеДанные КАК Выгрузка_100СПВыгружаемыеДанные
	|ГДЕ
	|	Выгрузка_100СПВыгружаемыеДанные.Ссылка = &Ссылка
	|	И Выгрузка_100СПВыгружаемыеДанные.типОбмена = ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.Расход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.arrivalNumber КАК arrivalNumber,
	|	ВТ.packageId КАК packageId,
	|	ВТ.message КАК message,
	|	ВТ.orderId КАК orderId,
	|	ВТ.stickerId КАК stickerId,
	|	ВТ.groupCode КАК groupCode,
	|	ВТ.orderType КАК orderType,
	|	ВТ.pid КАК pid,
	|	ВТ.result КАК result,
	|	ВТ.date КАК date,
	|	ВТ.uid КАК uid,
	|	ПакетНаСайтДетально.Мегаордер.Покупка.Код КАК ДляПроверки,
	|	ВЫРАЗИТЬ(ПакетНаСайтДетально.Мегаордер.Покупка.Код КАК ЧИСЛО) КАК ДляПроверки2,
	|	ПакетНаСайтДетально.Мегаордер КАК Мегаордер,
	|	ПакетНаСайтДетально.НомерСтроки КАК НомерСтроки,
	|	ПакетНаСайтДетально.Партия КАК Партия
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Пакет КАК ПакетНаСайтДетально
	|		ПО (ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(2))) = ""sp""
	|					ТОГДА ВТ.pid = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Покупки)
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(7))) = ""package""
	|					ТОГДА ВТ.packageId = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Посылки)
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(5))) = ""group""
	|					ТОГДА (ВЫРАЗИТЬ(ВТ.groupCode КАК СТРОКА(25))) = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Коробки)
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(8))) = ""bulletin""
	|					ТОГДА (ВЫРАЗИТЬ(ВТ.orderId КАК СТРОКА(10))) = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Пристрой)
	|				ИНАЧЕ (ВЫРАЗИТЬ(ВТ.orderId КАК СТРОКА(8))) = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|						И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Заказы)
	|			КОНЕЦ)
	|			И Выбор когда (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(7))) = ""package"" Тогда Истина Иначе ВТ.uid = ПакетНаСайтДетально.Мегаордер.Участник.Код Конец";
	Запрос.Параметры.Вставить("ТЗ",ТЗ);
	Запрос.Параметры.Вставить("Ссылка",Ссылка);
	Результат=Запрос.Выполнить();
	ТЗ = Результат.Выгрузить();
	
	//Отражаем результат обмена
	Если тз<>неопределено Тогда  
		Для каждого стр из тз Цикл
			Если стр.НомерСтроки =null Тогда Продолжить; КонецЕсли;
			Если Стр.arrivalNumber<>Прав(Стр.Партия.Номер,(СтрДлина(Стр.Партия.Номер)-3)) Тогда Продолжить; КонецЕсли;
			
			ВыгружаемыеДанные[стр.НомерСтроки-1].Отправлено=Истина;
			ВыгружаемыеДанные[стр.НомерСтроки-1].РезультатОбмена=Стр.result;

			Если стр.result="error" Тогда
				ВыгружаемыеДанные[стр.НомерСтроки-1].СообщениеОшибки =Стр.message;
				Продолжить;
			Конецесли;
		КонецЦикла;
	КонецЕсли;		
КонецПроцедуры


Процедура transfers_ОтразитьРезультатВыгрузки(тз) 
	массСтрок=тз.НайтиСтроки(новый структура("orderType","group"));
	Для каждого стр из массСтрок Цикл
		стр.groupCode=Формат(число(стр.groupCode),"ЧЦ=8; ЧН=0; ЧВН=; ЧГ=0"); 
	КонецЦикла;		
	массСтрок=тз.НайтиСтроки(новый структура("orderType","bulletin"));
	Для каждого стр из массСтрок Цикл
		стр.orderId=Формат(число(стр.orderId),"ЧЦ=10; ЧН=0; ЧВН=; ЧГ=0"); 
	КонецЦикла;		
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ТЗ.arrivalNumber 				КАК arrivalNumber,
	|	ТЗ.destinationDistributorCode 	КАК destinationDistributorCode,
	|	ТЗ.message 						КАК message,
	|	ТЗ.stickerId 					КАК stickerId,
	|	ТЗ.packageid 					КАК packageid,
	|	ТЗ.orderId 						КАК orderId,
	|	ТЗ.groupCode 					КАК groupCode,
	|	ТЗ.orderType 					КАК orderType,
	|	ТЗ.pid 							КАК pid,
	|	ТЗ.result 						КАК result,
	|	ТЗ.date 						КАК date,
	|	ТЗ.uid 							КАК uid
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выгрузка_100СПВыгружаемыеДанные.Мегаордер 	КАК Мегаордер,
	|	Выгрузка_100СПВыгружаемыеДанные.НомерСтроки КАК НомерСтроки,
	|	Выгрузка_100СПВыгружаемыеДанные.Партия 		КАК Партия
	|ПОМЕСТИТЬ Пакет
	|ИЗ
	|	Документ.Выгрузка_100СП.ВыгружаемыеДанные КАК Выгрузка_100СПВыгружаемыеДанные
	|ГДЕ
	|	Выгрузка_100СПВыгружаемыеДанные.Ссылка = &Ссылка
	|	И Выгрузка_100СПВыгружаемыеДанные.типОбмена = ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.Транзит)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.arrivalNumber 				КАК arrivalNumber,
	|	ВТ.destinationDistributorCode 	КАК destinationDistributorCode,
	|	ВТ.message 						КАК message,
	|	ВТ.orderId 						КАК orderId,
	|	ВТ.stickerId 					КАК stickerId,
	|	ВТ.packageid 					КАК packageid,
	|	ВТ.groupCode 					КАК groupCode,
	|	ВТ.orderType 					КАК orderType,
	|	ВТ.pid 							КАК pid,
	|	ВТ.result 						КАК result,
	|	ВТ.date 						КАК date,
	|	ВТ.uid 							КАК uid,
	|	ПакетНаСайтДетально.Мегаордер.Покупка.Код 						КАК ДляПроверки,
	|	ВЫРАЗИТЬ(ПакетНаСайтДетально.Мегаордер.Покупка.Код КАК ЧИСЛО) 	КАК ДляПроверки2,
	|	ПакетНаСайтДетально.Мегаордер 									КАК Мегаордер,
	|	ПакетНаСайтДетально.НомерСтроки 								КАК НомерСтроки,
	|	ПакетНаСайтДетально.Партия 										КАК Партия
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Пакет КАК ПакетНаСайтДетально
	|		ПО (ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(2))) = ""sp""
	|					ТОГДА ВТ.pid = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Покупки)
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(7))) = ""package""
	|					ТОГДА ВТ.packageId = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Посылки)
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(5))) = ""group""
	|					ТОГДА (ВЫРАЗИТЬ(ВТ.groupCode КАК СТРОКА(25))) = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Коробки)
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(8))) = ""bulletin""
	|					ТОГДА (ВЫРАЗИТЬ(ВТ.orderId КАК СТРОКА(10))) = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Пристрой)
	|				ИНАЧЕ (ВЫРАЗИТЬ(ВТ.orderId КАК СТРОКА(8))) = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|						И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Заказы)
	|			КОНЕЦ)
	|			И (ВТ.uid = ПакетНаСайтДетально.Мегаордер.Участник.Код или ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Посылки)) ";
	Запрос.Параметры.Вставить("ТЗ",ТЗ);
	Запрос.Параметры.Вставить("Ссылка",Ссылка);
	Результат=Запрос.Выполнить();
	ТЗ = Результат.Выгрузить();
	
	//Отражаем результат обмена
	Если тз<>неопределено Тогда  
		Для каждого стр из тз Цикл
			Если стр.НомерСтроки =null Тогда Продолжить; КонецЕсли;
			Если Стр.arrivalNumber<>Прав(Стр.Партия.Номер,(СтрДлина(Стр.Партия.Номер)-3)) Тогда Продолжить; КонецЕсли;
			
			ВыгружаемыеДанные[стр.НомерСтроки-1].Отправлено			= Истина;
			ВыгружаемыеДанные[стр.НомерСтроки-1].РезультатОбмена	= Стр.result;
			ВыгружаемыеДанные[стр.НомерСтроки-1].ПерваяТочка	= СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду(Стр.destinationDistributorCode);

			Если стр.result="error" Тогда
				ВыгружаемыеДанные[стр.НомерСтроки-1].СообщениеОшибки =Стр.message;
				Продолжить;
			Конецесли;
		КонецЦикла;
	КонецЕсли;		
КонецПроцедуры




Процедура returns_ОтразитьРезультатВыгрузки(тз) 
	массСтрок=тз.НайтиСтроки(новый структура("orderType","group"));
	Для каждого стр из массСтрок Цикл
		Если стр.result="error" Тогда Продолжить; Конецесли;
		стр.groupCode=Формат(число(?(стр.groupCode="",0,стр.groupCode)),"ЧЦ=8; ЧН=0; ЧВН=; ЧГ=0"); 
	КонецЦикла;		
	массСтрок=тз.НайтиСтроки(новый структура("orderType","bulletin"));
	Для каждого стр из массСтрок Цикл
		стр.orderId=Формат(число(?(стр.orderId="",0,стр.orderId)),"ЧЦ=10; ЧН=0; ЧВН=; ЧГ=0"); 
	КонецЦикла;		
	                              
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ТЗ.message КАК message,
	|	ТЗ.packageId КАК packageId,
	|	ТЗ.orderId КАК orderId,
	|	ТЗ.groupCode КАК groupCode,
	|	ТЗ.orderType КАК orderType,
	|	ТЗ.pid КАК pid,
	|	ТЗ.result КАК result,
	|	ТЗ.date КАК date,
	|	ТЗ.uid КАК uid
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выгрузка_100СПВыгружаемыеДанные.Мегаордер КАК Мегаордер,
	|	Выгрузка_100СПВыгружаемыеДанные.НомерСтроки КАК НомерСтроки,
	|	Выгрузка_100СПВыгружаемыеДанные.Партия КАК Партия
	|ПОМЕСТИТЬ Пакет
	|ИЗ
	|	Документ.Выгрузка_100СП.ВыгружаемыеДанные КАК Выгрузка_100СПВыгружаемыеДанные
	|ГДЕ
	|	Выгрузка_100СПВыгружаемыеДанные.Ссылка = &Ссылка
	|	И Выгрузка_100СПВыгружаемыеДанные.типОбмена = ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.Возврат)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.message КАК message,
	|	ВТ.orderId КАК orderId,
	//|	ВТ.stickerId КАК stickerId,
	|	ВТ.groupCode КАК groupCode,
	|	ВТ.orderType КАК orderType,
	|	ВТ.pid КАК pid,
	|	ВТ.result КАК result,
	|	ВТ.date КАК date,
	|	ВТ.uid КАК uid,
	|	ПакетНаСайтДетально.Мегаордер.Покупка.Код КАК ДляПроверки,
	|	ВЫРАЗИТЬ(ПакетНаСайтДетально.Мегаордер.Покупка.Код КАК ЧИСЛО) КАК ДляПроверки2,
	|	ПакетНаСайтДетально.Мегаордер КАК Мегаордер,
	|	ПакетНаСайтДетально.НомерСтроки КАК НомерСтроки,
	|	ПакетНаСайтДетально.Партия КАК Партия
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Пакет КАК ПакетНаСайтДетально
	|		ПО (ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(2))) = ""sp""
	|					ТОГДА ВТ.pid = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Покупки)
	|							И ВТ.uid = ПакетНаСайтДетально.Мегаордер.Участник.Код
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(5))) = ""group""
	|					ТОГДА (ВЫРАЗИТЬ(ВТ.groupCode КАК СТРОКА(25))) = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Коробки)
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(7))) = ""package""
	|					ТОГДА ВТ.packageId = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Посылки)	
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(8))) = ""bulletin""
	|					ТОГДА (ВЫРАЗИТЬ(ВТ.orderId КАК СТРОКА(10))) = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Пристрой)
	|				ИНАЧЕ (ВЫРАЗИТЬ(ВТ.orderId КАК СТРОКА(8))) = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|						И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Заказы)
	|						И ВТ.uid = ПакетНаСайтДетально.Мегаордер.Участник.Код
	|			КОНЕЦ)";
	Запрос.Параметры.Вставить("ТЗ",ТЗ);
	Запрос.Параметры.Вставить("Ссылка",Ссылка);
	Результат=Запрос.Выполнить();
	ТЗ = Результат.Выгрузить();
	
	//Отражаем результат обмена
	Если тз<>неопределено Тогда  
		Для каждого стр из тз Цикл
			Если стр.НомерСтроки =null Тогда Продолжить; КонецЕсли;
			
			ВыгружаемыеДанные[стр.НомерСтроки-1].Отправлено=Истина;
			ВыгружаемыеДанные[стр.НомерСтроки-1].РезультатОбмена=Стр.result;

			Если стр.result="error" Тогда
				ВыгружаемыеДанные[стр.НомерСтроки-1].СообщениеОшибки =Стр.message;
				Продолжить;
			Конецесли;
		КонецЦикла;
	КонецЕсли;		
КонецПроцедуры

Процедура discards_ОтразитьРезультатВыгрузки(тз) 
	массСтрок=тз.НайтиСтроки(новый структура("orderType","group"));
	Для каждого стр из массСтрок Цикл
		стр.groupCode=Формат(число(стр.groupCode),"ЧЦ=8; ЧН=0; ЧВН=; ЧГ=0"); 
	КонецЦикла;		
	массСтрок=тз.НайтиСтроки(новый структура("orderType","bulletin"));
	Для каждого стр из массСтрок Цикл
		стр.orderId=Формат(число(стр.orderId),"ЧЦ=10; ЧН=0; ЧВН=; ЧГ=0"); 
	КонецЦикла;		
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ТЗ.message КАК message,
	|	ТЗ.packageId КАК packageId,
	|	ТЗ.orderId КАК orderId,
	|	ТЗ.groupCode КАК groupCode,
	|	ТЗ.orderType КАК orderType,
	|	ТЗ.pid КАК pid,
	|	ТЗ.result КАК result,
	|	ТЗ.date КАК date,
	|	ТЗ.uid КАК uid
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выгрузка_100СПВыгружаемыеДанные.Мегаордер КАК Мегаордер,
	|	Выгрузка_100СПВыгружаемыеДанные.НомерСтроки КАК НомерСтроки,
	|	Выгрузка_100СПВыгружаемыеДанные.Партия КАК Партия
	|ПОМЕСТИТЬ Пакет
	|ИЗ
	|	Документ.Выгрузка_100СП.ВыгружаемыеДанные КАК Выгрузка_100СПВыгружаемыеДанные
	|ГДЕ
	|	Выгрузка_100СПВыгружаемыеДанные.Ссылка = &Ссылка
	|	И (Выгрузка_100СПВыгружаемыеДанные.типОбмена = ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.ПередачаВозврата)
	|	ИЛИ Выгрузка_100СПВыгружаемыеДанные.типОбмена = ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.Списание))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.message КАК message,
	|	ВТ.orderId КАК orderId,
	|	ВТ.packageId КАК packageId,
	|	ВТ.groupCode КАК groupCode,
	|	ВТ.orderType КАК orderType,
	|	ВТ.pid КАК pid,
	|	ВТ.result КАК result,
	|	ВТ.date КАК date,
	|	ВТ.uid КАК uid,
	|	ПакетНаСайтДетально.Мегаордер.Покупка.Код КАК ДляПроверки,
	|	ВЫРАЗИТЬ(ПакетНаСайтДетально.Мегаордер.Покупка.Код КАК ЧИСЛО) КАК ДляПроверки2,
	|	ПакетНаСайтДетально.Мегаордер КАК Мегаордер,
	|	ПакетНаСайтДетально.НомерСтроки КАК НомерСтроки,
	|	ПакетНаСайтДетально.Партия КАК Партия
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Пакет КАК ПакетНаСайтДетально
	|		ПО (ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(2))) = ""sp""
	|					ТОГДА ВТ.pid = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Покупки)
	|							И ВТ.uid = ПакетНаСайтДетально.Мегаордер.Участник.Код
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(5))) = ""group""
	|					ТОГДА (ВЫРАЗИТЬ(ВТ.groupCode КАК СТРОКА(25))) = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Коробки)
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(8))) = ""bulletin""
	|					ТОГДА (ВЫРАЗИТЬ(ВТ.orderId КАК СТРОКА(10))) = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Пристрой)
	|				КОГДА (ВЫРАЗИТЬ(ВТ.orderType КАК СТРОКА(8))) = ""package""
	|					ТОГДА ВТ.packageId = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|							И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Посылки)
	|				ИНАЧЕ (ВЫРАЗИТЬ(ВТ.orderId КАК СТРОКА(8))) = ПакетНаСайтДетально.Мегаордер.Покупка.Код
	|						И ТИПЗНАЧЕНИЯ(ПакетНаСайтДетально.Мегаордер.Покупка) = ТИП(Справочник.Заказы)
	|						И ВТ.uid = ПакетНаСайтДетально.Мегаордер.Участник.Код
	|			КОНЕЦ)
	|			";
	Запрос.Параметры.Вставить("ТЗ",ТЗ);
	Запрос.Параметры.Вставить("Ссылка",Ссылка);
	Результат=Запрос.Выполнить();
	ТЗ = Результат.Выгрузить();
	
	//Отражаем результат обмена
	Если тз<>неопределено Тогда  
		Для каждого стр из тз Цикл
			Если стр.НомерСтроки =null Тогда Продолжить; КонецЕсли;
		
			ВыгружаемыеДанные[стр.НомерСтроки-1].Отправлено=Истина;
			ВыгружаемыеДанные[стр.НомерСтроки-1].РезультатОбмена=Стр.result;

			Если стр.result="error" Тогда
				ВыгружаемыеДанные[стр.НомерСтроки-1].СообщениеОшибки =Стр.message;
				Продолжить;
			Конецесли;
		КонецЦикла;
	КонецЕсли;		
КонецПроцедуры

Процедура superGroups_ОтразитьРезультатВыгрузки(тз)
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ТЗ.documentNumber КАК documentNumber,
	|	ТЗ.processedAt КАК processedAt,
	|	ТЗ.message КАК message,
	|	ТЗ.result КАК result
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выгрузка_100СПВыгружаемыеДанные.Мегаордер КАК Мегаордер,
	|	Выгрузка_100СПВыгружаемыеДанные.НомерСтроки КАК НомерСтроки,
	|	Выгрузка_100СПВыгружаемыеДанные.Партия КАК Партия
	|ПОМЕСТИТЬ Пакет
	|ИЗ
	|	Документ.Выгрузка_100СП.ВыгружаемыеДанные КАК Выгрузка_100СПВыгружаемыеДанные
	|ГДЕ
	|	Выгрузка_100СПВыгружаемыеДанные.Ссылка = &Ссылка
	|	И Выгрузка_100СПВыгружаемыеДанные.типОбмена = ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.СуперГруппа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.documentNumber КАК documentNumber,
	|	ВТ.processedAt КАК processedAt,
	|	ВТ.message КАК message,
	|	ВТ.result КАК result,
	|	ПакетНаСайтДетально.Мегаордер.Покупка.Код КАК ДляПроверки,
	|	ВЫРАЗИТЬ(ПакетНаСайтДетально.Мегаордер.Покупка.Код КАК ЧИСЛО) КАК ДляПроверки2,
	|	ПакетНаСайтДетально.Мегаордер КАК Мегаордер,
	|	ПакетНаСайтДетально.НомерСтроки КАК НомерСтроки,
	|	ПакетНаСайтДетально.Партия КАК Партия
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Пакет КАК ПакетНаСайтДетально
	|		ПО ((ВЫРАЗИТЬ(ВТ.documentNumber КАК СТРОКА(25))) = ПакетНаСайтДетально.Мегаордер.Код)";
	Запрос.Параметры.Вставить("ТЗ",ТЗ);
	Запрос.Параметры.Вставить("Ссылка",Ссылка);
	Результат=Запрос.Выполнить();
	ТЗ = Результат.Выгрузить();
	//Отражаем результат обмена
	Если тз<>неопределено Тогда  
		Для каждого стр из тз Цикл
			Если стр.НомерСтроки =null Тогда Продолжить; КонецЕсли;
		//	Если Стр.arrivalNumber<>Прав(Стр.Партия.Номер,(СтрДлина(Стр.Партия.Номер)-3)) Тогда Продолжить; КонецЕсли;
			
			ВыгружаемыеДанные[стр.НомерСтроки-1].Отправлено=Истина;
			ВыгружаемыеДанные[стр.НомерСтроки-1].РезультатОбмена=Стр.result;
			Если стр.result="error" Тогда
				ВыгружаемыеДанные[стр.НомерСтроки-1].СообщениеОшибки =Стр.message;
				Продолжить;
			Конецесли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
 
Процедура superGroupReceipts_ОтразитьРезультатВыгрузки(тз);
	
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ТЗ.documentNumber КАК documentNumber,
	|	ТЗ.actualDeliveryDate КАК actualDeliveryDate,
	|	ТЗ.message КАК message,
	|	ТЗ.result КАК result
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выгрузка_100СПВыгружаемыеДанные.Мегаордер КАК Мегаордер,
	|	Выгрузка_100СПВыгружаемыеДанные.НомерСтроки КАК НомерСтроки,
	|	Выгрузка_100СПВыгружаемыеДанные.Партия КАК Партия
	|ПОМЕСТИТЬ Пакет
	|ИЗ
	|	Документ.Выгрузка_100СП.ВыгружаемыеДанные КАК Выгрузка_100СПВыгружаемыеДанные
	|ГДЕ
	|	Выгрузка_100СПВыгружаемыеДанные.Ссылка = &Ссылка
	|	И Выгрузка_100СПВыгружаемыеДанные.типОбмена = ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.СуперГруппаРегистрация)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.documentNumber КАК documentNumber,
	|	ВТ.actualDeliveryDate КАК actualDeliveryDate,
	|	ВТ.message КАК message,
	|	ВТ.result КАК result,
	|	ПакетНаСайтДетально.Мегаордер.Покупка.Код КАК ДляПроверки,
	|	ВЫРАЗИТЬ(ПакетНаСайтДетально.Мегаордер.Покупка.Код КАК ЧИСЛО) КАК ДляПроверки2,
	|	ПакетНаСайтДетально.Мегаордер КАК Мегаордер,
	|	ПакетНаСайтДетально.НомерСтроки КАК НомерСтроки,
	|	ПакетНаСайтДетально.Партия КАК Партия
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Пакет КАК ПакетНаСайтДетально
	|		ПО ((ВЫРАЗИТЬ(ВТ.documentNumber КАК СТРОКА(25))) = ПакетНаСайтДетально.Мегаордер.Код)";
	Запрос.Параметры.Вставить("ТЗ",ТЗ);
	Запрос.Параметры.Вставить("Ссылка",Ссылка);
	Результат=Запрос.Выполнить();
	ТЗ = Результат.Выгрузить();
	//Отражаем результат обмена
	Если тз<>неопределено Тогда  
		Для каждого стр из тз Цикл
			Если стр.НомерСтроки =null Тогда Продолжить; КонецЕсли;
		//	Если Стр.arrivalNumber<>Прав(Стр.Партия.Номер,(СтрДлина(Стр.Партия.Номер)-3)) Тогда Продолжить; КонецЕсли;
			
			ВыгружаемыеДанные[стр.НомерСтроки-1].Отправлено=Истина;
			ВыгружаемыеДанные[стр.НомерСтроки-1].РезультатОбмена=Стр.result;
			Если стр.result="error" Тогда
				ВыгружаемыеДанные[стр.НомерСтроки-1].СообщениеОшибки =Стр.message;
				Продолжить;
			Конецесли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура superGroupStages_ОтразитьРезультатВыгрузки(тз)
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ТЗ.documentNumber КАК documentNumber,
	|	ТЗ.ordinalNumber КАК ordinalNumber,
	|	ТЗ.message КАК message,
	|	ТЗ.result КАК result
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выгрузка_100СПВыгружаемыеДанные.Мегаордер КАК Мегаордер,
	|	Выгрузка_100СПВыгружаемыеДанные.НомерСтроки КАК НомерСтроки,
	|	Выгрузка_100СПВыгружаемыеДанные.Партия КАК Партия,
	|	Выгрузка_100СПВыгружаемыеДанные.Партия.НомерКолена КАК ПартияНомерКолена
	|ПОМЕСТИТЬ Пакет
	|ИЗ
	|	Документ.Выгрузка_100СП.ВыгружаемыеДанные КАК Выгрузка_100СПВыгружаемыеДанные
	|ГДЕ
	|	Выгрузка_100СПВыгружаемыеДанные.Ссылка = &Ссылка
	|	И Выгрузка_100СПВыгружаемыеДанные.типОбмена = ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.СуперГруппаКолено)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.documentNumber КАК documentNumber,
	|	ВТ.message КАК message,
	|	ВТ.result КАК result,
	|	ПакетНаСайтДетально.Мегаордер.Покупка.Код КАК ДляПроверки,
	|	ВЫРАЗИТЬ(ПакетНаСайтДетально.Мегаордер.Покупка.Код КАК ЧИСЛО) КАК ДляПроверки2,
	|	ПакетНаСайтДетально.Мегаордер КАК Мегаордер,
	|	ПакетНаСайтДетально.НомерСтроки КАК НомерСтроки,
	|	ПакетНаСайтДетально.Партия КАК Партия
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Пакет КАК ПакетНаСайтДетально
	|		ПО ((ВЫРАЗИТЬ(ВТ.documentNumber КАК СТРОКА(25))) = ПакетНаСайтДетально.Мегаордер.Код)
	|			И ((ВЫРАЗИТЬ(ВТ.ordinalNumber КАК ЧИСЛО)) = ПакетНаСайтДетально.ПартияНомерКолена)";
	Запрос.Параметры.Вставить("ТЗ",ТЗ);
	Запрос.Параметры.Вставить("Ссылка",Ссылка);
	Результат=Запрос.Выполнить();
	ТЗ = Результат.Выгрузить();
	//Отражаем результат обмена
	Если тз<>неопределено Тогда  
		Для каждого стр из тз Цикл
			Если стр.НомерСтроки =null Тогда Продолжить; КонецЕсли;
		//	Если Стр.arrivalNumber<>Прав(Стр.Партия.Номер,(СтрДлина(Стр.Партия.Номер)-3)) Тогда Продолжить; КонецЕсли;
			
			ВыгружаемыеДанные[стр.НомерСтроки-1].Отправлено=Истина;
			ВыгружаемыеДанные[стр.НомерСтроки-1].РезультатОбмена=Стр.result;
			Если стр.result="error" Тогда
				ВыгружаемыеДанные[стр.НомерСтроки-1].СообщениеОшибки =Стр.message;
				Продолжить;
			Конецесли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры




Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	#Область ПравильноеПроведение
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.Выгрузка_100СП.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ДополнительныеСвойства.Вставить("ЭтоНовый",ЭтоНовый());
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СтоСПОбмен_Общий.ОтразитьСтоСПОбмен_РН(ДополнительныеСвойства, Движения, Отказ);
	СтоСПОбмен_Общий.ОтразитьСтоСПОбмен_РН_Ошибки(ДополнительныеСвойства, Движения, Отказ);

	#КонецОбласти
	
	Для каждого стр из ВыгружаемыеДанные Цикл
		Если ЗначениеЗаполнено(Стр.ПерваяТочка) Тогда
			СП_РаботаСоСправочниками.ОбновитьМегаордер(стр.Мегаордер,новый Структура("ПерваяТочка",Стр.ПерваяТочка));
			Если ТипЗнч(стр.Мегаордер.Покупка) = Тип("СправочникСсылка.Коробки") Тогда
				СП_РаботаСоСправочниками.ОбновитьКоробку(стр.Мегаордер.Покупка,новый Структура("ПерваяТочка",Стр.ПерваяТочка));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	

КонецПроцедуры




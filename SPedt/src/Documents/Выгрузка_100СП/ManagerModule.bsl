#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	ТекстыЗапроса = Новый СписокЗначений;
	Получить_ТекстЗапроса_Обмен100СПрн(Запрос, ТекстыЗапроса, Регистры);
	Получить_ТекстЗапроса_Обмен100СПрн_Ошибки(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.Статус КАК Статус
	|ИЗ
	|	Документ.Выгрузка_100СП КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                        Реквизиты.Период);
	Запрос.УстановитьПараметр("Номер",                         Реквизиты.Номер);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",       ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяОбъекта()));
	Запрос.УстановитьПараметр("ПометкаУдаления",               Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("Проведен",                      Реквизиты.Проведен);
	Запрос.УстановитьПараметр("Статус",                        Реквизиты.Статус);
КонецПроцедуры


Функция Получить_ТекстЗапроса_Обмен100СПрн (Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "Обмен100СПрн";
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	Если Запрос.Параметры.Статус<>Перечисления.СтатусОтпавкиНаСайт.Отправлен Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =  "
		|
		|ВЫБРАТЬ 
		|	Выгрузка_100СПВыгружаемыДокументы.Ссылка.Дата КАК Период,		
		|	1 как КоличествоНеОтправленых,		
		|	Значение(ВидДвиженияНакопления.Расход) как ВидДвижения,
		|	Выгрузка_100СПВыгружаемыДокументы.Документ КАК Партия,
		|	Выгрузка_100СПВыгружаемыДокументы.типОбмена КАК типОбмена
		|ИЗ
		|	Документ.Выгрузка_100СП.ВыгружаемыДокументы КАК Выгрузка_100СПВыгружаемыДокументы
		|ГДЕ
		|	Выгрузка_100СПВыгружаемыДокументы.Ссылка = &Ссылка
		|	И Выгрузка_100СПВыгружаемыДокументы.Изменен = ДАТАВРЕМЯ(1, 1, 1)
		|
		|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции	

Функция Получить_ТекстЗапроса_Обмен100СПрн_Ошибки (Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "Обмен100СПрн_Ошибки";
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	Если Запрос.Параметры.Статус<>Перечисления.СтатусОтпавкиНаСайт.Отправлен Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =  "
					|
					|ВЫБРАТЬ
	                |	Выгрузка_100СПВыгружаемыеДанные.Ссылка.Дата КАК Период,
	                |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	                |	Выгрузка_100СПВыгружаемыеДанные.типОбмена КАК типОбмена,
	                |	Выгрузка_100СПВыгружаемыеДанные.Партия КАК Партия,
	                |	Выгрузка_100СПВыгружаемыеДанные.СтрокаВПартии КАК СтрокаВПартии,
	                |	Выгрузка_100СПВыгружаемыеДанные.Мегаордер КАК Мегаордер,
	                |	ВЫБОР
	                |		КОГДА НЕ Выгрузка_100СПВыгружаемыеДанные.Отправлено
	                |			ТОГДА ""Не найдено в ответе""
	                |		ИНАЧЕ Выгрузка_100СПВыгружаемыеДанные.СообщениеОшибки
	                |	КОНЕЦ КАК СообщениеОшибки,
	                |	1 КАК КоличествоНеИсправленных
	                |ИЗ
	                |	Документ.Выгрузка_100СП.ВыгружаемыеДанные КАК Выгрузка_100СПВыгружаемыеДанные
	                |ГДЕ
	                |	Выгрузка_100СПВыгружаемыеДанные.Ссылка = &Ссылка
	                |	И (Выгрузка_100СПВыгружаемыеДанные.РезультатОбмена = ""error""
	                |			ИЛИ НЕ Выгрузка_100СПВыгружаемыеДанные.Отправлено)	
					|	И Выгрузка_100СПВыгружаемыеДанные.Изменен = Ложь
					|
					|";
	
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции


#КонецОбласти



Функция ПолноеИмяОбъекта()
	Возврат "Документ.Выгрузка_100СП";
КонецФункции

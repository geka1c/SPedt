



&НаСервере
Процедура ЗаполнитьНеОтправленнымиНаСервере()
	об=ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.Выгрузка_100СП"));
	об.ЗаполнитьНеОтправленными();
	ЗначениеВДанныеФормы(об,Объект);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНеОтправленными(Команда)
	ЗаполнитьНеОтправленнымиНаСервере();
	Модифицированность=Истина;
КонецПроцедуры



&НаКлиенте
Процедура Отправить(Команда)
	Если Модифицированность Тогда
		Записать(новый Структура("РежимЗаписи",РежимЗаписиДокумента.Запись));
	КонецЕсли;	
	ОтправитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьНаСервере()
	об=ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.Выгрузка_100СП"));
	об.ВыгрузитьНаСайт();
	ЗначениеВДанныеФормы(об,Объект);
КонецПроцедуры




&НаСервере
Функция  ПросмотрXMLНаСервере()
	
	об=ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.Выгрузка_100СП"));
	Возврат об.СкомпоноватьДляВыгрузки();
КонецФункции

&НаКлиенте
Процедура ПросмотрXML(Команда)
	Если Модифицированность Тогда
		Записать(новый Структура("РежимЗаписи",РежимЗаписиДокумента.Запись));
	КонецЕсли;
	хмл_incomes=ПросмотрXMLНаСервере();
	СтоСП_Клиент.Показать_XML(хмл_incomes);

КонецПроцедуры



&НаКлиенте
Процедура ПросмотрХМЛэлемента(Команда)
	Если Модифицированность Тогда
		Записать(новый Структура("РежимЗаписи",РежимЗаписиДокумента.Запись));
	КонецЕсли;
	ТекущиеДанные=Новый структура("Партия, СтрокавПартии, типОбмена");
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, Элементы.ВыгружаемыеДанные.ТекущиеДанные);
	хмл=ПросмотрХМЛэлементаНаСервере(ТекущиеДанные);
	СтоСП_Клиент.Показать_XML(хмл);
КонецПроцедуры

Функция ПросмотрХМЛэлементаНаСервере(ТекущиеДанные)
	Если ТекущиеДанные.типОбмена=Перечисления.ТипыОбменов100сп.Приход Тогда
		Возврат Документы[ТекущиеДанные.Партия.Метаданные().Имя].ПолучитьТэг_Income(ТекущиеДанные.Партия,ТекущиеДанные.СтрокавПартии);
		
	ИначеЕсли ТекущиеДанные.типОбмена=Перечисления.ТипыОбменов100сп.Возврат Тогда
		Возврат Документы[ТекущиеДанные.Партия.Метаданные().Имя].ПолучитьТэг_return(ТекущиеДанные.Партия,ТекущиеДанные.СтрокавПартии);
	ИначеЕсли ТекущиеДанные.типОбмена=Перечисления.ТипыОбменов100сп.ПередачаВозврата Тогда
		Возврат Документы[ТекущиеДанные.Партия.Метаданные().Имя].ПолучитьТэг_discard(ТекущиеДанные.Партия,ТекущиеДанные.СтрокавПартии);
	ИначеЕсли ТекущиеДанные.типОбмена=Перечисления.ТипыОбменов100сп.Списание Тогда
		Возврат Документы[ТекущиеДанные.Партия.Метаданные().Имя].ПолучитьТэг_discard(ТекущиеДанные.Партия,ТекущиеДанные.СтрокавПартии);
	
	ИначеЕсли ТекущиеДанные.типОбмена=Перечисления.ТипыОбменов100сп.СуперГруппа Тогда
		Возврат Документы[ТекущиеДанные.Партия.Метаданные().Имя].ПолучитьТэг_superGroup(ТекущиеДанные.Партия,ТекущиеДанные.СтрокавПартии);
	ИначеЕсли ТекущиеДанные.типОбмена=Перечисления.ТипыОбменов100сп.СуперГруппаРегистрация Тогда
		Возврат Документы[ТекущиеДанные.Партия.Метаданные().Имя].ПолучитьТэг_superGroupReceipt(ТекущиеДанные.Партия,ТекущиеДанные.СтрокавПартии);
	ИначеЕсли ТекущиеДанные.типОбмена=Перечисления.ТипыОбменов100сп.СуперГруппаКолено Тогда
		Возврат Документы[ТекущиеДанные.Партия.Метаданные().Имя].ПолучитьТэг_superGroupStage(ТекущиеДанные.Партия);
	ИначеЕсли ТекущиеДанные.типОбмена=Перечисления.ТипыОбменов100сп.Расход Тогда
		Возврат Документы[ТекущиеДанные.Партия.Метаданные().Имя].ПолучитьТэг_delivery(ТекущиеДанные.Партия,ТекущиеДанные.СтрокавПартии);
	ИначеЕсли ТекущиеДанные.типОбмена=Перечисления.ТипыОбменов100сп.Транзит Тогда
		Возврат Документы[ТекущиеДанные.Партия.Метаданные().Имя].ПолучитьТэг_transfer(ТекущиеДанные.Партия,ТекущиеДанные.СтрокавПартии);
	ИначеЕсли ТекущиеДанные.типОбмена=Перечисления.ТипыОбменов100сп.ГруппыДоставкиЗапросОплаты Тогда
		Возврат Документы[ТекущиеДанные.Партия.Метаданные().Имя].ПолучитьТэг_groupBill(ТекущиеДанные.Партия,ТекущиеДанные.СтрокавПартии);
		
	КонецЕсли;
	Возврат "";
КонецФункции



&НаКлиенте
Процедура ПросмотрПолученногоXML(Команда)
	хмл=Элементы.ПротоколыПередач.ТекущиеДанные.ПолученныеДанные;
	СтоСП_Клиент.Показать_XML(хмл);
КонецПроцедуры




&НаКлиенте
Процедура ВыгружаемыДокументыПриАктивизацииСтроки(Элемент)
	Если Элемент.текущиеДанные=неопределено Тогда Возврат;
		Элементы.ВыгружаемыеДанные.ОтборСтрок=новый ФиксированнаяСтруктура("Партия,типОбмена",Неопределено,Неопределено);
	Иначе	
		Элементы.ВыгружаемыеДанные.ОтборСтрок=новый ФиксированнаяСтруктура("Партия,типОбмена",Элемент.текущиеДанные.Документ,Элемент.текущиеДанные.типОбмена);
 	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если не ЗначениеЗаполнено(Объект.Статус) Тогда
		Объект.Статус=Перечисления.СтатусОтпавкиНаСайт.Сформирован;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОтбор(Команда)
	Элементы.ВыгружаемыеДанные.ОтборСтрок=Неопределено;
КонецПроцедуры


&НаКлиенте
Процедура ВыгружаемыДокументыПередУдалением(Элемент, Отказ)
	масс_Поиска = Объект.ВыгружаемыеДанные.НайтиСтроки(Новый Структура("Партия",Элемент.ТекущиеДанные.Документ));
	Для каждого элем из масс_Поиска Цикл
		 Объект.ВыгружаемыеДанные.Удалить(элем.НомерСтроки-1);	
	КонецЦикла;	
КонецПроцедуры








Процедура ДвиженияСтатусыДоставки(Отказ, Режим)
	Движения.СтатусыДоставки.Записывать = Истина;
	Для Каждого ТекСтрокаПокупки Из Заказы Цикл
		
		Движение = Движения.СтатусыДоставки.Добавить();
		Движение.Период = Дата;
		Движение.Груз = ТекСтрокаПокупки.Груз;
		Если ВидОперации=Перечисления.ВидыОперацийСчетКонтрагента.СТранспортнойКомпанией Тогда
			Движение.Статус = Перечисления.СтатусыОтправкиГруза.ВТранспортнойКомпании;
		Иначе
			Движение.Статус = Перечисления.СтатусыОтправкиГруза.ДобавленСчетЭК;
		КонецЕсли;
		Движение.ОриентеровачнаяДатаДоставки=ОриентировачнаяДатаДоставки;
	КонецЦикла;
КонецПроцедуры


Процедура ДвиженияСтатусыДоставкиСвернуто(Отказ, Режим)
	Движения.СтатусыДоставкиСвернуто.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетКонтрагентаЗаказы.Заявка КАК ЗаявкаВТК,
		|	ВЫБОР
		|		КОГДА СчетКонтрагентаЗаказы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетКонтрагента.СТранспортнойКомпанией)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыОтправкиГруза.ВТранспортнойКомпании)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыОтправкиГруза.ДобавленСчетЭК)
		|	КОНЕЦ КАК Статус,
		|	СчетКонтрагентаЗаказы.Ссылка.Дата КАК Период,
		|	СчетКонтрагентаЗаказы.Заявка.КоличествоМест КАК КоличествоМест,
		|	СУММА(СчетКонтрагентаЗаказы.Груз.Количество) КАК Количество,
		|	СУММА(1) КАК КоличествоГС
		|ИЗ
		|	Документ.СчетКонтрагента.Заказы КАК СчетКонтрагентаЗаказы
		|ГДЕ
		|	СчетКонтрагентаЗаказы.Ссылка = &Ссылка
		|	И СчетКонтрагентаЗаказы.Заявка.СвояТочка = &СвояТочка
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетКонтрагентаЗаказы.Заявка,
		|	ВЫБОР
		|		КОГДА СчетКонтрагентаЗаказы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетКонтрагента.СТранспортнойКомпанией)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыОтправкиГруза.ВТранспортнойКомпании)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыОтправкиГруза.ДобавленСчетЭК)
		|	КОНЕЦ,
		|	СчетКонтрагентаЗаказы.Ссылка.Дата,
		|	СчетКонтрагентаЗаказы.Заявка.КоличествоМест
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СчетКонтрагентаЗаказы.Заявка,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтправкиГруза.ОжидаетДоставки),
		|	СчетКонтрагентаЗаказы.Ссылка.ОриентировачнаяДатаДоставки,
		|	СчетКонтрагентаЗаказы.Заявка.КоличествоМест,
		|	СУММА(СчетКонтрагентаЗаказы.Груз.Количество),
		|	СУММА(1)
		|ИЗ
		|	Документ.СчетКонтрагента.Заказы КАК СчетКонтрагентаЗаказы
		|ГДЕ
		|	СчетКонтрагентаЗаказы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетКонтрагента.СТранспортнойКомпанией)
		|	И СчетКонтрагентаЗаказы.Ссылка = &Ссылка
		|	И СчетКонтрагентаЗаказы.Заявка.СвояТочка = &СвояТочка
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетКонтрагентаЗаказы.Заявка,
		|	СчетКонтрагентаЗаказы.Ссылка.ОриентировачнаяДатаДоставки,
		|	СчетКонтрагентаЗаказы.Заявка.КоличествоМест
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СчетКонтрагентаЗаказы.Заявка,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтправкиГруза.ОжидаетПолучения),
		|	СчетКонтрагентаЗаказы.Ссылка.ОриентировачнаяДатаДоставки,
		|	СчетКонтрагентаЗаказы.Заявка.КоличествоМест,
		|	СУММА(СчетКонтрагентаЗаказы.Груз.Количество),
		|	СУММА(1)
		|ИЗ
		|	Документ.СчетКонтрагента.Заказы КАК СчетКонтрагентаЗаказы
		|ГДЕ
		|	СчетКонтрагентаЗаказы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетКонтрагента.СТранспортнойКомпанией)
		|	И СчетКонтрагентаЗаказы.Ссылка = &Ссылка
		|	И СчетКонтрагентаЗаказы.Заявка.СвояТочка <> &СвояТочка
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетКонтрагентаЗаказы.Заявка,
		|	СчетКонтрагентаЗаказы.Ссылка.ОриентировачнаяДатаДоставки,
		|	СчетКонтрагентаЗаказы.Заявка.КоличествоМест";
	Запрос.Параметры.Вставить("Ссылка",Ссылка);
	Запрос.Параметры.Вставить("СвояТочка",Константы.СвояТочка.Получить());

	РезультатЗапроса = Запрос.Выполнить();
	Движения.СтатусыДоставкиСвернуто.Загрузить(РезультатЗапроса.Выгрузить());

	
	
	
КонецПроцедуры


Процедура ДвиженияСтатусыЗаявокВТК(Отказ, Режим)
	Движения.СтатусыЗаявокВТК.Записывать = Истина;
	Для каждого стр Из ЗаявкиВТК Цикл
		Если не ЗначениеЗаполнено(стр.Заявка) Тогда продолжить; КонецЕсли;
		Движение = Движения.СтатусыЗаявокВТК.Добавить();
		Движение.Период = Дата;
		Движение.Заявка= стр.Заявка;
		Если ВидОперации=Перечисления.ВидыОперацийСчетКонтрагента.СТранспортнойКомпанией Тогда
			Движение.Статус = Перечисления.СтатусыОтправкиГруза.ВТранспортнойКомпании;
		Иначе
			Движение.Статус = Перечисления.СтатусыОтправкиГруза.ДобавленСчетЭК;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры



Процедура ОбработкаПроведения(Отказ, РежимПроведения)
//	Если ВидОперации=Перечисления.ВидыОперацийСчетКонтрагента.СТранспортнойКомпанией Тогда
		ДвиженияСтатусыДоставки(Отказ, РежимПроведения);
		ДвиженияСтатусыДоставкиСвернуто(Отказ, РежимПроведения);
		ДвиженияСтатусыЗаявокВТК(Отказ, РежимПроведения);
		ДвиженияВзаиморасчетыСКонтрагентами(Отказ, РежимПроведения);
//	КонецЕсли	
КонецПроцедуры


Процедура ЗаполнитьВесОбъемПоГрузу()  экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КоробкиОрганизаторы.Организатор,
		|	СУММА(КоробкиОрганизаторы.Вес) КАК Вес,
		|	СУММА(КоробкиОрганизаторы.Объем) КАК Объем,
		|	СУММА(КоробкиОрганизаторы.Количество) КАК Количество
		|ИЗ
		|	Справочник.Коробки.Организаторы КАК КоробкиОрганизаторы
		|ГДЕ
		|	КоробкиОрганизаторы.Ссылка В(&Коробки)
		|
		|СГРУППИРОВАТЬ ПО
		|	КоробкиОрганизаторы.Организатор";
		
		
	
	коробки=новый СписокЗначений;
	Для каждого стр из Заказы Цикл
		коробки.Добавить(стр.Груз);
	КонецЦикла;	
	
	
	Запрос.Параметры.Вставить("Коробки",коробки);
		РезультатЗапроса = Запрос.Выполнить();
	
	Организаторы.Загрузить(РезультатЗапроса.Выгрузить());
	

	Вес=Организаторы.Итог("Вес");
	массИтог= аСПНаСервере.РаспределитьПропорционально(100,Организаторы.ВыгрузитьКолонку("Вес"));
	Если   массИтог<>неопределено Тогда  
		Организаторы.ЗагрузитьКолонку(массИтог,"ВесПроцент");
	КонецЕсли;	
	Объем=Организаторы.Итог("Объем");
	массИтог= аСПНаСервере.РаспределитьПропорционально(100,Организаторы.ВыгрузитьКолонку("Объем"));
	Если   массИтог<>неопределено Тогда  
		Организаторы.ЗагрузитьКолонку(массИтог,"ОбъемПроцент");
	КонецЕсли;
	
	Количество=Организаторы.Итог("Количество");
	массИтог= аСПНаСервере.РаспределитьПропорционально(100,Организаторы.ВыгрузитьКолонку("Количество"));
	Если   массИтог<>неопределено Тогда  
		Организаторы.ЗагрузитьКолонку(массИтог,"КоличествоПроцент");
	КонецЕсли;
	
	ЗаполнитьОргов();
КонецПроцедуры	



Процедура ЗаполнитьОргов() Экспорт
	СписокКодов=новый СписокЗначений;
	Для каждого стр из Заказы Цикл
		
		СписокКодов.Добавить(стр.Груз);
	КонецЦикла;

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КоробкиСостав.Покупка.Организатор КАК Организатор
		|ИЗ
		|	Справочник.Коробки.Состав КАК КоробкиСостав
		|ГДЕ
		|	КоробкиСостав.Ссылка В
		|			(&СписокКодов)";
	
	Запрос.УстановитьПараметр("СписокКодов", СписокКодов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если Организаторы.НайтиСтроки(новый структура("Организатор", ВыборкаДетальныеЗаписи.Организатор)).Количество()=0 Тогда
			новаяСтрока=Организаторы.Добавить();	
			новаяСтрока.Организатор=ВыборкаДетальныеЗаписи.Организатор;
		КонецЕсли;	
	КонецЦикла;
	УстановитьПроценты();
КонецПроцедуры	

Процедура УстановитьПроценты() Экспорт
	массивВесПроцент=Организаторы.ВыгрузитьКолонку("ВесПроцент");
	Если Организаторы.Итог("ВесПроцент")=0 и массивВесПроцент.количество()>0 Тогда
		Для инд=0 по массивВесПроцент.количество()-1 цикл
			массивВесПроцент[инд]=1;
		КонецЦикла;	
		массИтог= аСПНаСервере.РаспределитьПропорционально(100,массивВесПроцент);
		Организаторы.ЗагрузитьКолонку(массИтог,"ВесПроцент");
	КонецЕсли;
	массИтог= аСПНаСервере.РаспределитьПропорционально(Вес,Организаторы.ВыгрузитьКолонку("ВесПроцент"));
	Если   массИтог<>неопределено Тогда  
		Организаторы.ЗагрузитьКолонку(массИтог,"Вес");
	КонецЕсли;
	
	
	массивОбъемПроцент=Организаторы.ВыгрузитьКолонку("ОбъемПроцент");
	Если Организаторы.Итог("ОбъемПроцент")=0 и массивОбъемПроцент.количество()>0 Тогда
		Для инд=0 по массивОбъемПроцент.количество()-1 цикл
			массивОбъемПроцент[инд]=1;
		КонецЦикла;	
		массИтог= аСПНаСервере.РаспределитьПропорционально(100,массивОбъемПроцент);
		Организаторы.ЗагрузитьКолонку(массИтог,"ОбъемПроцент");
	КонецЕсли;	
	массИтог= аСПНаСервере.РаспределитьПропорционально(Объем,Организаторы.ВыгрузитьКолонку("ОбъемПроцент"));
	Если   массИтог<>неопределено Тогда  
		Организаторы.ЗагрузитьКолонку(массИтог,"Объем");
	КонецЕсли;
	
	массивКоличество=Организаторы.ВыгрузитьКолонку("Количество");
	Если Организаторы.Итог("КоличествоПроцент")=0 и массивКоличество.количество()>0 Тогда
		массИтог= аСПНаСервере.РаспределитьПропорционально(100,массивКоличество);
		Если   массИтог<>неопределено Тогда  
			Организаторы.ЗагрузитьКолонку(массИтог,"КоличествоПроцент");
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры




Процедура ДвиженияВзаиморасчетыСКонтрагентами(Отказ, Режим)
	Движения.ВзаиморасчетыСКонтрагентами.Записывать = Истина;

	Если ВидОперации=Перечисления.ВидыОперацийСчетКонтрагента.СТранспортнойКомпанией Тогда
		Для Каждого ТекСтрокаОрганизаторы Из Организаторы Цикл
			Движение = Движения.ВзаиморасчетыСКонтрагентами.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Контрагент = ТекСтрокаОрганизаторы.Организатор;
			Движение.Сумма = ТекСтрокаОрганизаторы.Сумма;
		КонецЦикла;
	Иначе	
			Движение = Движения.ВзаиморасчетыСКонтрагентами.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Контрагент = ТранзитнаяТочка;
			Движение.Сумма = Сумма;
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ВидОперации=перечисления.ВидыОперацийСчетКонтрагента.СТранспортнойКомпанией Тогда	
		НеПроверять="ТранзитнаяТочка";	
		инд=ПроверяемыеРеквизиты.Найти(НеПроверять);
		Если инд<>Неопределено Тогда ПроверяемыеРеквизиты.Удалить(инд); КонецЕсли;
		
		Если Организаторы.Итог("Сумма")<> Сумма Тогда	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не правильно распределена сумма счета!",,,,Отказ);
		КонецЕсли;
	Иначе	
		НеПроверять="ОриентировачнаяДатаДоставки";	
		инд=ПроверяемыеРеквизиты.Найти(НеПроверять);
		Если инд<>Неопределено Тогда ПроверяемыеРеквизиты.Удалить(инд); КонецЕсли;
	КонецЕсли;
	СПКонтрольДоставкиГрузов.ПроверитьУникальностьСтатусаДляГруза(ЭтотОбъект,Отказ);
	
	
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Если не ЗначениеЗаполнено(СвояТочка) Тогда
		СвояТочка=константы.СвояТочка.Получить();
  	КонецЕсли;
		
	Если СвояТочка=константы.СвояТочка.Получить() и РежимЗаписи=РежимЗаписиДокумента.Проведение Тогда
		СПКонтрольДоставкиГрузов.ЗаполнитьЗаявкиПоКоробкам(ЭтотОбъект,"Заказы","Груз");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетКонтрагентаЗаявкиВТК.Заявка,
		|	СчетКонтрагентаЗаявкиВТК.Ссылка
		|ИЗ
		|	Документ.СчетКонтрагента.ЗаявкиВТК КАК СчетКонтрагентаЗаявкиВТК
		|ГДЕ
		|	СчетКонтрагентаЗаявкиВТК.Ссылка <> &Ссылка
		|	И СчетКонтрагентаЗаявкиВТК.Заявка В(&СписокЗаявок)
		|	И СчетКонтрагентаЗаявкиВТК.Ссылка.Проведен
		|	И СчетКонтрагентаЗаявкиВТК.Ссылка.ВидОперации = &ВидОперации 
		|	И СчетКонтрагентаЗаявкиВТК.Заявка <> ЗНАЧЕНИЕ(Документ.ЗаявкаВТранспортнуюКомпанию.ПустаяСсылка)";
		Запрос.УстановитьПараметр("СписокЗаявок", ЗаявкиВТК.ВыгрузитьКолонку("Заявка"));
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("ВидОперации", ВидОперации);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Заявка "+ВыборкаДетальныеЗаписи.Заявка+" уже отправлена доокументом "+ВыборкаДетальныеЗаписи.ссылка,,,,Отказ); 
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры



Процедура ЗаполнитьПоСпискуЗаявок(СписокЗаявок) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявкаВТранспортнуюКомпаниюЗаказы.Груз,
		|	ЗаявкаВТранспортнуюКомпаниюЗаказы.Ссылка КАК Заявка
		|ИЗ
		|	Документ.ЗаявкаВТранспортнуюКомпанию.Заказы КАК ЗаявкаВТранспортнуюКомпаниюЗаказы
		|ГДЕ
		|	ЗаявкаВТранспортнуюКомпаниюЗаказы.Ссылка В(&СписокЗаявок)";
	
	Запрос.УстановитьПараметр("СписокЗаявок", СписокЗаявок);

	РезультатЗапроса = Запрос.Выполнить();
	тз=РезультатЗапроса.Выгрузить();
	Заказы.Загрузить(тз);	
	тз.Свернуть("Заявка");
	ЗаявкиВТК.Загрузить(ТЗ);
КонецПроцедуры	


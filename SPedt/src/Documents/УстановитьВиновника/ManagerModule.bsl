
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	ТекстыЗапроса = Новый СписокЗначений;

	Получить_ТекстЗапроса_ОшибочныеЗаказы(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
	
КонецПроцедуры




Функция Получить_ТекстЗапроса_ОшибочныеЗаказы(Запрос, ТекстыЗапроса, Регистры) Экспорт
	ИмяРегистра = "ОшибочныеЗаказы";
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	

	ТекстЗапроса = "ВЫБРАТЬ
	               |	УстановитьВиновникаЗаказы.Ссылка.Дата КАК Период,
				   |	&Ссылка как Регистратор,
	               |	УстановитьВиновникаЗаказы.Заказ КАК Заказ,
	               |	ИСТИНА КАК Установлен,
	               |	УстановитьВиновникаЗаказы.Виновник КАК Виновник
	               |ИЗ
	               |	Документ.УстановитьВиновника.Заказы КАК УстановитьВиновникаЗаказы
	               |ГДЕ
	               |	УстановитьВиновникаЗаказы.Ссылка = &Ссылка";


	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции



Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.УстановитьПараметр("Период",                        ДокументСсылка.Дата);
	Запрос.УстановитьПараметр("Номер",                         ДокументСсылка.Номер);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",       ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяОбъекта()));

	Запрос.УстановитьПараметр("ПометкаУдаления",               ДокументСсылка.ПометкаУдаления);
	Запрос.УстановитьПараметр("Проведен",                      ДокументСсылка.Проведен); 

	
КонецПроцедуры


Функция ПолноеИмяОбъекта()
	Возврат "Документ.УстановитьВиновника";
КонецФункции



Функция ПолучитьТэг_incomes_errore_Посылки(Ссылка,НомерСтроки=Неопределено) Экспорт
	ОтборПоСсылке=?(ТипЗнч(Ссылка)=Тип("Массив")," В (&Ссылка) "," = &Ссылка ");
	ОтборПоСтроке=?(ТипЗнч(Ссылка)=Тип("Массив")," В (&НомерСтроки) "," = &НомерСтроки ");
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УстановитьВиновникаЗаказы.Ссылка.Дата				        КАК ДатаПриема,
		|	УстановитьВиновникаЗаказы.Ссылка.Номер				        КАК Номер,
		|	УстановитьВиновникаЗаказы.Заказ 					КАК Заказ,
		|	УстановитьВиновникаЗаказы.Виновник 					КАК Виновник,
		|	УстановитьВиновникаЗаказы.ВиноватВодитель 			КАК ВиноватВодитель,
		|	УстановитьВиновникаЗаказы.Стоимость 					КАК Стоимость
		|ИЗ
		|	Документ.УстановитьВиновника.Заказы КАК УстановитьВиновникаЗаказы		
		|ГДЕ
		|	УстановитьВиновникаЗаказы.Ссылка "+ОтборПоСсылке+" "+?(НомерСтроки=Неопределено,"", "
		|	И УстановитьВиновникаЗаказы.НомерСтроки "+ОтборПоСтроке+" ");
	
	Запрос.УстановитьПараметр("НомерСтроки", 	НомерСтроки);
	Запрос.УстановитьПараметр("Ссылка", 		Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат ""; КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗаписьXML=новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку("UTF-8");	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Служебный");
	Пока Выборка.Следующий() Цикл
		ЗаписьXML.ЗаписатьНачалоЭлемента("incomeError");
		Если ТипЗнч(Выборка.Виновник) = Тип("СправочникСсылка.Организаторы") Тогда
			ТипОтветственного = "org";
		Иначе	
			ТипОтветственного =	"distr";
		КонецЕсли;	
		Если ТипЗнч(Выборка.Заказ) = Тип("СправочникСсылка.Посылки") Тогда
			ТипОрдера = "package";
			НазыаниеЗаказа= "packageId";
		Иначе	
			ТипОрдера=	"group";
			НазыаниеЗаказа= "groupCode";
		КонецЕсли;	
		
		СтоСП.Вставить_Тэг(ЗаписьXML,"date"	,				?(ЗначениеЗаполнено(Выборка.ДатаПриема),Выборка.ДатаПриема,Выборка.Дата));
		СтоСП.Вставить_Тэг(ЗаписьXML,НазыаниеЗаказа,           Формат(Выборка.Заказ.Код,"ЧГ=0"));
		СтоСП.Вставить_Тэг(ЗаписьXML,"orderType",           ТипОрдера);
	
		СтоСП.Вставить_Тэг(ЗаписьXML,"arrivalNumber",       Прав(Выборка.Номер,(СтрДлина(Выборка.Номер)-3)));
		СтоСП.Вставить_Тэг(ЗаписьXML,"Cost", Выборка.Стоимость);
		
		СтоСП.Вставить_Тэг(ЗаписьXML,"isDriver",             ?(Выборка.ВИноватВодитель,1,0));
		
		СтоСП.Вставить_Тэг(ЗаписьXML,"responsubleType",           ТипОтветственного);
		СтоСП.Вставить_Тэг(ЗаписьXML,"responsubleId",           Выборка.Виновник.Код);
		ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЦикла;
	ЗаписьXML.ЗаписатьКонецЭлемента();
	рез=ЗаписьXML.Закрыть();
	рез=СтрЗаменить(рез,"<Служебный>","");
	рез=СтрЗаменить(рез,"</Служебный>","");
	
	Возврат рез;
КонецФункции


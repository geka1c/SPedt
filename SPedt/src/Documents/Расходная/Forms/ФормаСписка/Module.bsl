
#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти



// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды




#Область Эквайринг

&НаКлиенте
Процедура СверкаИтогов(Команда)
	ОчиститьСообщения();
	Оповещение = Новый ОписаниеОповещения("СверкаИтоговЗавершение", ЭтотОбъект);
	ТекстВопроса = "Вы уверенны что необходимо выполнить сверку итогов?";
	ПоказатьВопрос(Оповещение, ТекстВопроса , РежимДиалогаВопрос.ДаНет);	
КонецПроцедуры

&НаКлиенте
Процедура СверкаИтоговЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	Конецесли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПризнакПечати",аСПСлужебные.НеПечататьФискальныйЧек());
	
	аСПСлужебные.УстановитьУстановитьПризнакПечатиФискальногоЧека(ложь);
	МенеджерОборудованияКлиент.ПредложитьВыбратьУстройство(
		Новый ОписаниеОповещения("ВыполнениеСверкиИтоговНаЭквайринговомТерминале", ЭтотОбъект, ДополнительныеПараметры),
		"ЭквайринговыйТерминал",
		НСтр("ru='Выберите эквайринговый терминал'"),
		НСтр("ru='Эквайринговый терминал не подключен'"));
КонецПроцедуры	



&НаКлиенте
Процедура ВыполнениеСверкиИтоговНаЭквайринговомТерминале(ИдентификаторУстройстваЭТ, ДополнительныеПараметры) экспорт

	Если ИдентификаторУстройстваЭТ <> Неопределено Тогда
		
		ЭтаФорма.Доступность = Ложь;
		
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ВыполнениеСверкиИтоговНаЭквайринговомТерминалеЗавершение", ЭтотОбъект,ДополнительныеПараметры);
		МенеджерОборудованияКлиент.НачатьВыполнениеСверкиИтоговНаЭквайринговомТерминале(ОповещениеПриЗавершении, УникальныйИдентификатор, 
		ИдентификаторУстройстваЭТ, );
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнениеСверкиИтоговНаЭквайринговомТерминалеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	аСПСлужебные.УстановитьУстановитьПризнакПечатиФискальногоЧека(Параметры.ПризнакПечати);
	
   ЭтаФорма.Доступность = Истина;

   Если РезультатВыполнения.Результат Тогда
      ТекстСообщения = НСтр("ru = 'Операция завершена.'");
      Сообщить(ТекстСообщения); 
   Иначе 
      ТекстСообщения = НСтр("ru = 'При выполнении операции произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", РезультатВыполнения.ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;

КонецПроцедуры



#КонецОбласти

#Область ККМ
&НаКлиенте
Процедура ЗакрытьКассовуюСмену(Команда)
	
	ОчиститьСообщения();
	
	Элементы.ГруппаКасса.Доступность = Ложь;
	ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыОткрытияЗакрытияСмены();
	ПараметрыОперации.Кассир = НСтр("ru='Администратор'");
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ЗакрытьКассовуюСмену_Завершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьЗакрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, УникальныйИдентификатор,ПараметрыОперации);
	
	СверкаИтогов(неопределено);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗакрытьКассовуюСмену_Завершение(РезультатВыполнения, Параметры) Экспорт
	
	Если РезультатВыполнения.Результат Тогда
		//Если НЕ ЗаархивироватьДокументыНаСервере() Тогда
		//	ТекстПредупреждения = НСтр("ru = 'Ошибка записи документов'");
		//	ПоказатьПредупреждение(, ТекстПредупреждения, 10);
		//	Возврат;
		//КонецЕсли;
		ОписаниеОшибки = "";
	КонецЕсли;
	
	Элементы.ГруппаКасса.Доступность = Истина;
	
КонецПроцедуры

Функция ПолучитьПараметрыКассыККМ()
	параметрыККМ=Новый Структура;
	параметрыККМ.Вставить("ИдентификаторУстройства",Константы.фр.Получить());
	возврат параметрыККМ;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьКассовуюСмену(Команда)

	ОчиститьСообщения();
	Элементы.ГруппаКасса.Доступность = Ложь;
	ПараметрыОперации 			= МенеджерОборудованияКлиентСервер.ПараметрыОткрытияЗакрытияСмены();
	ПараметрыОперации.Кассир 	= НСтр("ru='Администратор'");
	
	ОповещениеПриЗавершении 	= Новый ОписаниеОповещения("ОткрытьКассовуюСмену_Завершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьОткрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, УникальныйИдентификатор,ПараметрыОперации);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнениеКоманды_Завершение(РезультатВыполнения, Параметры) Экспорт
	
	Элементы.ГруппаКасса.Доступность = Истина;
	
	Если НЕ РезультатВыполнения.Результат Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатВыполнения.ОписаниеОшибки);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКассовуюСмену_Завершение(РезультатВыполнения, Параметры) Экспорт
	
	Элементы.ГруппаКасса.Доступность = Истина;
	
	Если НЕ РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр("ru = 'При выполнении команды открытия смены на фискальном устройстве произошла ошибка.
			|%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", РезультатВыполнения.ОписаниеОшибки);
		ПоказатьПредупреждение(, ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетОТекущемСостоянииРасчетов(Команда)
	
	ЭтаФорма.Доступность = Ложь; 
	
	ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыОткрытияЗакрытияСмены();
	ПараметрыОперации.Кассир = НСтр("ru='Администратор'");
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ВыполнениеКоманды_Завершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьФормированиеОтчетаОТекущемСостоянииРасчетов(ОповещениеПриЗавершении, УникальныйИдентификатор, ПараметрыОперации, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаменаМетодаОплаты(Команда)   
	
		док = Элементы.Список.ТекущиеДанные.Ссылка;
		Оповещение = новый ОписаниеОповещения("ЗавершениеВыбораОплаты", ЭтотОбъект, док);
		ОткрытьФорму("Документ.Расходная.Форма.ВыборМетодаОплаты", , ЭтаФорма,,, ,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры   

&НаКлиенте
Процедура ЗавершениеВыбораОплаты(Результат, ДополнительныеПараметы) Экспорт
	
	ЗавершениеВыбораОплатыНаСервере(Результат, ДополнительныеПараметы);     
	ОповеститьОбИзменении(ДополнительныеПараметы);
КонецПроцедуры	


Процедура ЗавершениеВыбораОплатыНаСервере(Результат, ДополнительныеПараметы)
	Если РольДоступна("АдминистраторТочки") или РольДоступна("ПолныеПрава") Тогда
		
		Если ЗначениеЗаполнено(ДополнительныеПараметы) и ЗначениеЗаполнено(Результат) и
			ДополнительныеПараметы.ВидОплаты<> Результат Тогда
			об = ДополнительныеПараметы.ПолучитьОбъект();
			об.ВидОплаты = Результат;
			Если Результат = Перечисления.ФормыОплаты.ПлатежнаяКарта и не ЗначениеЗаполнено(об.НомерКарты) Тогда
				об.НомерКарты = ТекущаяДата();
			КонецЕсли;
			об.Записать();
		КонецЕсли;   
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не достаточно прав!");
		
	КонецЕсли;	

	
КонецПроцедуры

#КонецОбласти
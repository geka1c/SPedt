	



Процедура ЗаполнитьОстаткамиНаСкладе(Участник) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТранзитОстатки.Участник КАК Участник,
		|	ТранзитОстатки.ПокупкаСсылка КАК ПокупкаСсылка
		|ПОМЕСТИТЬ втОстатки
		|ИЗ
		|	РегистрНакопления.Транзит.Остатки(, Участник = &Участник) КАК ТранзитОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОстатки.Участник КАК Участник,
		|	втОстатки.ПокупкаСсылка КАК Покупка,
		|	Значение(Справочник.Посылки.ПустаяСсылка) КАК Посылка,
		|	"""" КАК КодЗаказа
		|ИЗ
		|	втОстатки КАК втОстатки
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(втОстатки.ПокупкаСсылка) = ТИП(Справочник.Покупки)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПосылкиСостав.Участник,
		|	ПосылкиСостав.Покупка,
		|	ПосылкиСостав.Ссылка,
		|	ПосылкиСостав.КодЗаказа
		|ИЗ
		|	Справочник.Посылки.Состав КАК ПосылкиСостав
		|ГДЕ
		|	ПосылкиСостав.Ссылка В
		|			(ВЫБРАТЬ
		|				втОстатки.ПокупкаСсылка КАК ПокупкаСсылка
		|			ИЗ
		|				втОстатки КАК втОстатки)";
	
	Запрос.УстановитьПараметр("участник", участник);
	
	РезультатЗапроса = Запрос.Выполнить();
	Состав.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры	

Процедура ОтправитьНаСайт() Экспорт
	Отказ=Ложь;
	
	
	ОтправленныеДанные=ПолучитьСтрокуЗапроса();
	
	ПолученныеДанные="";
	СтрокаПротокола=ПротоколыПередач.Добавить();
	СтрокаПротокола.ДатаНачала=ТекущаяДата();
	ИмяФайлаОтвета=Отправить(ОтправленныеДанные);
	
	Если аспПроцедурыОбменаДанными.АвторизацияВыполнена(ИмяФайлаОтвета) Тогда
		СтрокаПротокола.Результат="Авторизация выполнена";
	Иначе
		СтрокаПротокола.Результат="Авторизация не выполнена";
	КонецЕсли;	 
	Если ЗначениеЗаполнено(ИмяФайлаОтвета) Тогда
		ПолученныеДанные=ФайлВСтроку(ИмяФайлаОтвета);
		тз=аспПроцедурыОбменаДанными.ОбработатьОбъединениеГруппыДоставки(ПолученныеДанные);
		строкаТЗ=тз[0];
		Если строкаТЗ.result="ok" Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Была создана группа доставки №"+строкаТЗ.deliveryGroupId);
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА :"+Символы.ПС+строкаТЗ.message);
		КонецЕсли;	
	Иначе
		СтрокаПротокола.Результат="Нет ответа";
	КонецЕсли;
	СтрокаПротокола.ДатаОкончания=ТекущаяДата();	
	
	
	
КонецПроцедуры	


Функция Отправить(Отправили) 
	Параметры    = новый Структура;
	Параметры.Вставить("token",Константы.Токен.Получить());
	Параметры.Вставить("xml", СтрЗаменить(Отправили,"xmlns=""http://www.100sp.ru/XMLSchema-instance"" ",""));
	АдресСкрипта = Константы.АдресВыгрузкиНасайт.Получить();
	ПолученныйФайл=СтоСПОбмен_Общий.ПолучитьПостЗапросом(Параметры,АдресСкрипта);
	Возврат ПолученныйФайл;
	
КонецФункции

Функция ФайлВСтроку(ИмяФайлаОтвета)
		ТекстФайла="";
		Текст=Новый ЧтениеТекста;
		Текст.Открыть(ИмяФайлаОтвета,КодировкаТекста.UTF8);
		Стр = Текст.ПрочитатьСтроку();
		Пока Стр <> Неопределено Цикл 
			ТекстФайла=ТекстФайла+Стр;
			Стр = Текст.ПрочитатьСтроку();
		КонецЦикла;
		/////
		ТекстФайла=СтрЗаменить(ТекстФайла,"<auth>","<auth>"+Символы.ПС);
		ТекстФайла=СтрЗаменить(ТекстФайла,"</auth>","</auth>"+Символы.ПС);
		ТекстФайла=СтрЗаменить(ТекстФайла,"<groups>","<groups>"+Символы.ПС);
		ТекстФайла=СтрЗаменить(ТекстФайла,"<group",Символы.ПС+"<group");
		ТекстФайла=СтрЗаменить(ТекстФайла,"</group",Символы.ПС+"</group");
		ТекстФайла=СтрЗаменить(ТекстФайла,"</groups>","</groups>"+Символы.ПС);
		ТекстФайла=СтрЗаменить(ТекстФайла,"</barcode>","</barcode>"+Символы.ПС);
		ТекстФайла=СтрЗаменить(ТекстФайла,"</distributorName>","</distributorName>"+Символы.ПС);
		ТекстФайла=СтрЗаменить(ТекстФайла,"</ownerName>","</ownerName>"+Символы.ПС);
		ТекстФайла=СтрЗаменить(ТекстФайла,"</ordersNumber>","</ordersNumber>"+Символы.ПС);
		ТекстФайла=СтрЗаменить(ТекстФайла,"</code>","</code>"+Символы.ПС);
		ТекстФайла=СтрЗаменить(ТекстФайла,"</createdAt>","</createdAt>"+Символы.ПС);
		ТекстФайла=СтрЗаменить(ТекстФайла,"</name>","</name>"+Символы.ПС);
		ТекстФайла=СтрЗаменить(ТекстФайла,"</result>","</result>"+Символы.ПС);
		Возврат ТекстФайла ;
КонецФункции




 
 Функция ПолучитьСтрокуЗапроса() 
	 ЗаписьXML=новый ЗаписьXML;
	 ЗаписьXML.УстановитьСтроку("UTF-8");
	 ЗаписьXML.ЗаписатьНачалоЭлемента("distributors");
	 
	 ЗаписьXML.ЗаписатьАтрибут("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
	 ЗаписьXML.ЗаписатьАтрибут("xmlns:xsd","http://www.w3.org/2001/XMLSchema");
	 
	 ЗаписьXML.ЗаписатьНачалоЭлемента("groupsCreate");
	 ЗаписьXML.ЗаписатьНачалоЭлемента("group");
	 
	 Для каждого стр из Состав Цикл 
		 Если не стр.Подбор Тогда Продолжить; КонецЕсли;
		 Если стр.ВыборАдреса Тогда
		 	ЗаписьXML.ЗаписатьНачалоЭлемента("mainOrder");
		 Иначе
			 ЗаписьXML.ЗаписатьНачалоЭлемента("order");
		 КонецЕсли;	 
			 Если ТипЗнч(стр.Покупка) = Тип("СправочникСсылка.Пристрой") Тогда
				 ЗаписьXML.ЗаписатьНачалоЭлемента("uid");
				 ЗаписьXML.ЗаписатьТекст(Формат(стр.Участник.Код,"ЧГ=0")); 
				 ЗаписьXML.ЗаписатьКонецЭлемента();
		     КонецЕсли;
			 ЗаписьXML.ЗаписатьНачалоЭлемента("orderType");
			 Если ТипЗнч(стр.Покупка) = Тип("СправочникСсылка.Пристрой") Тогда
				ЗаписьXML.ЗаписатьТекст("bulletin"); 
			Иначе 
			 	ЗаписьXML.ЗаписатьТекст("sp");
			КонецЕсли;	
			 ЗаписьXML.ЗаписатьКонецЭлемента();
			 Если стр.КодЗаказа="" Тогда
				 
				 ЗаписьXML.ЗаписатьНачалоЭлемента("uid");
				 ЗаписьXML.ЗаписатьТекст(Формат(Число(стр.Участник.Код),"ЧГ=0"));
				 ЗаписьXML.ЗаписатьКонецЭлемента();
				 
				 ЗаписьXML.ЗаписатьНачалоЭлемента("pid");
				 ЗаписьXML.ЗаписатьТекст(Формат(Число(стр.Покупка.Код),"ЧГ=0"));
				 ЗаписьXML.ЗаписатьКонецЭлемента();
			 Иначе
				 ЗаписьXML.ЗаписатьНачалоЭлемента("orderId");
				 ЗаписьXML.ЗаписатьТекст(Формат(Число(стр.КодЗаказа),"ЧГ=0"));
				 ЗаписьXML.ЗаписатьКонецЭлемента();
			 КонецЕсли;
		 ЗаписьXML.ЗаписатьКонецЭлемента();
	 КонецЦикла;
	 ЗаписьXML.ЗаписатьКонецЭлемента();
	 ЗаписьXML.ЗаписатьКонецЭлемента();		 
	 
	 ЗаписьXML.ЗаписатьКонецЭлемента();	
	 
	 Возврат ЗаписьXML.Закрыть();
КонецФункции	



&НаКлиенте
Процедура ГруппаУчастниковПриИзменении(Элемент)
	СписокУчастников=	ПолучитьУчастниковПоГруппе(ГруппаУчастников);
	ОбновитьСписокДокументов();
КонецПроцедуры

&НаСервере
Функция   ПолучитьУчастниковПоГруппе(ГруппаУчастников)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчастникиВГруппах.Участник
		|ИЗ
		|	РегистрСведений.УчастникиВГруппах КАК УчастникиВГруппах
		|ГДЕ
		|	УчастникиВГруппах.Группа = &Группа";

	Запрос.Параметры.Вставить("Группа",ГруппаУчастников);
	выборка=Запрос.Выполнить().Выбрать();
	СЗ=Новый СписокЗначений;
	Пока выборка.Следующий()  Цикл
		СЗ.Добавить(выборка.участник,,истина);	
	КонецЦикла;
	Возврат СЗ;
КонецФункции // ПолучитьУчастниковПоГруппе()


&НаКлиенте
Процедура ВыдатьПокупки(Команда)

	ВыдатьПокупкиНаСервере(Списывать);
    ОбновитьСписокДокументов();
КонецПроцедуры

Процедура ВыдатьПокупкиНаСервере(Списывать)
	отмеченныеУчастники = ПолучитьСписокООтмеченныхУчастников(СписокУчастников);
	Для каждого элем из отмеченныеУчастники Цикл
		обРасходная					= Документы.Расходная.СоздатьДокумент();
		обРасходная.Дата			= ТекущаяДата();
		обРасходная.Списать			= Списывать;
		обРасходная.Автозаполнение	= ГруппаУчастников;
		обРасходная.Участник		= элем;
		обРасходная.ЗаполнитьОстатками();
		обРасходная.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;


КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Период.ДатаНачала=НачалоДня(ТекущаяДата());
	Период.ДатаОкончания=КонецДня(ТекущаяДата());
	ОбновитьСписокДокументов();
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокООтмеченныхУчастников(СписокУчастников)
	МассивУчастников=новый Массив;
	Для каждого стр из СписокУчастников Цикл
		если стр.Пометка Тогда
			МассивУчастников.Добавить(стр.Значение);
		КонецЕсли;
	КонецЦикла;
	Возврат МассивУчастников;
КонецФункции
Процедура ОбновитьСписокДокументов()
	ДокументыУчастников.Параметры.УстановитьЗначениеПараметра("ДатаНачала",Период.ДатаНачала);
	ДокументыУчастников.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",Период.ДатаОкончания);
	ДокументыУчастников.Параметры.УстановитьЗначениеПараметра("СписокУчастников",ПолучитьСписокООтмеченныхУчастников(СписокУчастников));
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ОбновитьСписокДокументов();
КонецПроцедуры

&НаКлиенте
Процедура СписокУчастниковПриИзменении(Элемент)
	ОбновитьСписокДокументов();
КонецПроцедуры

&НаКлиенте
Процедура Просмотр(Команда)
	ПросмотрНаСервере();	
КонецПроцедуры

Процедура ПросмотрНаСервере()
	ПечатнаяФорма.Очистить();
	запрос			= Новый Запрос;
	запрос.Текст	= ДокументыУчастников.ТекстЗапроса;

	запрос.Параметры.Вставить("ДатаНачала",			Период.ДатаНачала);
	запрос.Параметры.Вставить("ДатаОкончания",		Период.ДатаОкончания);
	запрос.Параметры.Вставить("СписокУчастников",	ПолучитьСписокООтмеченныхУчастников(СписокУчастников));
	тз				= запрос.Выполнить().Выгрузить();
	массОбъектов 	= тз.ВыгрузитьКолонку("Ссылка");
	
	ТабДок = Документы.Расходная.ПечатьЧек(массОбъектов, неопределено);
	
	
//	ЗаполнитьСжатыйЧек(ТабДок);
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.АвтоМасштаб=Истина;
	ТабДок.ПолеСлева=0;
	ТабДок.ПолеСправа=0;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	ПечатнаяФорма = ТабДок;
//	ТабДок.Показать();
	//ТабДок.Напечатать();
	
КонецПроцедуры



&НаКлиенте
Процедура Печать(Команда)
	ПечатнаяФорма.Напечатать();
КонецПроцедуры





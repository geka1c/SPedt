
#Область КомандыФормы

&НаКлиенте
Процедура ПередатьКурьеру(Команда)
	НоваяМетодика = СинхронизацияПоступлений.НоваяМетодика(ТекущаяДата());
	Если НоваяМетодика Тогда
		СинхронизацияПоступлений.Синхронизировать(ПВНазначения);
		ОткрытьФорму(	"Документ.ВыдачаТранзита.ФормаОбъекта",
						новый Структура("ТочкаНазначения",ПВНазначения),ЭтаФорма,Истина);
						
	Иначе	
		
		ОткрытьФорму(	"Обработка.ВыдачаТранзита.Форма.НеПодтвержденныеПосылки",
						новый Структура("ИсточникВызова, ПунктВыдачи","ВыдачаТранзита",ПВНазначения),
						ЭтаФорма,Истина);		
	КонецЕсли;					

КонецПроцедуры


&НаКлиенте
Процедура ПередатьЗаморозку(Команда)
	НоваяМетодика = СинхронизацияПоступлений.НоваяМетодика(ТекущаяДата());
	Если НоваяМетодика Тогда
		СинхронизацияПоступлений.Синхронизировать();
		ОткрытьФорму(	"Документ.ВыдачаТранзита.ФормаОбъекта",
						новый Структура("Заморозка",Истина),ЭтаФорма,Истина);
						
	Иначе		
			ОткрытьФорму(	"Обработка.ВыдачаТранзита.Форма.НеПодтвержденныеПосылки",
						новый Структура("ИсточникВызова, ПунктВыдачи","ВыдачаТранзитаЗаморозка",ПВНазначения),
						ЭтаФорма,Истина);		
	КонецЕсли;
КонецПроцедуры
	


&НаКлиенте
Процедура УпаковатьЗаказы(Команда)
		ОткрытьФорму(	"Обработка.ВыдачаТранзита.Форма.НеПодтвержденныеПосылки",
						новый Структура("ИсточникВызова, ПунктВыдачи","УпаковатьЗаказы",ПВНазначения),
						ЭтаФорма,Истина);		
	
КонецПроцедуры


#КонецОбласти

//&НаСервере
//Процедура ЗаполнитьНаСервере(ТочкаРаздачи,ДанныеФормы);  
//	обДок=ДанныеФормыВЗначение(ДанныеФормы,Тип("ДокументОбъект."+ДанныеФормы.Ссылка.Метаданные().Имя));
//	обДок.ТочкаНазначения=ТочкаРаздачи;
//	Если обДок.Метаданные().Реквизиты.Найти("ТочкаТранзита")<>Неопределено Тогда
//		обДок.ТочкаТранзита=ТочкаРаздачи;
//	КонецЕсли;	
//	обДок.ЗаполнитьПоТочкеНазначения();
//	ЗначениеВДанныеФормы(обДок,ДанныеФормы);
//КонецПроцедуры

&НаКлиенте
Процедура ТочкаРаздачиПриИзменении(Элемент)
	ТочкаРаздачиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТочкаРаздачиПриИзмененииНаСервере()
	Если ТипЗнч(ПВНазначения) = Тип("СправочникСсылка.ТочкиРаздачи") Тогда
		ТК=ПВНазначения.ТранспортнаяКомпания;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия="ВыдачаТранзита" Тогда
		ОткрытьФорму(	"Документ.ВыдачаТранзита.ФормаОбъекта",
						новый Структура("ТочкаНазначения",Параметр),ЭтаФорма,Истина);
						
	ИначеЕсли ИмяСобытия="ВыдачаТранзитаЗаморозка" Тогда
		ОткрытьФорму(	"Документ.ВыдачаТранзита.ФормаОбъекта",
						новый Структура("Заморозка",Истина),ЭтаФорма,Истина);
						
						
	ИначеЕсли ИмяСобытия="УпаковатьЗаказы" Тогда
		ОткрытьФорму(	"Документ.УпаковатьЗаказы.ФормаОбъекта",
						новый Структура("ТочкаНазначения",Параметр),ЭтаФорма,Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Статусы(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияформыДокумента",ЭтаФорма);	
	ОткрытьФорму(	"Обработка.ВыдачаТранзита.Форма.СостоянияЗаказовПоПунктамВыдачи",
						,ЭтаФорма,Истина,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияформыДокумента(Результат, ДопПараметры) Экспорт
	ОбновитьТранзиты();
КонецПроцедуры



Процедура УстановитьВидимость()
	Элементы.ПередатьЗаморозку.Видимость = (Константы.ОтгружатьЗаморозкуОтдельно.Получить());
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
	ОбновитьТранзиты();
	ПодключитьОбработчикОжидания("ОбновитьТранзиты", 7200);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТранзиты()
	результат = ПолучитьТранзитыНаСкладе();
	ТранзитовНаСкладе = Результат.Пристрой + Результат.Ошибочные;
	Если ТранзитовНаСкладе = 0 или ТранзитовНаСкладе = null Тогда
		Элементы.ГруппаТранзит.Видимость 	= Ложь;
	Иначе
		Элементы.ГруппаТранзит.Видимость	= Истина;
		Элементы.СформироватьПеремещениеТранзита.Заголовок 		= "Транзитов на складе : "+ТранзитовНаСкладе  ;
	КонецЕсли

КонецПроцедуры

Функция ПолучитьТранзитыНаСкладе()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ТранзитОстатки.Партия) <> ТИП(Документ.ПоступлениеПристроя)
		|			ТОГДА ТранзитОстатки.КоличествоОстаток
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Ошибочные,
		|	ТранзитОстатки.Партия КАК Партия,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ТранзитОстатки.Партия) = ТИП(Документ.ПоступлениеПристроя)
		|			ТОГДА ТранзитОстатки.КоличествоОстаток
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Пристрой
		|ПОМЕСТИТЬ сбор
		|ИЗ
		|	РегистрНакопления.Транзит.Остатки КАК ТранзитОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(сбор.Ошибочные), 0) КАК Ошибочные,
		|	ЕСТЬNULL(СУММА(сбор.Пристрой), 0) КАК Пристрой
		|ИЗ
		|	сбор КАК сбор";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат		Новый структура("Пристрой, Ошибочные", Выборка.Пристрой, Выборка.Ошибочные)	;
	КонецЕсли;
	
	Возврат Новый структура("Пристрой, Ошибочные", 0,0 );
КонецФункции

&НаКлиенте
Процедура СформироватьПеремещениеТранзита(Команда)
		//ПунктВыдачи 		= Элементы.СостоянияОтгрузки.ТекущиеДанные.ПунктВыдачи;
		ПараметрыЗаполнения	= Новый Структура();
		ПараметрыЗаполнения.Вставить("Дата", 			ТекущаяДата());
		ПараметрыЗаполнения.Вставить("ВидОперации", 	"ТранзитНаВозврат");
		ПараметрыЗаполнения.Вставить("МестоХранения", 	Неопределено);
		ПараметрыЗаполнения.Вставить("Габарит", 		Неопределено);
		ПараметрыЗаполнения.Вставить("Организатор", 	Неопределено);  
		ПараметрыЗаполнения.Вставить("ПунктВыдачи", 	Неопределено);  
		ПараметрыЗаполнения.Вставить("ДатаОтчета", 		КонецДня(ТекущаяДата()));

		
		ПараметрыЗаполнения.Вставить("ЭтоПристрой", новый структура("ПравоеЗначение, Использование, ВидСравнения",Ложь, Истина, ВидСравненияКомпоновкиДанных.Равно) );
		//ПараметрыЗаполнения.Вставить("Точка", 		новый структура("ПравоеЗначение, Использование", ПунктВыдачи, Истина) );
	
    	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияформыДокумента",ЭтаФорма);
	
		ОткрытьФорму("Документ.ДвижениеТранзита.ФормаОбъекта",Новый структура("ПараметрыЗаполнения",ПараметрыЗаполнения) ,ЭтаФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс  );
КонецПроцедуры




&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если не ЗначениеЗаполнено(ПВНазначения) Тогда
		Умолчания = Константы.ПунктВыдачиТранзита.Получить();
		Если не ЗначениеЗаполнено(Умолчания) Тогда
			ПВНазначения = Справочники.ТочкиРаздачи.ПустаяСсылка();
		Иначе
			ПВНазначения = Умолчания;
		КонецЕсли;	
	КонецЕсли;	
	
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьТранзитыКОманда(Команда)
	ОбновитьТранзиты()
КонецПроцедуры

&НаКлиенте
Процедура ВыдатьПоСегменту(Команда)
	ОткрытьФорму("Обработка.ВыдачаТранзита.Форма.ФормированиеНакладныхПоСегменту");
КонецПроцедуры




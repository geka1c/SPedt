

//Процедура Позволяет получить стоимость доставки заказа до ПВЗ с учётом стоимости постоянных 
//услуг, предусмотренных Вашим договором, возможен расчет с учетом курьерской доставки. 
//Возвращает базовую стоимость, стоимость услуг (оповещение, выдача, страховой сбор, 
//прием платежа, курьерская доставка и т.п.), срок доставки с учетом варианта выдачи (получение 
//на ПВЗ или курьерская доставка). 
//Если указан почтовый индекс, расчет будет производиться для курьерской доставки по 
//заданному индексу (код пункта выдачи игнорируется).
//Параметры:
//WSServis - WS ссылка,
//токен - токен
// weight - вес посылки в граммах,
// targetstart - код пункта приема посылок,
// target - код пункта выдачи заказов,
// Обратите внимание! Следующие поля считаются равными 0 если не заполнены:
// ordersum - cтоимость товаров без учета стоимости доставки,
// deliverysum - заявленная ИМ стоимость доставки,
// paysum - сумма к оплате
// height - высота коробки (см),
// width - ширина коробки (см),
// depth - глубина коробки (см),
// zip - индекс города для курьерской доставки
// На выходе будет переменная price содержащая итоговую цену в рублях, а также 
//составляющие этой цены (базовая стоимость и стоимость услуг).
Функция ПолучитьСтоимостьДоставки(weight,targetstart,target,ordersum,deliverysum,paysum,
											height,width,depth,zip) Экспорт
	Прокси = ПолучитьПроксиПаблик().Прокси;
	токен=Константы.ТокенBoxBerry.Получить();
	
	price=0;
	price_base=0;
	price_service=0;
	delivery_period=0;
	
    Прокси.DeliveryCosts(токен,weight,targetstart,target,ordersum,deliverysum,paysum,
											height,width,depth,zip,price,price_base,price_service,delivery_period);
	Ответ=Новый Структура;											
	Ответ.Вставить("price",price);
	Ответ.Вставить("price_base",price_base);
	Ответ.Вставить("price_service",price_service);
	Ответ.Вставить("delivery_period",delivery_period);
											
    Возврат Ответ;
КонецФункции

Функция ПолучитьСписокГородов() Экспорт
    Прокси = ПолучитьПроксиПаблик().Прокси;
	токен=Константы.ТокенBoxBerry.Получить();
	ТипWSПараметра = Прокси.ФабрикаXDTO.Пакеты.Получить(ПолучитьПроксиПаблик().Адрес).Получить("ListCitiesQuery");
	WSПараметр=Прокси.ФабрикаXDTO.Создать(ТипWSПараметра);
	WSПараметр.token=токен;
	СписокГородов=Прокси.ListCities(WSПараметр);
    
    Возврат СписокГородов;
КонецФункции


#Область ВспомогательныеФункции
Функция ПолучитьПроксиПаблик()
	WSServis=WSСсылки.WSBoxBerryTest;
	ОписаниеСервиса = WSServis.ПолучитьWSОпределения().Сервисы[0];
    Адрес        = ОписаниеСервиса.URIПространстваИмен;
    ИмяСервиса     = ОписаниеСервиса.Имя;                            
    ИмяПорта     = ОписаниеСервиса.ТочкиПодключения[0].Имя;
    Прокси = WSServis.СоздатьWSПрокси(Адрес,ИмяСервиса,ИмяПорта,,,);
	
	Возврат новый Структура("Прокси,Адрес",Прокси,Адрес);
КонецФункции	

Функция ПолучитьПроксиЛК()
	WSServis=WSСсылки.WSBoxBerryLKTest;
	ОписаниеСервиса = WSServis.ПолучитьWSОпределения().Сервисы[0];
    Адрес        = ОписаниеСервиса.URIПространстваИмен;
    ИмяСервиса     = ОписаниеСервиса.Имя;                            
    ИмяПорта     = ОписаниеСервиса.ТочкиПодключения[0].Имя;
    Прокси = WSServis.СоздатьWSПрокси(Адрес,ИмяСервиса,ИмяПорта,,,);
	Возврат новый Структура("Прокси,Адрес",Прокси,Адрес);
КонецФункции	


#КонецОбласти


&НаСервереБезКонтекста
Процедура ПриведениеПокупокКСсылкеПриходнаяНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПриходнаяПокупки.Ссылка
		|ИЗ
		|	Документ.Приходная.Покупки КАК ПриходнаяПокупки
		|ГДЕ
		|	ПриходнаяПокупки.Ссылка.Проведен
		|	И НЕ ПриходнаяПокупки.Ссылка.ПометкаУдаления
		|	И ТИПЗНАЧЕНИЯ(ПриходнаяПокупки.Покупка) = ТИП(ЧИСЛО)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПриходнаяПокупки.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	y=1;
	Пока Выборка.Следующий() Цикл
		об=Выборка.Ссылка.ПолучитьОбъект();
		Для Каждого стр из об.Покупки Цикл
			Если ТипЗнч(стр.Покупка)=Тип("Число") Тогда
				ПокупкаСсылка	=	СП_РаботаСоСправочниками.ПолучитьПокупкуПо_Коду(стр.Покупка);
				Если ЗначениеЗаполнено(ПокупкаСсылка) Тогда 
					 стр.Покупка=ПокупкаСсылка;
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;
		Попытка
			об.Записать(РежимЗаписиДокумента.Проведение);
			
			
			
		Исключение
			
		КонецПопытки;
		y=y+1;
	КонецЦикла;
КонецПроцедуры




&НаКлиенте
Процедура ПриведениеПокупокКСсылкеПриходная(Команда)
	ПриведениеПокупокКСсылкеПриходнаяНаСервере();
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ЗаменаУчастниковНаОрговВРСПриходНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Приход.Регистратор
		|ИЗ
		|	РегистрНакопления.Приход КАК Приход
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(Приход.Организатор) = ТИП(Справочник.Участники)
		|
		|СГРУППИРОВАТЬ ПО
		|	Приход.Регистратор
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приход.Регистратор.Дата";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаменитьОргаНаУчастника(ВыборкаДетальныеЗаписи.Регистратор);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаменаУчастниковНаОрговВРСПриход(Команда)
	ЗаменаУчастниковНаОрговВРСПриходНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаменитьОргаНаУчастника(Регистратор)
	Если ТипЗнч(Регистратор)=Тип("ДокументСсылка.Приходная") Тогда	
		об=Регистратор.ПолучитьОбъект();
		Если ЗначениеЗаполнено(об.Организатор) Тогда
			об.Организатор	= СП_РаботаСоСправочниками.ПолучитьОрганизатораПо_Коду(об.Организатор.Код);
		КонецЕсли;
		Для каждого стр из об.Покупки Цикл
			Если ЗначениеЗаполнено(стр.Организатор) Тогда
				стр.Организатор	= СП_РаботаСоСправочниками.ПолучитьОрганизатораПо_Коду(стр.Организатор.Код);
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;	
	Попытка
	  	об.Записать(РежимЗаписиДокумента.Проведение);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Строка(об.Ссылка));
	Исключение
	    ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;
		
		
КонецПроцедуры	


&НаСервере
Процедура КорректировкаКоличестваКоробокНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Транзит.Регистратор
		|ИЗ
		|	РегистрНакопления.Транзит КАК Транзит
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(Транзит.ПокупкаСсылка) = ТИП(Справочник.Коробки)
		|
		|СГРУППИРОВАТЬ ПО
		|	Транзит.Регистратор";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		об=ВыборкаДетальныеЗаписи.Регистратор.ПолучитьОбъект();
		об.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура КорректировкаКоличестваКоробок(Команда)
	КорректировкаКоличестваКоробокНаСервере();
КонецПроцедуры


&НаСервере
Процедура ЧистимДоставленныеТранзитыНаСервере()
	нз=РегистрыСведений.ДоставленныеТранзиты.СоздатьНаборЗаписей();
	нз.Прочитать();
	нз.Очистить();
	нз.Записать();
КонецПроцедуры


&НаКлиенте
Процедура ЧистимДоставленныеТранзиты(Команда)
	ЧистимДоставленныеТранзитыНаСервере();
КонецПроцедуры


&НаСервереБезКонтекста
Процедура УстановитьПоследовательностьТранзитыНаСервере(ДатаТранзита)
Последовательности.Транзит.УстановитьГраницу( ДатаТранзита);	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура УстановитьПоследовательностьТранзиты(Команда)
	УстановитьПоследовательностьТранзитыНаСервере(ДатаТранзита);
КонецПроцедуры


&НаСервере
Процедура ЧистимДублиМегоордеровНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Мегаордера.Покупка КАК Покупка,
		|	Мегаордера.Участник КАК Участник,
		|	СУММА(1) КАК Количество
		|ПОМЕСТИТЬ Пред
		|ИЗ
		|	Справочник.Мегаордера КАК Мегаордера
		|
		|СГРУППИРОВАТЬ ПО
		|	Мегаордера.Покупка,
		|	Мегаордера.Участник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Пред.Покупка КАК Покупка,
		|	Пред.Участник КАК Участник
		|ПОМЕСТИТЬ Пред1
		|ИЗ
		|	Пред КАК Пред
		|ГДЕ
		|	Пред.Количество > 1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Пред1.Покупка КАК Покупка,
		|	Пред1.Участник КАК Участник,
		|	Мегаордера.Ссылка КАК Ссылка
		|ИЗ
		|	Пред1 КАК Пред1
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Мегаордера КАК Мегаордера
		|		ПО Пред1.Покупка = Мегаордера.Покупка
		|			И Пред1.Участник = Мегаордера.Участник";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		об=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		об.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ЧистимДублиМегоордеров(Команда)
	ЧистимДублиМегоордеровНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура Обновление_3_3_7_10(Команда)
	Обновление_3_3_7_10_наСервере();
КонецПроцедуры

Процедура Обновление_3_3_7_10_наСервере()
	ПараметрыКоманды = Новый Структура;
	ОбновлениеИнформационнойБазыСовместныеПокупки.ОбновлениеНаВерсию_3_3_7_10(ПараметрыКоманды);
КонецПроцедуры


&НаКлиенте
Процедура Обновление_3_4_1_1(Команда)
	Обновление_3_4_1_1_наСервере();
КонецПроцедуры

Процедура Обновление_3_4_1_1_наСервере()
	ПараметрыКоманды = Новый Структура;
	ОбновлениеИнформационнойБазыСовместныеПокупки.ОбновлениеНаВерсию_3_4_1_1(ПараметрыКоманды);
КонецПроцедуры


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область СлужебныйПрограммныйИнтерфейс
// Настройки размещения в панели отчетов.
//
// Параметры:
//   Настройки – Коллекция – Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//   НастройкиОтчета – СтрокаДереваЗначений – Настройки размещения всех вариантов отчета.
//       См. "Реквизиты для изменения" функции ВариантыОтчетов.ДеревоНастроекВариантовОтчетовКонфигурации().
//
// Описание:
//   См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
// Вспомогательные методы:
//   НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//   ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Истина/Ложь); // Отчет
//   поддерживает только этот режим.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
    НастройкиВарианта 			= ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Основной");
	НастройкиВарианта.Описание	=НСтр("ru = 'Поиск участника по нику, для выдачи заказов.'");

КонецПроцедуры
#КонецОбласти
#КонецЕсли


&НаКлиенте
Процедура ОбработкаДействияРасшифровки()

	

КонецПроцедуры // ОбработкаДействияРасшифровки()



&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	 
	ИмяОбластиРасш = Элемент.ТекущаяОбласть.Имя;
	ПозицияКолонки = Найти(ИмяОбластиРасш,"C");
	РасшифровкаДляУчастника=Результат.Область(лев(ИмяОбластиРасш,ПозицияКолонки)+"1").Расшифровка;
	
	ЗначениеУчастника=ПолучитьЗначениеРасшифровки(РасшифровкаДляУчастника);
	Если ТипЗнч(ЗначениеУчастника.Значение)<>Тип("СправочникСсылка.Участники") Тогда Возврат; КонецЕсли;
	
	
	ЗначениеТекущее=ПолучитьЗначениеРасшифровки(Расшифровка);
	
	
	
	Если ЗначениеТекущее.Поле="КоличествоКарт" Тогда
		СтандартнаяОбработка=Ложь;
		СформироватьКарту(ЗначениеУчастника.Значение);
	Иначе
		СтандартнаяОбработка=Ложь;
		СформироватьРасход(ЗначениеУчастника.Значение);
	КонецЕсли;	
	
	//ПоляРасшифровки = Новый Структура;
	//ИмяОбластиРасш = Элемент.ТекущаяОбласть.Имя;
	//ПозицияКолонки = Найти(ИмяОбластиРасш,"C");
	//ПоляРасшифровки.Вставить("Участник",Результат.Область(лев(ИмяОбластиРасш,ПозицияКолонки)+"1").Расшифровка);
	//ПоляРасшифровки.Вставить("Телефон",Результат.Область(лев(ИмяОбластиРасш,ПозицияКолонки)+"2").Расшифровка);
	//ПоляРасшифровки.Вставить("Остаток",Результат.Область(лев(ИмяОбластиРасш,ПозицияКолонки)+"3").Расшифровка);
	//ПараметрыРасшифровки = РасшОбработатьНаСервере(ПоляРасшифровки, ДанныеРасшифровки);
	
	
 //   Если ЗначениеЗаполнено(ПараметрыРасшифровки) Тогда
 //       СтандартнаяОбработка = Ложь;
 //       Период = Новый СтандартныйПериод;
 //       Период.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
 //       Период.ДатаОкончания = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Период").Значение.Дата;
 //       Период.ДатаНачала = Дата(2012,08,01);//ДобавитьМесяц(Период.ДатаОкончания, -1);
 //
 //       ПараметрыРасшифровки.Вставить("Период", Период);
 //       ПараметрыОтч = Новый Структура("СформироватьПриОткрытии, КлючПользовательскихНастроек", Истина, ПараметрыРасшифровки);
 //       Отч = ОткрытьФормуМодально("Отчет.ОборотыМатериаловСкладОбъекта.Форма.ФормаОтчета", ПараметрыОтч, ЭтаФорма);
 //   КонецЕсли;
КонецПроцедуры

Функция ПолучитьЗначениеРасшифровки(Расшифровка)
	КоллекцияРасшифровки=ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	КоллекцияПолей=КоллекцияРасшифровки.Элементы[Расшифровка].ПолучитьПоля();
	Возврат новый Структура("Поле,Значение",КоллекцияПолей[0].Поле,КоллекцияПолей[0].Значение);
КонецФункции	

&НаСервереБезКонтекста
Функция РасшОбработатьНаСервере(ПоляРасшифровки, ДанныеРасшифровки)

    Парам = Новый Структура;
    Данные = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
    Если Данные.Элементы[ПоляРасшифровки.Участник].ПолучитьПоля()[0].Поле = "Участник" Тогда
        Парам.Вставить("Участник", Данные.Элементы[ПоляРасшифровки.Участник].ПолучитьПоля()[0].Значение);
        Парам.Вставить("Телефон", Данные.Элементы[ПоляРасшифровки.Телефон].ПолучитьПоля()[0].Значение);
        Парам.Вставить("Остаток", Данные.Элементы[ПоляРасшифровки.Остаток].ПолучитьПоля()[0].Значение);
        ПолеРодитель = Данные.Элементы[ПоляРасшифровки.Участник].ПолучитьРодителей()[0];
        Если Типзнч(ПолеРодитель) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
            ЗначениеПоля = ПолеРодитель.ПолучитьПоля().Получить(0);
            Парам.Вставить(ЗначениеПоля.Поле, ЗначениеПоля.Значение);
        иначе
            ЗначениеПоля = ПолеРодитель.ПолучитьРодителей()[0].ПолучитьПоля().Получить(0);
            Парам.Вставить(ЗначениеПоля.Поле, ЗначениеПоля.Значение);
        КонецЕсли;
    КонецЕсли;
    Возврат Парам;

КонецФункции


&НаКлиенте
Процедура СформироватьКарту(Участник)
	форма=ПолучитьФорму("Справочник.КартыУчастников.ФормаОбъекта");
	ДанныеФормы = Форма.Объект;
	СформироватьКартуНаСервере(ДанныеФормы,Участник);
	КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
	Форма.Открыть();
КонецПроцедуры
  
&НаСервереБезКонтекста
Процедура СформироватьКартуНаСервере(НовыйОбъект,Участник);
		НовыйОбъект.Владелец = Участник;
КонецПроцедуры




&НаКлиенте
Процедура СформироватьРасход(Участник)
	Если   аСППрверкиКлиент.НаличиеОткрытыхОкон("Расходная") Тогда
    	ПоказатьПредупреждение(,"Существует не завершенная операция ВЫДАЧИ.Закройте все окна РАСХОДА и повторите попытку!!!",30,"Предупреждение");
		Возврат;		
	КонецЕсли;
	
	форма=ПолучитьФорму("Документ.Расходная.ФормаОбъекта",,,Истина);
	ДанныеФормы = Форма.Объект;
	СформироватьРасходНаСервере(ДанныеФормы,Участник);
	КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
	Форма.Открыть();
КонецПроцедуры



&НаСервереБезКонтекста
Процедура СформироватьРасходНаСервере(НовыйОбъект,Участник);
		НовыйОбъект.Участник = Участник;
		НовыйОбъект.ПоискНикаСтоимость=Константы.ПоискНикаСтоимость.Получить();
		расх=ДанныеФормыВЗначение(НовыйОбъект,Тип("ДокументОбъект.Расходная"));
		расх.заполнитьОстатками();
		//расх.ЗаполнениеКодов();
		ЗначениеВДанныеФормы(расх,НовыйОбъект);
КонецПроцедуры




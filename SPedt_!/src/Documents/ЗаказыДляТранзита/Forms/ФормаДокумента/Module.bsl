




&НаКлиенте
Процедура ВвестиШтрихКодВручную(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаВводаШК",,ЭтотОбъект,,,,Новый ОписаниеОповещения("ВвестиШтрихКодВручную_Завершение", ЭтотОбъект));
	//12000008536904000077
КонецПроцедуры   


&НаКлиенте
Процедура ВвестиШтрихКодВручную_Завершение(ШК, ДополнительныеПараметры) Экспорт
	ОбработатьШКнаКлиенте(ШК);
КонецПроцедуры	


&НаКлиенте
Процедура ОбработатьШКнаКлиенте(ШК)
	ДанныеШК    = СП_Штрихкоды.ПолучитьДанныеПоШК(ШК);

	//Если не ЗначениеЗаполнено(объект.ПунктВыдачи) Тогда
	//	ДанныеШК.Свойство("ПунктВыдачи",объект.ПунктВыдачи);
		//Если Строка(ДанныеШК.ПунктВыдачи) = "Пунт выдачи не указан" Тогда
		//	ДанныеШК.ПунктВыдачи	
		//КонецЕсли;
	//КонецЕсли;	
	Если Строка(ДанныеШК.Тип) = "Посылка (12)"  		или
		 Строка(ДанныеШК.Тип) = "Коробка (44)"					Тогда
		ДобавитьЗаказ(ДанныеШК);
	//Иначеесли Строка(ДанныеШК.Тип) = "Оборотная тара (34)" 			Тогда		
	//	//СтоСПОбмен_ОборотнаяТара.ДополнитьКоробкой(ДанныеШК);
	//	//Если ДанныеШК.Коробка = Неопределено Тогда
	//	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определеноа коробка по таре: "+ ДанныеШК.ОбороткнаяТара);
	//	//	Возврат;
	//	//КонецЕсли;	
	//	Добавлено = ОбработатьШКОборотнойТры(ДанныеШК);
	//	Если Добавлено Тогда
	//		СтоСП_Клиент.СигналДинамика();
	//		Элементы.ГруппаСтраницы.ТекущаяСтраница	=	Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаОборотнаяТара;
	//	КонецЕсли;	
	//	
	//Иначеесли Строка(ДанныеШК.Тип) = "Сотрудник (55)" 			Тогда	
	//	ЗакрыватьДокумент = (сред(шк,8,2) = "01");
	//	Если СП_РаботаСДокументами_Клиент.ЗаписатьДокумент(этотОбъект,,ДанныеШК.Сотрудник) и ЗакрыватьДокумент Тогда
	//		Закрыть();
	//	КонецЕсли;	
	//ИначеЕсли Строка(ДанныеШК.Тип) = "Габарит (62)" 				Тогда	
	//	Габарит			= ДанныеШК.Габарит;
	ИначеЕсли Строка(ДанныеШК.Тип) = "Место хранения (63)" 		Тогда	
		МестоХранения	= ДанныеШК.МестоХранения;
	//ИначеЕсли Строка(ДанныеШК.Тип) = "Действие по ШК (66)"  и ДанныеШК.Действие = "СнятьУстановитьОтдельнымМестом"	    Тогда		
	//	ОтдельнымМестом	=	не ОтдельнымМестом;
	//ИначеЕсли Строка(ДанныеШК.Тип) = "Действие по ШК (66)"  и ДанныеШК.Действие = "Мультиорг"	    Тогда		
	//	Объект.МультиОрг	=	не Объект.МультиОрг;	
	иначе	
		
	КонецЕсли;
	Модифицированность			= Истина;
	УстановитьВидимость();
	ПересчетЗаголовковСтраниц();
КонецПроцедуры	  



&НаКлиенте
Процедура ДобавитьЗаказ(ДанныеШК) Экспорт 
	Если не ЗначениеЗаполнено(МестоХранения) Тогда
		Сообщение = новый СообщениеПользователю;
		Сообщение.Текст = "Чтобы добавить заказ, необходимо заполнить место хранения!";
		Сообщение.Поле = "МестоХранения";		
		Сообщение.Сообщить();  
		Возврат;
	КонецЕсли;	
	
	
	Если Строка(ДанныеШК.Тип) = "Посылка (12)" Тогда
			ПсылкаДобавлена = ДобавитьПосылку(ДанныеШК);
			Если ПсылкаДобавлена Тогда
				СтоСП_Клиент.СигналДинамика();
			КонецЕсли;
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.группаПосылки;
	ИначеЕсли Строка(ДанныеШК.Тип) = "Коробка (44)" Тогда //44352952000899132115000954   44017898000522752026005685
			ЗаказДобавлен = ДобавитьГруппу(ДанныеШК);
			Если ЗаказДобавлен Тогда
				СтоСП_Клиент.СигналДинамика();
			КОнецЕсли;
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.группаКоробки;
	КонецЕсли;                  
	ПосчитатьСумму();
КонецПроцедуры



Функция ДобавитьПосылку(ПараметрыПосылки)
	Посылка 			= ПараметрыПосылки.Посылка;

	Если не ЗначениеЗаполнено(Объект.Организатор) тогда
		Объект.Организатор		= Посылка.Организатор;
	КонецЕсли;            
	Если не ЗначениеЗаполнено(Объект.Организатор) Тогда 
		СтоСПОбмен_Посылки.Загрузить_СоставПосылкиПоКодам(Посылка.Код);
		Объект.Организатор		= Посылка.Организатор;
	КонецЕсли;	
	
//	ПроверкаПройдена	= ПередДобавлениемЗаказа(параметрыПосылки);
	ПроверкаПройдена = Истина;
	

	масс_строк	= Объект.СписокЗаказов.НайтиСтроки(новый Структура("Посылка",Посылка));
	Если масс_строк.Количество()>0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Посылка "+Посылка+" уже добавлена ",,"Посылка");
		ПроверкаПройдена	= Ложь;
	КонецЕсли;	
	
	Если не ПроверкаПройдена Тогда Возврат Ложь; КонецЕсли;
	
	новая_строка				= Объект.СписокЗаказов.Добавить();
	новая_строка.Посылка	 	= Посылка;
	Если Строка(параметрыПосылки.ПунктВыдачи) =  "Пунт выдачи не указан" Тогда
		новая_строка.ПунктВыдачи	= ПараметрыПосылки.ПунктВыдачи;
	Иначе	
		новая_строка.ПунктВыдачи	= Посылка.ПунктВыдачи;
	КонецЕсли;		
	новая_строка.МестоХранения	= МестоХранения;

	новая_строка.ДатаПриема		= ТекущаяДата();
	новая_строка.ШК				= Посылка.ШК;
	Возврат Истина;
КонецФункции


Функция ДобавитьГруппу(параметрыПосылки)
	Если не ЗначениеЗаполнено(Объект.Организатор) тогда
		Объект.Организатор		= параметрыПосылки.Организатор;
	КонецЕсли;
	
//	ПроверкаПройдена	= ПередДобавлениемЗаказа(параметрыПосылки);
	ПроверкаПройдена = Истина;

	масс_строк	=	Объект.СписокКоробок.НайтиСтроки(новый Структура("Коробка",параметрыПосылки.Коробка));
	Если масс_строк.Количество()>0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Коробка "+параметрыПосылки.Коробка+" уже добавлена. ",,"Габарит");
		ПроверкаПройдена	= Ложь;
	КонецЕсли;	
	
	
	Если не ПроверкаПройдена Тогда Возврат Ложь; КонецЕсли;
	

	новая_строка					= Объект.СписокКоробок.Добавить();
	
	новая_строка.Коробка			= параметрыПосылки.Коробка;
	новая_строка.ДатаПриема			= ТекущаяДата();
	новая_строка.ШК					= параметрыПосылки.ШК;
	новая_строка.МестоХранения		= МестоХранения;               
	Если Строка(параметрыПосылки.Коробка.ТочкаНазначения) =  "Пунт выдачи не указан" Тогда
		новая_строка.ПунктВыдачи	= ПараметрыПосылки.ПунктВыдачи;
	Иначе	
		новая_строка.ПунктВыдачи	= параметрыПосылки.Коробка.ТочкаНазначения;
	КонецЕсли;		
		
	
	Возврат Истина;
КонецФункции      

Процедура УстановитьВидимость()

	
КонецПроцедуры



Функция ПересчетЗаголовковСтраниц()
	
	всегоПосылок = Объект.СписокЗаказов.Количество();
	Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.группаПосылки.Заголовок=?(всегоПосылок=0,"Посылки","Посылки ("+всегоПосылок+")");

	
	всегоОТ = Объект.СписокКоробок.Количество();
	Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаКоробки.Заголовок=?(всегоПосылок=0,"Коробки","Коробки ("+всегоОТ+")");
	
	
КонецФункции    


Процедура ПосчитатьСумму()
	док = РеквизитФормыВЗначение("Объект");
	док.ПосчитатьСумму();
	ЗначениеВДанныеФормы(док,Объект);
	Объект.Оплачено = Объект.СуммаПоДокументу;	
	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
	МестоХранения = Константы.ПунктВыдачиТранзита.Получить().МестоХранения;
	ПересчетЗаголовковСтраниц();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	      
	
	//Сканер штрихкода
   СтоСП_Клиент.ПодключитьСканерШК(УникальныйИдентификатор);
	

КонецПроцедуры




// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// ПодключаемоеОборудование                
	Если 	ИмяСобытия 	= "ScanData" 					и
			Источник 	= "ПодключаемоеОборудование" 	и
			ВводДоступен()										Тогда
			
			ШК 			= СтоСП_Клиент.ПолучитьШКизПараметров(Параметр);
			ОбработатьШКнаКлиенте(ШК);
			
	КонецЕсли;
	// Конец ПодключаемоеОборудование
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


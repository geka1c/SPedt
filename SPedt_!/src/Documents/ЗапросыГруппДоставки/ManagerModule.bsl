
#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	ТекстыЗапроса = Новый СписокЗначений;
	Получить_ТекстЗапроса_ЗапросыГруппыДоставки(Запрос, ТекстыЗапроса, Регистры);
	Получить_ТекстЗапроса_Обмен100СПрн_Ошибки (Запрос, ТекстыЗапроса, Регистры);

	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
	
КонецПроцедуры


Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", 					   ДокументСсылка);
	
	Запрос.УстановитьПараметр("Период",                        ДокументСсылка.Дата);
	Запрос.УстановитьПараметр("Номер",                         ДокументСсылка.Номер);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",       ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяОбъекта()));
	Запрос.УстановитьПараметр("Комментарий",                   ДокументСсылка.Комментарий);
	Запрос.УстановитьПараметр("ПометкаУдаления",               ДокументСсылка.ПометкаУдаления);
	Запрос.УстановитьПараметр("Проведен",                      ДокументСсылка.Проведен);
КонецПроцедуры




Функция Получить_ТекстЗапроса_Обмен100СПрн_Ошибки (Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "Обмен100СПрн_Ошибки";
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 

	
	ТекстЗапроса =  "
					|
					|ВЫБРАТЬ
	                |	тчЗапросыОплаты.Ссылка.Дата КАК Период,
	                |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	                |	ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.ГруппыДоставкиЗапросОплаты) КАК типОбмена,
	                |	тчЗапросыОплаты.ГруппаДоставки.ОтправлениеТранзита КАК Партия,
	                |	тчЗапросыОплаты.НомерСтроки КАК СтрокаВПартии,
	                |	тчЗапросыОплаты.ГруппаДоставки.ШК КАК Мегаордер,
	                |	тчЗапросыОплаты.СообщениеОшибки КАК СообщениеОшибки,
	                |	1 КАК КоличествоНеИсправленных
	                |ИЗ
	                |	Документ.ЗапросыГруппДоставки.ЗапросыОплаты КАК тчЗапросыОплаты
	                |ГДЕ
	                |	тчЗапросыОплаты.Ссылка = &Ссылка
	                |	И НЕ тчЗапросыОплаты.Успех
	                |
	                | Объединить все
	                |
					|ВЫБРАТЬ
	                |	тчЗапросыОплаты.Ссылка.Дата КАК Период,
	                |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	                |	ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.ГруппыДоставкиЗапросОтсрочки) КАК типОбмена,
	                |	тчЗапросыОплаты.ГруппаДоставки.ОтправлениеТранзита КАК Партия,
	                |	тчЗапросыОплаты.НомерСтроки КАК СтрокаВПартии,
	                |	тчЗапросыОплаты.ГруппаДоставки.ШК КАК Мегаордер,
	                |	тчЗапросыОплаты.СообщениеОшибки КАК СообщениеОшибки,
	                |	1 КАК КоличествоНеИсправленных
	                |ИЗ
	                |	Документ.ЗапросыГруппДоставки.ЗапросыОтсрочки КАК тчЗапросыОплаты
	                |ГДЕ
	                |	тчЗапросыОплаты.Ссылка = &Ссылка
	                |	И НЕ тчЗапросыОплаты.Успех
	                |

					|";
	
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции



Функция Получить_ТекстЗапроса_ЗапросыГруппыДоставки(Запрос, ТекстыЗапроса, Регистры) 
	ИмяРегистра = "ЗапросыГруппыДоставки";
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЗапросыГруппДоставкиЗапросыОплаты.Ссылка.Дата КАК Период,
		|	ЗапросыГруппДоставкиЗапросыОплаты.ГруппаДоставки,
		|	Значение(ВидДвиженияНакопления.Приход) как ВидДвижения,
		|	Значение(Перечисление.СтатусыГруппыДоставки.waitForPayment) как Запрос,
		|	1 Как НеЗавершен,
		|	ЗапросыГруппДоставкиЗапросыОплаты.СообщениеОшибки Как Сообщение
		|ИЗ
		|	Документ.ЗапросыГруппДоставки.ЗапросыОплаты КАК ЗапросыГруппДоставкиЗапросыОплаты
		|ГДЕ
		|	ЗапросыГруппДоставкиЗапросыОплаты.Ссылка = &Ссылка
		|
		| Объединить все
		|
		|ВЫБРАТЬ
		|	ЗапросыГруппДоставкиЗапросыОплаты.Ссылка.Дата КАК Период,
		|	ЗапросыГруппДоставкиЗапросыОплаты.ГруппаДоставки,
		|	Значение(ВидДвиженияНакопления.Приход) как ВидДвижения,
		|	Значение(Перечисление.СтатусыГруппыДоставки.waitForDelay) как Запрос,
		|	1 Как НеЗавершен,
		|	ЗапросыГруппДоставкиЗапросыОплаты.СообщениеОшибки Как Сообщение
		|ИЗ
		|	Документ.ЗапросыГруппДоставки.ЗапросыОтсрочки КАК ЗапросыГруппДоставкиЗапросыОплаты
		|ГДЕ
		|	ЗапросыГруппДоставкиЗапросыОплаты.Ссылка = &Ссылка
		|
		|";
	

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти


Функция ТаблицаУдаления() Экспорт
	таблица = Новый ТаблицаЗначений;
	метаданныеТаблицы = Метаданные.Документы.ЗапросыГруппДоставки.ТабличныеЧасти.ЗапросыУдаления;
	Для каждого элем из метаданныеТаблицы.Реквизиты Цикл
		таблица.Колонки.Добавить(элем.имя,элем.Тип);
	КонецЦикла;
	Возврат таблица;	
КонецФункции	

Функция ПолноеИмяОбъекта()
	Возврат "Документ.ЗапросыГруппДоставки";
КонецФункции

#Область ШтрихКоды

&НаКлиенте
Процедура 	ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// ПодключаемоеОборудование                
	Если ИмяСобытия = "ScanData" Тогда
		Если Источник = "ПодключаемоеОборудование"   и не (АктивноеОкно()=неопределено или АктивноеОкно().Основное) и АктивноеОкно().Содержимое[0]=ЭтаФорма Тогда
			ШК = СтоСП_Клиент.ПолучитьШКизПараметров(Параметр);
			ОбработатьШКнаКлиенте(ШК);
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
КонецПроцедуры

&НаКлиенте
Процедура 	ОбработатьШКнаКлиенте(ШК)
	ДанныеШК    = СП_Штрихкоды.ПолучитьДанныеПоШК(ШК);

	Если Строка(ДанныеШК.Тип) 	= "Номенклатура (61)" Тогда //Номенклатура
		Если ДобавитьТовар(ДанныеШК.Номенклатура) Тогда
			#Если не ВебКлиент Тогда
			Сигнал();
			#КонецЕсли
		КонецЕсли;		
	Иначеесли Строка(ДанныеШК.Тип) = "Сотрудник (55)" 			Тогда	
		Если СП_РаботаСДокументами_Клиент.ЗаписатьДокумент(этотОбъект,,ДанныеШК.Сотрудник) Тогда
			Закрыть();
		КонецЕсли;		
	КонецЕсли;


КонецПроцедуры

Функция 	ДобавитьТовар(Номенклатура)
	строки_Товара = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура", Номенклатура));
	Если строки_Товара.Количество() = 0 Тогда
		текущийТовар = Объект.Товары.Добавить();
		текущийТовар.Номенклатура 	= Номенклатура;
		текущийТовар.Количество		= 1; 				
	Иначе
		строки_Товара[0].Количество = строки_Товара[0].Количество + 1;
	КонецЕсли;
	Возврат истина;
КонецФункции	

#КонецОбласти

#Область СобытияФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Сканер штрихкода
   СтоСП_Клиент.ПодключитьСканерШК(УникальныйИдентификатор);
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	1
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
КонецПроцедуры
	
#КонецОбласти


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткамиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладахОстатки.МестоХранения КАК МестоХранения,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(&МоментВермени, ) КАК ТоварыНаСкладахОстатки";
	
	Запрос.УстановитьПараметр("МоментВермени", ?(ЗначениеЗаполнено(Объект.Ссылка), объект.Ссылка.МоментВремени(), ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		новаяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(новаяСтрока,Выборка);
	КонецЦикла;
	


КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОстатками(Команда)
	ЗаполнитьОстаткамиНаСервере();
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


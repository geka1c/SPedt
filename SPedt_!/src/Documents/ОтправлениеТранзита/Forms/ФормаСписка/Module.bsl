#Область ВыдачаТранзита

&НаКлиенте
Процедура СформироватьВыдачуТранзита(Команда)
	МассДляОтправления=Элементы.Список.ВыделенныеСтроки;
	
	Фрм=ПолучитьФорму("Документ.ВыдачаТранзита.Форма.ФормаДокумента",,ЭтаФорма);
	обВыдачаТранзитаСформы=фрм.Объект;	
	СформироватьВыдачуТранзитаНаСервере(обВыдачаТранзитаСформы,МассДляОтправления);
	КопироватьДанныеФормы(обВыдачаТранзитаСформы,фрм.объект);
	фрм.Открыть();
КонецПроцедуры

&НаСервере
Процедура СформироватьВыдачуТранзитаНаСервере(обВыдачаТранзитаСформы,МассДляОтправления)
	тз=Новый ТаблицаЗначений;
	тз.Колонки.Добавить("ГД",				новый ОписаниеТипов("СправочникСсылка.Коробки"));
	тз.Колонки.Добавить("ТочкаНазначения",	новый ОписаниеТипов("СправочникСсылка.ТочкиРаздачи"));
	//тз.Колонки.Добавить("ВидРПО",			новый ОписаниеТипов("ПеречислениеСсылка.ВидРПО"));
	//тз.Колонки.Добавить("КатегорияРПО",		новый ОписаниеТипов("ПеречислениеСсылка.КатегорияРПО"));
	
	Для каждого элем из МассДляОтправления Цикл
		Если не ЗначениеЗаполнено(элем.Коробка) Тогда Продолжить; КонецЕсли;
		стрТЗ=тз.Добавить();
		стрТЗ.ГД				= элем.Коробка;
		стрТЗ.ТочкаНазначения	= элем.ТочкаНазначения;
		//стрТЗ.ВидРПО			= элем.ВидРПО;
		//стрТЗ.КатегорияРПО 		= элем.КатегорияРПО;
	КонецЦикла;
	//тзТочки=тз.Скопировать(,"ТочкаНазначения,ВидРПО,КатегорияРПО");
	//тзТочки.Свернуть("ТочкаНазначения,ВидРПО,КатегорияРПО");
	
	тзТочки=тз.Скопировать(,"ТочкаНазначения");
	тзТочки.Свернуть("ТочкаНазначения");
	
	Для каждого стр из тзТочки Цикл
		//массСтрок=тз.НайтиСтроки(новый Структура("ТочкаНазначения,ВидРПО,КатегорияРПО",стр.ТочкаНазначения,стр.ВидРПО,стр.КатегорияРПО));
		массСтрок=тз.НайтиСтроки(новый Структура("ТочкаНазначения",стр.ТочкаНазначения));
		СписокЗаказов=Новый СписокЗначений;
		Для каждого стр из массСтрок Цикл
			СписокЗаказов.Добавить(стр.ГД);
		КонецЦикла;	
		СписокЗаказов.ЗагрузитьЗначения(массСтрок);
		обВыдачаТранзита=ДанныеФормыВЗначение(обВыдачаТранзитаСформы,Тип("ДокументОбъект.ВыдачаТранзита"));
		обВыдачаТранзита.Дата=ТекущаяДата();
		//обВыдачаТранзита.Комментарий= "в="+стр.ВидРПО+", к="+стр.КатегорияРПО;
		обВыдачаТранзита.ЗаполнитьПоСпискуКоробок(СписокЗаказов);
		обВыдачаТранзита.ВидОперации=Перечисления.ВидыОперацийВыдачаТранзита.НаОднуТочку;
		обВыдачаТранзита.ТочкаТранзита=стр.ТочкаНазначения;
		обВыдачаТранзита.ТочкаНазначения=стр.ТочкаНазначения;
		ЗначениеВДанныеФормы(обВыдачаТранзита,обВыдачаТранзитаСформы);
	КонецЦикла;

КонецПроцедуры
#КонецОбласти



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры


&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
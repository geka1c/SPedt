#Область Заполнение
&НаСервере
Процедура ЗаполнитьПоРегиструНаСервере()
	док = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.УстановкаТарифов"));
	док.ЗаполнитьПоРегистру();
	ЗначениеВДанныеФормы(Док,Объект);
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРегистру(Команда)
	ЗаполнитьПоРегиструНаСервере();
КонецПроцедуры



&НаСервере
Процедура ЗаполнитьПоСправочникуНаСервере()
	док = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.УстановкаТарифов"));
	док.ЗаполнитьПоСправочнику();
	ЗначениеВДанныеФормы(Док,Объект);
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСправочнику(Команда)
	ЗаполнитьПоСправочникуНаСервере();
КонецПроцедуры

#КонецОбласти


&НаСервере
Процедура ВыгрузитьТариыфыНаСерверНаСервере()
	СтоСПОбмен_Тарифы.ВыгрузитьТарифыНаСервер(Объект);
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьТариыфыНаСервер(Команда)
	//ЗаполнитьПоСправочникуНаСервере();	
	ЗаписатьДокумент();
	ВыгрузитьТариыфыНаСерверНаСервере();
КонецПроцедуры

&НаСервере
Процедура ГруппаСтраницыПриСменеСтраницыНаСервере()
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница	= Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаПротокол Тогда
		парамДок				= Протокол.Параметры.Элементы.Найти("Документ");
		парамДок.Значение		= Объект.Ссылка;
		парамДок.Использование	= Истина;
	Конецесли;	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ГруппаСтраницыПриСменеСтраницыНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ЗаписатьДокумент()
	Если не ЗначениеЗаполнено(Объект.Ссылка) или Модифицированность Тогда 
		СП_РаботаСДокументами_Клиент.ЗаписатьДокумент(ЭтаФорма);	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция  ПросмотрXMLНаСервере()
		
	об=ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.УстановкаТарифов"));
	Возврат СтоСПОбмен_Запрос.ВыгрузитьТарифы_tariffs_ПоОбъекту(об);
КонецФункции



&НаКлиенте
Процедура ПросмотрXML(Команда)
	Если Модифицированность Тогда
		Записать(новый Структура("РежимЗаписи",РежимЗаписиДокумента.Запись));
	КонецЕсли;
	хмл_incomes=ПросмотрXMLНаСервере();
	СтоСП_Клиент.Показать_XML(хмл_incomes);
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрПолученногоXML(Команда)
	хмл_incomes = Элементы.Протокол.ТекущиеДанные.ПолученныеДанные;
	СтоСП_Клиент.Показать_XML(хмл_incomes);
КонецПроцедуры


&НаСервере
Процедура ПеренумероватьГабаритыНаСервере()
	об = ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.УстановкаТарифов"));
	об.ПеренумероватьГабариты();
	ЗначениеВДанныеФормы(об,Объект);
КонецПроцедуры


&НаКлиенте
Процедура ПеренумероватьГабариты(Команда)
	ПеренумероватьГабаритыНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура РазрешитьРедактирование(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаОжиданиеВводаШтрихкода",,ЭтотОбъект,,,,Новый ОписаниеОповещения("ВвестиШтрихКодАдминистратора_Завершение", ЭтотОбъект),РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры


&НаКлиенте
Процедура ВвестиШтрихКодАдминистратора_Завершение(ШК, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(ШК) =  Тип("Структура") и
		 ШК.Свойство("Администратор")	и
		 ШК.Администратор         			Тогда
		ТолькоПросмотр 									= Ложь;

	 КонецЕсли;	 
КонецПроцедуры	


&НаКлиенте
Процедура ТарифыГабаритПриИзменении(Элемент)
	Если Элементы.Тарифы.ТекущиеДанные <> Неопределено Тогда
		Элем 		= Элементы.Тарифы.ТекущиеДанные;
		Элементы.Тарифы.ТекущиеДанные.КодОтправлен = ПолучиттьКодОтправили(Элем.Габарит);
	КонецЕсли;	
КонецПроцедуры

Функция  ПолучиттьКодОтправили(Габарит)
	Позиция = СтрНайти(Габарит.Код,"-");
	Если Позиция = 0   Тогда
		КодОтправили = Число(Габарит.Код);
	Иначе	
		КодОтправили = Число(Прав(Габарит.Код,СтрДлина(Габарит.Код)-Позиция));
	КонецЕсли;
	Возврат КодОтправили;
КонецФункции


&НаСервере
Процедура ПодсветкаСтрок()

	
	
	ЭлементУсловногоОформления 		= УсловноеОформление.Элементы.Добавить();
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("Тарифы");
	ЭлементОтбора					= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Объект.Тарифы.НовыйТариф");
	ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение 	= Истина;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноЗолотистый);	
	
	//ПолеОформления 					= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	//ПолеОформления.Поле 			= Новый ПолеКомпоновкиДанных("Объект.ТрекНомера.ОбъявленнаяСтоимость");
	//ПолеОформления.Использование 	= Истина;
	
	
КонецПроцедуры 


#Область ДобавлениеИзменениеГабарита

&НаКлиенте
Процедура ДобавитГабарит(Команда)
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыборГабаритаЗавершение",ЭтотОбъект);
	ОткрытьФорму("Справочник.Габариты.Форма.ФормаВыбораДляУстановки",,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ВыборГабаритаЗавершение(Результат, ДополнительныеПараметрв) Экспорт

	
	НоваяСтрока = Объект.Тарифы.Добавить();
	НоваяСтрока.Габарит = Результат;
	Если ЗначениеЗаполнено(Результат) Тогда
		НоваяСтрока.КодОтправлен 	= ПолучиттьКодОтправили(Результат);
	КонецЕсли;
	НоваяСтрока.НовыйТариф = Истина;
	Элементы.Тарифы.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
КонецПроцедуры	

&НаКлиенте
Процедура ТарифыГабаритНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("РедактированиеГабаритаЗавершение",ЭтотОбъект);
	ОткрытьФорму("Справочник.Габариты.Форма.ФормаВыбораДляУстановки",,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);;
КонецПроцедуры


&НаКлиенте
Процедура РедактированиеГабаритаЗавершение(Результат, ДополнительныеПараметрв) Экспорт
	Если Элементы.Тарифы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Элементы.Тарифы.ТекущиеДанные.НовыйТариф Тогда
		Элементы.Тарифы.ТекущиеДанные.Габарит 		= Результат;	
		Если ЗначениеЗаполнено(Результат) Тогда
			Элементы.Тарифы.ТекущиеДанные.КодОтправлен 	= ПолучиттьКодОтправили(Результат);
		КонецЕсли;			
	Иначе
		ТекстСообщения = "Нельзя  менять название габарита";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура УдалитьГабарит(Команда)
	Если Элементы.Тарифы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Элементы.Тарифы.ТекущиеДанные.НовыйТариф Тогда
		Объект.Тарифы.Удалить(Элементы.Тарифы.ТекущиеДанные);
	Иначе
		ТекстСообщения = "Нельзя  удалять габарит.";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры


#КонецОбласти

#Область СобытмияФормы

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Модифицированность Тогда
		ВыгрузитьТариыфыНаСерверНаСервере();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	СП_РаботаСДокументами.ПриСозданииНаСервере(ЭтотОбъект);	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьПоРегиструНаСервере();
	КонецЕсли;	
	
	ПодсветкаСтрок();
	ТолькоПросмотр = Объект.Проведен;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры




&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТЗ = Объект.Тарифы.Выгрузить(,"Габарит");
	ТЗ.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число"));
	ТЗ.ЗаполнитьЗначения(1,"Количество");
	ТЗ.Свернуть("Габарит", "Количество");
	ТЗ.Сортировать("Количество Убыв");
	Для каждого элем из ТЗ Цикл
		Если Элем.Количество>1 Тогда
			ТектсСообщения = "Габарит "+Элем.Габарит+" внесен больше одного раза. Необходимо оставить одну строку для каждого габарита.";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТектсСообщения);
			Отказ = Истина;
		ИначеЕсли Элем.Количество=1>1 Тогда	
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры



#КонецОбласти



#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	ТекстыЗапроса = Новый СписокЗначений;

	Получить_ТекстЗапроса_Обмен100СПрн_Ошибки (Запрос, ТекстыЗапроса, Регистры);

	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.УстановитьПараметр("Период",                        ДокументСсылка.Дата );
	Запрос.УстановитьПараметр("Номер",                         ДокументСсылка.Номер);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",       ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяОбъекта()));
	Запрос.УстановитьПараметр("ПометкаУдаления",               ДокументСсылка.ПометкаУдаления);
	Запрос.УстановитьПараметр("Проведен",                      ДокументСсылка.Проведен); 
	Запрос.УстановитьПараметр("гпНеПринимать",                 Константы.гпНеПринимать.Получить());
	Запрос.УстановитьПараметр("СвойПунктВыдачи",               Константы.СвояТочка.Получить()); 
	Запрос.УстановитьПараметр("ВозможностьИспользоватьТранзит",Константы.ВозможностьПриниматьНаТранзит.Получить());
	Запрос.УстановитьПараметр("Курьер100сп",				   Константы.ПунктВыдачиКурьерскойДоставки.Получить());
	Запрос.УстановитьПараметр("ИгнорироватьОшибкуИзмененияПунктаНазначения",				   Константы.ИгнорироватьОшибкуИзмененияПунктаНазначения.Получить());
	
КонецПроцедуры

#КонецОбласти


Функция Получить_ТекстЗапроса_Обмен100СПрн_Ошибки (Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "Обмен100СПрн_Ошибки";
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 

	
	ТекстЗапроса =  "
					|
					|ВЫБРАТЬ
	                |	СинхронизацияСправочников.Ссылка.Дата КАК Период,
	                |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	                |	ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.ЗагрузкаСправочников) КАК типОбмена,
	                |	СинхронизацияСправочников.Ссылка КАК Партия,
	                |	0 КАК СтрокаВПартии,
	                |	Значение(Справочник.Мегаордера.ПустаяСсылка) КАК Мегаордер,
	                |	""Ошибка разбора xml!"" КАК СообщениеОшибки,
	                |	1 КАК КоличествоНеИсправленных
	                |ИЗ
	                |	Документ.СинхронизацияСправочников  КАК СинхронизацияСправочников
	                |ГДЕ
	                |	СинхронизацияСправочников.Ссылка = &Ссылка
	                |	И  СинхронизацияСправочников.ОшибкаРазбораXML
	                |
	                |ОБЪЕДИНИТЬ ВСЕ
	                |
	                |ВЫБРАТЬ
	                |	ПараметрыЗагрузки.Ссылка.Дата,
	                |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	                |	ЗНАЧЕНИЕ(Перечисление.ТипыОбменов100сп.ЗагрузкаСправочников),
	                |	ПараметрыЗагрузки.Ссылка,
	                |	ПараметрыЗагрузки.НомерСтроки,
	                |	Значение(Справочник.Мегаордера.ПустаяСсылка),
	                |	ПараметрыЗагрузки.Наименование,
	                |	ПараметрыЗагрузки.Ошибок
	                |ИЗ
	                |	Документ.СинхронизацияСправочников.ПараметрыЗагрузки КАК ПараметрыЗагрузки
	                |ГДЕ
	                |	ПараметрыЗагрузки.Ссылка = &Ссылка
	                |	И ПараметрыЗагрузки.Ошибок>0";
	
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции


Функция ПолноеИмяОбъекта()
	Возврат "Документ.СинхронизацияСправочников";
КонецФункции

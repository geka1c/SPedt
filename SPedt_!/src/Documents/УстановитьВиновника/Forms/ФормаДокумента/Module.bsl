
&НаСервере
Процедура ЗАполнитьНеОтмевеннымиНаСервере()
	об = ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.УстановитьВиновника"));	// Вставить содержимое обработчика.
	об.ЗаполнитьНеОтмеченными();
	ЗначениеВДанныеФормы(об,Объект);
КонецПроцедуры

&НаКлиенте
Процедура ЗАполнитьНеОтмевенными(Команда)
	ЗАполнитьНеОтмевеннымиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОрганизатора(Команда)
	ОтметитьВиновника("Организатор",1);
КонецПроцедуры


Функция ОтметитьВиновника(Поле, Вариант)
	ДЛя каждого элем из Элементы.Заказы.ВыделенныеСтроки Цикл
		ТекущаяСтрока = Объект.Заказы[Элем];
		ТекущаяСтрока.Виновник =ТекущаяСтрока[Поле];
		ТекущаяСтрока.ВыбранВариант = Вариант; 
		
		ТекущаяСтрока.Стоимость= 10;
	КонецЦикла;
КонецФункции

&НаКлиенте
Процедура ВыбратьОтправителя(Команда)
	ОтметитьВиновника("Отправитель",2);
КонецПроцедуры

&НаКлиенте
Процедура ВЫбратьПоулчатея(Команда)
	ОтметитьВиновника("Получатель",3);
КонецПроцедуры


&НаСервере
Процедура ПодсветкаСтрок()

    ЭтаФорма.УсловноеОформление.Элементы.Очистить();
	ЭлементУсловногоОформления 	= УсловноеОформление.Элементы.Добавить();
	ОформляемоеПоле 			= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 		= Новый ПолеКомпоновкиДанных("ЗаказыОрганизатор");
	ЭлементОтбора 				= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Заказы.Выбранвариант");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = 1;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Желтый);	
	
	
    //ЭтаФорма.УсловноеОформление.Элементы.Очистить();
	ЭлементУсловногоОформления 	= УсловноеОформление.Элементы.Добавить();
	ОформляемоеПоле 			= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 		= Новый ПолеКомпоновкиДанных("ЗаказыОтправитель");
	ЭлементОтбора 				= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Заказы.Выбранвариант");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = 2;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Желтый);	
	
    //ЭтаФорма.УсловноеОформление.Элементы.Очистить();
	ЭлементУсловногоОформления 	= УсловноеОформление.Элементы.Добавить();
	ОформляемоеПоле 			= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 		= Новый ПолеКомпоновкиДанных("ЗаказыПолучатель");
	ЭлементОтбора 				= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Заказы.Выбранвариант");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = 3;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Желтый);	
	
	
	//ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	//ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	//ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Покупки");
	//ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Покупки.Потерян");
	//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ЭлементОтбора.ПравоеЗначение = Истина;
	//ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Коричневый);	
	//
	//Если не ЗначениеЗаполнено(Объект.КартаУчастника) Тогда

	//	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	//	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	//	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Покупки");
	//	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Покупки.КодЗаказа");
	//	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//	ЭлементОтбора.ПравоеЗначение =  Новый ПолеКомпоновкиДанных("Объект.ПоискЗаказа");
	//	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.КрасноФиолетовый);	
	//КонецЕсли;

	
КонецПроцедуры 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)    
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды		
	ПодсветкаСтрок();
КонецПроцедуры


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаСервере
Процедура ПокупкиГабаритПриИзмененииНаСервере()
	Объект.Отправлено = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПокупкиГабаритПриИзменении(Элемент)
	ПокупкиГабаритПриИзмененииНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ПосылкиГабаритПриИзменении(Элемент)
	Объект.Отправлено = Ложь;
	Элементы.Посылки.ТекущиеДанные.отправлено = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ДатыЗапретаИзменения

	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	

КонецПроцедуры




// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
 



&НаКлиенте
Процедура Отправить(Команда)
	Если Модифицированность Тогда
		Записать(новый Структура("РежимЗаписи",РежимЗаписиДокумента.Запись));
	КонецЕсли;	
	ОтправитьНаСервере();
	Для каждого пос из Объект.Посылки Цикл
		Если пос.Отправлено Тогда
			ОповеститьОбИзменении(пос.Посылка);
		Конецесли;
	КонецЦикла	
КонецПроцедуры

&НаСервере
Процедура ОтправитьНаСервере()
	об	=	ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.УстановитьВиновника"));
	об.ВыгрузитьНаСайт();
	ЗначениеВДанныеФормы(об,Объект);
КонецПроцедуры



#Область ОбменДанными

&НаСервере
Функция  ПросмотрXMLНаСервере()
	
	об=ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.УстановитьВиновника"));
	Возврат СтоСПОбмен_Запрос.ВыгрузкаОшибкиПоступлений_incomeError(об);
КонецФункции

&НаКлиенте
Процедура ПросмотрXML(Команда)
	Если Модифицированность Тогда
		Записать(новый Структура("РежимЗаписи",РежимЗаписиДокумента.Запись));
	КонецЕсли;
	хмл_incomes=ПросмотрXMLНаСервере();
	СтоСП_Клиент.Показать_XML(хмл_incomes);
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрПолученногоXML(Команда)
	хмл_incomes = Элементы.Протокол.ТекущиеДанные.ПолученныеДанные;
	СтоСП_Клиент.Показать_XML(хмл_incomes);
КонецПроцедуры


&НаСервере
Процедура ГруппаСтраницыПриСменеСтраницыНаСервере()
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница=Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаПротокол Тогда
		парамДок				= Протокол.Параметры.Элементы.Найти("Документ");
		парамДок.Значение		= Объект.Ссылка;
		парамДок.Использование	= Истина;
	Конецесли;	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ГруппаСтраницыПриСменеСтраницыНаСервере();
КонецПроцедуры




#КонецОбласти
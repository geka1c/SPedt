
Функция 	Выгрузить(Объект) Экспорт
	//Отражаем Ответ на выгрузку (Первая точка приема..)
	СтрокаПротокола						= новый Структура ("ДатаНачала, ДатаОкончания,Результат, ПолученныеДанные");
	СтрокаПротокола.ДатаНачала			= ТекущаяДата();
	
	хмл_отправили						= СкомпоноватьДляВыгрузки(Объект);      
	стр_Ответа 							= СтоСПОбмен_Выгрузка100сп.Выгрузить(хмл_отправили);
	
	СтрокаПротокола.ДатаОкончания		= ТекущаяДата();
	СтрокаПротокола.ПолученныеДанные	= стр_Ответа.Получили;
	
	Если не стр_Ответа.Свойство("Разбор") Тогда
		СтрокаПротокола.Результат	=	Ложь;
	Иначе	
		СтрокаПротокола.Результат 	= стр_Ответа.Разбор.авторизацияВыполнена;
		Объект.Отправлено			= СтрокаПротокола.Результат;
	КонецЕсли;
	СтоСПОбмен_Выгрузка100сп.СохранитьПротоколОбмена(СтрокаПротокола,Объект.Ссылка);
	Если не СтрокаПротокола.Результат Тогда Возврат Ложь; Конецесли;
	
	
	Если не стр_Ответа.Разбор.авторизацияВыполнена Тогда Возврат ложь; КонецЕсли;
	
	Статус	= Перечисления.СтатусОтпавкиНаСайт.Отправлен;
	тз		= Неопределено;
	Если стр_Ответа.Разбор.Свойство("returnsTransfers",тз) Тогда
		ОтразитьРезультатВыгрузки(тз, Объект);
	ИначеЕсли стр_Ответа.Разбор.Свойство("discards",тз) Тогда
		ОтразитьРезультатВыгрузки(тз, Объект);		
		
	КонецЕсли;	
	
	Возврат Истина;
КонецФункции

Функция		СкомпоноватьДляВыгрузки(Объект) Экспорт
		
	ЗаписьXML=новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку("UTF-8");
	ЗаписьXML.ЗаписатьНачалоЭлемента("distributors");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
	ЗаписьXML.ЗаписатьАтрибут("xmlns:xsd","http://www.w3.org/2001/XMLSchema");
	ЗаписьXML.ЗаписатьАтрибут("apiVersion","1");
	///////                               
	Если Объект.Списать Тогда
		ЗаписьXML.ЗаписатьНачалоЭлемента("discards");	
		хмл_income			= Документы[Объект.метаданные().Имя].ПолучитьТэг_discard(Объект.Ссылка);
		ЗаписьXML.ЗаписатьБезОбработки(хмл_income);
		ЗаписьXML.ЗаписатьКонецЭлемента();           //returnsTransfers  
	Иначе	
		ЗаписьXML.ЗаписатьНачалоЭлемента("returnsTransfers");	
		хмл_income			= Документы[Объект.метаданные().Имя].ПолучитьТэг_returnsTransfer(Объект.Ссылка);
		ЗаписьXML.ЗаписатьБезОбработки(хмл_income);
		ЗаписьXML.ЗаписатьКонецЭлемента();           //returnsTransfers  
	КонецЕсли;
	//////
	ЗаписьXML.ЗаписатьКонецЭлемента();           //distributors
	Возврат ЗаписьXML.Закрыть();
КонецФункции	
	
Процедура 	ОтразитьРезультатВыгрузки(тзПараметр, Объект) 
	Запрос		= новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ТЗ.arrivalNumber 				КАК arrivalNumber,
	|	ТЗ.message 						КАК message,
	|	ТЗ.packageId 					КАК packageId,
	|	ТЗ.orderType 					КАК orderType,
	|	ТЗ.result 						КАК result,
	|	ТЗ.date 						КАК date
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументПосылки.Покупка 		КАК Посылка,
	|	ДокументПосылки.НомерСтроки 	КАК НомерСтроки
	|ПОМЕСТИТЬ Посылки
	|ИЗ
	|	Документ."+Объект.метаданные().Имя+".Покупки 		КАК ДокументПосылки
	|ГДЕ
	|	ДокументПосылки.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.orderType 					КАК orderType,
	|	ВТ.message 						КАК message,
	|	ВТ.packageId 					КАК packageId,
	|	ВТ.result 						КАК result,
	|	ВТ.date 						КАК date,
	|	Посылки.Посылка 				КАК Посылка
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Посылки КАК Посылки
	|		ПО ВТ.packageId = Посылки.Посылка.Код";
	Запрос.Параметры.Вставить("ТЗ",		тзПараметр);
	Запрос.Параметры.Вставить("Ссылка",	Объект.Ссылка);
	Результат	= Запрос.Выполнить();
	ТЗРезультат	= Результат.Выгрузить();
	
	Если ТЗРезультат <> неопределено Тогда  
		Для каждого стр из Объект.Покупки Цикл
			мас_НайденоВОтвете	= ТЗРезультат.НайтиСтроки(Новый Структура("Посылка",стр.Покупка));
			
			Если мас_НайденоВОтвете.Количество()>0 тогда
				стр_ответа	= мас_НайденоВОтвете[0];
				Если 	стр_ответа.result	= "ok" или 
						стр_ответа.result	= "ap" 		Тогда
					стр.Отправлено	= Истина;
				КонецЕсли;	
				стр.СообщениеОшибки	=	стр_ответа.message;
			Иначе	
				стр.СообщениеОшибки	=	"Не найдено в ответе";
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
		
		
КонецПроцедуры

	



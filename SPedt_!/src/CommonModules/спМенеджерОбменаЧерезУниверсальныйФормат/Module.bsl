// Конвертация СПотправка от 17.10.2016 17:50:23
#Область ПроцедурыКонвертации
Процедура ПередКонвертацией(КомпонентыОбмена) Экспорт
	
КонецПроцедуры

Процедура ПослеКонвертации(КомпонентыОбмена) Экспорт
	
КонецПроцедуры

Процедура ПередОтложеннымЗаполнением(КомпонентыОбмена) Экспорт
	
КонецПроцедуры

#КонецОбласти
#Область ПОД
// Заполняет таблицу правил обработки данных.
//
// Параметры:
//  НаправлениеОбмена - строка ("Отправка" либо "Получение").
//  ПравилаОбработкиДанных - таблица значений, в которую добавляются правила. 
Процедура ЗаполнитьПравилаОбработкиДанных(НаправлениеОбмена, ПравилаОбработкиДанных) Экспорт
	Если НаправлениеОбмена = "Отправка" Тогда
	Если ПравилаОбработкиДанных.Колонки.Найти("ОчисткаДанных") = Неопределено Тогда
	    ПравилаОбработкиДанных.Колонки.Добавить("ОчисткаДанных");
	КонецЕсли;
		ДобавитьПОД_Документ_ЗаявкаВТранспортнуюКомпанию_Отправка(ПравилаОбработкиДанных);
		ДобавитьПОД_Документ_СчетКонтрагента_Отправка(ПравилаОбработкиДанных);
		ДобавитьПОД_Справочник_Контрагенты_Отправка(ПравилаОбработкиДанных);
		ДобавитьПОД_Справочник_Коробки_Отправка(ПравилаОбработкиДанных);
		ДобавитьПОД_Справочник_Организаторы_Отправка(ПравилаОбработкиДанных);
		ДобавитьПОД_Справочник_ТочкиРаздачи_Отправка(ПравилаОбработкиДанных);
		ДобавитьПОД_Справочник_Участники_Отправка(ПравилаОбработкиДанных);
	ИначеЕсли НаправлениеОбмена = "Получение" Тогда
		ДобавитьПОД_Документ_ЗаявкаВТранспортнуюКомпанию_Получение(ПравилаОбработкиДанных);
		ДобавитьПОД_Документ_СчетКонтрагента_Получение(ПравилаОбработкиДанных);
		ДобавитьПОД_Справочник_Контрагенты_Получение(ПравилаОбработкиДанных);
		ДобавитьПОД_Справочник_Коробки_Получение(ПравилаОбработкиДанных);
		ДобавитьПОД_Справочник_Организаторы_Получение(ПравилаОбработкиДанных);
		ДобавитьПОД_Справочник_ТочкиРаздачи_Получение(ПравилаОбработкиДанных);
		ДобавитьПОД_Справочник_Участники_Получение(ПравилаОбработкиДанных);
	КонецЕсли;
КонецПроцедуры

#Область Отправка
#Область Документ_ЗаявкаВТранспортнуюКомпанию_Отправка
Процедура ДобавитьПОД_Документ_ЗаявкаВТранспортнуюКомпанию_Отправка(ПравилаОбработкиДанных)
	ПравилоОбработки = ПравилаОбработкиДанных.Добавить();
	ПравилоОбработки.Имя = "Документ_ЗаявкаВТранспортнуюКомпанию_Отправка";
	ПравилоОбработки.ОбъектВыборкиМетаданные = Метаданные.Документы.ЗаявкаВТранспортнуюКомпанию;
	ПравилоОбработки.ОчисткаДанных = Ложь;
	ПравилоОбработки.ИспользуемыеПКО.Добавить("Документ_ЗаявкаВТранспортнуюКомпанию_Отправка");
КонецПроцедуры
#КонецОбласти
#Область Документ_СчетКонтрагента_Отправка
Процедура ДобавитьПОД_Документ_СчетКонтрагента_Отправка(ПравилаОбработкиДанных)
	ПравилоОбработки = ПравилаОбработкиДанных.Добавить();
	ПравилоОбработки.Имя = "Документ_СчетКонтрагента_Отправка";
	ПравилоОбработки.ОбъектВыборкиМетаданные = Метаданные.Документы.СчетКонтрагента;
	ПравилоОбработки.ОчисткаДанных = Ложь;
	ПравилоОбработки.ИспользуемыеПКО.Добавить("Документ_СчетКонтрагента_Отправка");
КонецПроцедуры
#КонецОбласти
#Область Справочник_Контрагенты_Отправка
Процедура ДобавитьПОД_Справочник_Контрагенты_Отправка(ПравилаОбработкиДанных)
	ПравилоОбработки = ПравилаОбработкиДанных.Добавить();
	ПравилоОбработки.Имя = "Справочник_Контрагенты_Отправка";
	ПравилоОбработки.ОбъектВыборкиМетаданные = Метаданные.Справочники.Контрагенты;
	ПравилоОбработки.ОчисткаДанных = Ложь;
	ПравилоОбработки.ИспользуемыеПКО.Добавить("Справочник_Контрагенты_Отправка");
КонецПроцедуры
#КонецОбласти
#Область Справочник_Коробки_Отправка
Процедура ДобавитьПОД_Справочник_Коробки_Отправка(ПравилаОбработкиДанных)
	ПравилоОбработки = ПравилаОбработкиДанных.Добавить();
	ПравилоОбработки.Имя = "Справочник_Коробки_Отправка";
	ПравилоОбработки.ОбъектВыборкиМетаданные = Метаданные.Справочники.Коробки;
	ПравилоОбработки.ОчисткаДанных = Ложь;
	ПравилоОбработки.ИспользуемыеПКО.Добавить("Справочник_Коробки_Отправка");
КонецПроцедуры
#КонецОбласти
#Область Справочник_Организаторы_Отправка
Процедура ДобавитьПОД_Справочник_Организаторы_Отправка(ПравилаОбработкиДанных)
	ПравилоОбработки = ПравилаОбработкиДанных.Добавить();
	ПравилоОбработки.Имя = "Справочник_Организаторы_Отправка";
	ПравилоОбработки.ОбъектВыборкиМетаданные = Метаданные.Справочники.Организаторы;
	ПравилоОбработки.ОчисткаДанных = Ложь;
	ПравилоОбработки.ИспользуемыеПКО.Добавить("Справочник_Организаторы_ОтправкаПолучение");
КонецПроцедуры
#КонецОбласти
#Область Справочник_ТочкиРаздачи_Отправка
Процедура ДобавитьПОД_Справочник_ТочкиРаздачи_Отправка(ПравилаОбработкиДанных)
	ПравилоОбработки = ПравилаОбработкиДанных.Добавить();
	ПравилоОбработки.Имя = "Справочник_ТочкиРаздачи_Отправка";
	ПравилоОбработки.ОбъектВыборкиМетаданные = Метаданные.Справочники.ТочкиРаздачи;
	ПравилоОбработки.ОчисткаДанных = Ложь;
	ПравилоОбработки.ИспользуемыеПКО.Добавить("Справочник_ТочкиРаздачи_ОтправкаПолучение");
КонецПроцедуры
#КонецОбласти
#Область Справочник_Участники_Отправка
Процедура ДобавитьПОД_Справочник_Участники_Отправка(ПравилаОбработкиДанных)
	ПравилоОбработки = ПравилаОбработкиДанных.Добавить();
	ПравилоОбработки.Имя = "Справочник_Участники_Отправка";
	ПравилоОбработки.ОбъектВыборкиМетаданные = Метаданные.Справочники.Участники;
	ПравилоОбработки.ОчисткаДанных = Ложь;
	ПравилоОбработки.ИспользуемыеПКО.Добавить("Справочник_Участники_Отправка");
КонецПроцедуры
#КонецОбласти
#КонецОбласти
#Область Получение
#Область Документ_ЗаявкаВТранспортнуюКомпанию_Получение
Процедура ДобавитьПОД_Документ_ЗаявкаВТранспортнуюКомпанию_Получение(ПравилаОбработкиДанных)
	ПравилоОбработки = ПравилаОбработкиДанных.Добавить();
	ПравилоОбработки.Имя = "Документ_ЗаявкаВТранспортнуюКомпанию_Получение";
	ПравилоОбработки.ОбъектВыборкиФормат = "Документ.ЗаявкаВТранспортнуюКомпанию";
	ПравилоОбработки.ИспользуемыеПКО.Добавить("Документ_ЗаявкаВТранспортнуюКомпанию_Получение");
КонецПроцедуры
#КонецОбласти
#Область Документ_СчетКонтрагента_Получение
Процедура ДобавитьПОД_Документ_СчетКонтрагента_Получение(ПравилаОбработкиДанных)
	ПравилоОбработки = ПравилаОбработкиДанных.Добавить();
	ПравилоОбработки.Имя = "Документ_СчетКонтрагента_Получение";
	ПравилоОбработки.ОбъектВыборкиФормат = "Документ.СчетКонтрагента";
	ПравилоОбработки.ИспользуемыеПКО.Добавить("Документ_СчетКонтрагента_Получение");
КонецПроцедуры
#КонецОбласти
#Область Справочник_Контрагенты_Получение
Процедура ДобавитьПОД_Справочник_Контрагенты_Получение(ПравилаОбработкиДанных)
	ПравилоОбработки = ПравилаОбработкиДанных.Добавить();
	ПравилоОбработки.Имя = "Справочник_Контрагенты_Получение";
	ПравилоОбработки.ОбъектВыборкиФормат = "Справочник.Контрагенты";
	ПравилоОбработки.ИспользуемыеПКО.Добавить("Справочник_Контрагенты_Отправка");
КонецПроцедуры
#КонецОбласти
#Область Справочник_Коробки_Получение
Процедура ДобавитьПОД_Справочник_Коробки_Получение(ПравилаОбработкиДанных)
	ПравилоОбработки = ПравилаОбработкиДанных.Добавить();
	ПравилоОбработки.Имя = "Справочник_Коробки_Получение";
	ПравилоОбработки.ОбъектВыборкиФормат = "Справочник.Коробки";
	ПравилоОбработки.ИспользуемыеПКО.Добавить("Справочник_Коробки_Отправка");
КонецПроцедуры
#КонецОбласти
#Область Справочник_Организаторы_Получение
Процедура ДобавитьПОД_Справочник_Организаторы_Получение(ПравилаОбработкиДанных)
	ПравилоОбработки = ПравилаОбработкиДанных.Добавить();
	ПравилоОбработки.Имя = "Справочник_Организаторы_Получение";
	ПравилоОбработки.ОбъектВыборкиФормат = "Справочник.Организаторы";
	ПравилоОбработки.ИспользуемыеПКО.Добавить("Справочник_Организаторы_ОтправкаПолучение");
КонецПроцедуры
#КонецОбласти
#Область Справочник_ТочкиРаздачи_Получение
Процедура ДобавитьПОД_Справочник_ТочкиРаздачи_Получение(ПравилаОбработкиДанных)
	ПравилоОбработки = ПравилаОбработкиДанных.Добавить();
	ПравилоОбработки.Имя = "Справочник_ТочкиРаздачи_Получение";
	ПравилоОбработки.ОбъектВыборкиФормат = "Справочник.ТочкиРаздачи";
	ПравилоОбработки.ИспользуемыеПКО.Добавить("Справочник_ТочкиРаздачи_ОтправкаПолучение");
КонецПроцедуры
#КонецОбласти
#Область Справочник_Участники_Получение
Процедура ДобавитьПОД_Справочник_Участники_Получение(ПравилаОбработкиДанных)
	ПравилоОбработки = ПравилаОбработкиДанных.Добавить();
	ПравилоОбработки.Имя = "Справочник_Участники_Получение";
	ПравилоОбработки.ОбъектВыборкиФормат = "";
	ПравилоОбработки.ИспользуемыеПКО.Добавить("Справочник_Участники_Отправка");
КонецПроцедуры
#КонецОбласти
#КонецОбласти

#КонецОбласти
#Область ПКО
// Заполняет таблицу правил конвертации объектов.
//
// Параметры:
//  НаправлениеОбмена - строка ("Отправка" либо "Получение").
//  ПравилаКонвертации - таблица значений, в которую добавляются правила. 
Процедура ЗаполнитьПравилаКонвертацииОбъектов(НаправлениеОбмена, ПравилаКонвертации) Экспорт
	Если НаправлениеОбмена = "Отправка" Тогда
		ДобавитьПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Отправка(ПравилаКонвертации);
		ДобавитьПКО_Документ_СчетКонтрагента_Отправка(ПравилаКонвертации);
	ИначеЕсли НаправлениеОбмена = "Получение" Тогда
		ДобавитьПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Получение(ПравилаКонвертации);
		ДобавитьПКО_Документ_СчетКонтрагента_Получение(ПравилаКонвертации);
	КонецЕсли;
	ДобавитьПКО_Справочник_Контрагенты_Отправка(ПравилаКонвертации);
	ДобавитьПКО_Справочник_Коробки_Отправка(ПравилаКонвертации);
	ДобавитьПКО_Справочник_Организаторы_ОтправкаПолучение(ПравилаКонвертации);
	ДобавитьПКО_Справочник_ТочкиРаздачи_ОтправкаПолучение(ПравилаКонвертации);
	ДобавитьПКО_Справочник_Участники_Отправка(ПравилаКонвертации);
КонецПроцедуры

#Область Отправка
#Область Документ_ЗаявкаВТранспортнуюКомпанию_Отправка
Процедура ДобавитьПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Отправка(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО = "Документ_ЗаявкаВТранспортнуюКомпанию_Отправка";
	ПравилоКонвертации.ОбъектДанных = Метаданные.Документы.ЗаявкаВТранспортнуюКомпанию;
	ПравилоКонвертации.ОбъектФормата = "Документ.ЗаявкаВТранспортнуюКомпанию";
	ПравилоКонвертации.ПравилоДляГруппыСправочника = Ложь;
	ПравилоКонвертации.ПриОтправкеДанных = "ПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Отправка_ПриОтправкеДанных";
	ПравилоКонвертации.ПриКонвертацииДанныхXDTO = "ПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Отправка_ПриКонвертацииДанныхXDTO";
	ПравилоКонвертации.ВариантИдентификации = "ПоУникальномуИдентификатору";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Вес";
	НоваяСтрока.СвойствоФормата = "Вес";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Дата";
	НоваяСтрока.СвойствоФормата = "Дата";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ДатаЗаявки";
	НоваяСтрока.СвойствоФормата = "ДатаЗаявки";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Количество";
	НоваяСтрока.СвойствоФормата = "Количество";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "КоличествоМест";
	НоваяСтрока.СвойствоФормата = "КоличествоМест";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Номер";
	НоваяСтрока.СвойствоФормата = "НомерОтправителя";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "НомерЗаявки";
	НоваяСтрока.СвойствоФормата = "НомерЗаявки";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Объем";
	НоваяСтрока.СвойствоФормата = "Объем";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "СвояТочка";
	НоваяСтрока.СвойствоФормата = "СвояТочка";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_ТочкиРаздачи_ОтправкаПолучение";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ТочкаТранзита";
	НоваяСтрока.СвойствоФормата = "ТочкаТранзита";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_ТочкиРаздачи_ОтправкаПолучение";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ТранспортнаяКомпания";
	НоваяСтрока.СвойствоФормата = "ТранспортнаяКомпания";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_Контрагенты_Отправка";
	ПравилоКонвертации.СвойстваТабличныхЧастей.Вставить("Заказы", ОбменДаннымиXDTOСервер.ИнициализироватьТаблицуСвойствДляПравилаКонвертации());
	СвойстваТЧ = ПравилоКонвертации.СвойстваТабличныхЧастей.Заказы;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Груз";
	НоваяСтрока.СвойствоФормата = "Груз";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_Коробки_Отправка";

КонецПроцедуры

Процедура ПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	ДанныеXDTO.Вставить("Заказы",ДанныеИБ.Заказы.Выгрузить());
КонецПроцедуры

Процедура ПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Отправка_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	МассивСтрокЗаказы = Новый Массив;
	
	Если ДанныеXDTO.Свойство("Заказы") И ЗначениеЗаполнено(ДанныеXDTO.Заказы) Тогда
	      Для Каждого Строка Из ДанныеXDTO.Заказы Цикл
	      		СтруктураДанныхСтроки = Новый Структура;
	      		СтруктураДанныхСтроки.Вставить("Груз", Строка.Груз);
	      		МассивСтрокЗаказы.Добавить(СтруктураДанныхСтроки);
	      КонецЦикла;
	
	КонецЕсли;
	
	Если МассивСтрокЗаказы.Количество() > 0 Тогда
	      ПолученныеДанные.ДополнительныеСвойства.Вставить("Заказы", МассивСтрокЗаказы);
	КонецЕсли;
КонецПроцедуры
#КонецОбласти
#Область Документ_СчетКонтрагента_Отправка
Процедура ДобавитьПКО_Документ_СчетКонтрагента_Отправка(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО = "Документ_СчетКонтрагента_Отправка";
	ПравилоКонвертации.ОбъектДанных = Метаданные.Документы.СчетКонтрагента;
	ПравилоКонвертации.ОбъектФормата = "Документ.СчетКонтрагента";
	ПравилоКонвертации.ПравилоДляГруппыСправочника = Ложь;
	ПравилоКонвертации.ПриОтправкеДанных = "ПКО_Документ_СчетКонтрагента_Отправка_ПриОтправкеДанных";
	ПравилоКонвертации.ВариантИдентификации = "ПоУникальномуИдентификатору";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Вес";
	НоваяСтрока.СвойствоФормата = "Вес";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ВидОперации";
	НоваяСтрока.СвойствоФормата = "ВидОперации";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Перечисление_ВидыОперацийСчетКонтрагента_ОтпрПол";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Дата";
	НоваяСтрока.СвойствоФормата = "Дата";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ДатаОтправкиГруза";
	НоваяСтрока.СвойствоФормата = "ДатаОтправкиГруза";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Количество";
	НоваяСтрока.СвойствоФормата = "Количество";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Контрагент";
	НоваяСтрока.СвойствоФормата = "Контрагент";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_Контрагенты_Отправка";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Номер";
	НоваяСтрока.СвойствоФормата = "НомерОтправителя";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "НомерОтправкиГруза";
	НоваяСтрока.СвойствоФормата = "НомерОтправкиГруза";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Объем";
	НоваяСтрока.СвойствоФормата = "Объем";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ОриентировачнаяДатаДоставки";
	НоваяСтрока.СвойствоФормата = "ОриентировачнаяДатаДоставки";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ПримечаниеТК";
	НоваяСтрока.СвойствоФормата = "ПримечаниеТК";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Проведен";
	НоваяСтрока.СвойствоФормата = "AdditionalInfo";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "СвояТочка";
	НоваяСтрока.СвойствоФормата = "СвояТочка";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_ТочкиРаздачи_ОтправкаПолучение";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Сумма";
	НоваяСтрока.СвойствоФормата = "Сумма";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ТранзитнаяТочка";
	НоваяСтрока.СвойствоФормата = "ТранзитнаяТочка";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_ТочкиРаздачи_ОтправкаПолучение";
	ПравилоКонвертации.СвойстваТабличныхЧастей.Вставить("Заказы", ОбменДаннымиXDTOСервер.ИнициализироватьТаблицуСвойствДляПравилаКонвертации());
	СвойстваТЧ = ПравилоКонвертации.СвойстваТабличныхЧастей.Заказы;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Груз";
	НоваяСтрока.СвойствоФормата = "Груз";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_Коробки_Отправка";
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Заявка";
	НоваяСтрока.СвойствоФормата = "Заявка";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	НоваяСтрока.ПравилоКонвертацииСвойства = "Документ_ЗаявкаВТранспортнуюКомпанию_Отправка";
	
	ПравилоКонвертации.СвойстваТабличныхЧастей.Вставить("ЗаявкиВТК", ОбменДаннымиXDTOСервер.ИнициализироватьТаблицуСвойствДляПравилаКонвертации());
	СвойстваТЧ = ПравилоКонвертации.СвойстваТабличныхЧастей.ЗаявкиВТК;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Заявка";
	НоваяСтрока.СвойствоФормата = "Заявка";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	НоваяСтрока.ПравилоКонвертацииСвойства = "Документ_ЗаявкаВТранспортнуюКомпанию_Отправка";
	
	ПравилоКонвертации.СвойстваТабличныхЧастей.Вставить("Организаторы", ОбменДаннымиXDTOСервер.ИнициализироватьТаблицуСвойствДляПравилаКонвертации());
	СвойстваТЧ = ПравилоКонвертации.СвойстваТабличныхЧастей.Организаторы;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Вес";
	НоваяСтрока.СвойствоФормата = "Вес";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ВесПроцент";
	НоваяСтрока.СвойствоФормата = "ВесПроцент";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Количество";
	НоваяСтрока.СвойствоФормата = "Количество";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "КоличествоПроцент";
	НоваяСтрока.СвойствоФормата = "КоличествоПроцент";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Объем";
	НоваяСтрока.СвойствоФормата = "Объем";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ОбъемПроцент";
	НоваяСтрока.СвойствоФормата = "ОбъемПроцент";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Организатор";
	НоваяСтрока.СвойствоФормата = "Организатор";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_Участники_Отправка";
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Сумма";
	НоваяСтрока.СвойствоФормата = "Сумма";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;

КонецПроцедуры

Процедура ПКО_Документ_СчетКонтрагента_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	ДанныеXDTO.Вставить("Заказы",ДанныеИБ.Заказы.Выгрузить());
	ДанныеXDTO.Вставить("ЗаявкиВТК",ДанныеИБ.ЗаявкиВТК.Выгрузить());
	ДанныеXDTO.Вставить("Организаторы",ДанныеИБ.Организаторы.Выгрузить());
КонецПроцедуры
#КонецОбласти
#КонецОбласти
#Область Получение
#Область Документ_ЗаявкаВТранспортнуюКомпанию_Получение
Процедура ДобавитьПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Получение(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО = "Документ_ЗаявкаВТранспортнуюКомпанию_Получение";
	ПравилоКонвертации.ОбъектДанных = Метаданные.Документы.ЗаявкаВТранспортнуюКомпанию;
	ПравилоКонвертации.ОбъектФормата = "Документ.ЗаявкаВТранспортнуюКомпанию";
	ПравилоКонвертации.ПравилоДляГруппыСправочника = Ложь;
	ПравилоКонвертации.ПриКонвертацииДанныхXDTO = "ПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Получение_ПриКонвертацииДанныхXDTO";
	ПравилоКонвертации.ВариантИдентификации = "ПоУникальномуИдентификатору";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Вес";
	НоваяСтрока.СвойствоФормата = "Вес";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Дата";
	НоваяСтрока.СвойствоФормата = "Дата";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ДатаЗаявки";
	НоваяСтрока.СвойствоФормата = "ДатаЗаявки";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Количество";
	НоваяСтрока.СвойствоФормата = "Количество";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "КоличествоМест";
	НоваяСтрока.СвойствоФормата = "КоличествоМест";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "НомерЗаявки";
	НоваяСтрока.СвойствоФормата = "НомерЗаявки";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "НомерОтправителя";
	НоваяСтрока.СвойствоФормата = "НомерОтправителя";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Объем";
	НоваяСтрока.СвойствоФормата = "Объем";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "СвояТочка";
	НоваяСтрока.СвойствоФормата = "СвояТочка";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_ТочкиРаздачи_ОтправкаПолучение";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ТочкаТранзита";
	НоваяСтрока.СвойствоФормата = "ТочкаТранзита";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_ТочкиРаздачи_ОтправкаПолучение";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ТранспортнаяКомпания";
	НоваяСтрока.СвойствоФормата = "ТранспортнаяКомпания";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_Контрагенты_Отправка";
	ПравилоКонвертации.СвойстваТабличныхЧастей.Вставить("Заказы", ОбменДаннымиXDTOСервер.ИнициализироватьТаблицуСвойствДляПравилаКонвертации());
	СвойстваТЧ = ПравилоКонвертации.СвойстваТабличныхЧастей.Заказы;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Груз";
	НоваяСтрока.СвойствоФормата = "Груз";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_Коробки_Отправка";

КонецПроцедуры

Процедура ПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	МассивСтрокЗаказы = Новый Массив;
	
	Если ДанныеXDTO.Свойство("Заказы") И ЗначениеЗаполнено(ДанныеXDTO.Заказы) Тогда
	      Для Каждого Строка Из ДанныеXDTO.Заказы Цикл
	      		СтруктураДанныхСтроки = Новый Структура;
	      		СтруктураДанныхСтроки.Вставить("Груз", Строка.Груз);
	      		МассивСтрокЗаказы.Добавить(СтруктураДанныхСтроки);
	      КонецЦикла;
	
	КонецЕсли;
	
	Если МассивСтрокЗаказы.Количество() > 0 Тогда
	      ПолученныеДанные.ДополнительныеСвойства.Вставить("Заказы", МассивСтрокЗаказы);
	КонецЕсли;
КонецПроцедуры
#КонецОбласти
#Область Документ_СчетКонтрагента_Получение
Процедура ДобавитьПКО_Документ_СчетКонтрагента_Получение(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО = "Документ_СчетКонтрагента_Получение";
	ПравилоКонвертации.ОбъектДанных = Метаданные.Документы.СчетКонтрагента;
	ПравилоКонвертации.ОбъектФормата = "Документ.СчетКонтрагента";
	ПравилоКонвертации.ПравилоДляГруппыСправочника = Ложь;
	ПравилоКонвертации.ПриКонвертацииДанныхXDTO = "ПКО_Документ_СчетКонтрагента_Получение_ПриКонвертацииДанныхXDTO";
	ПравилоКонвертации.ВариантИдентификации = "ПоУникальномуИдентификатору";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Вес";
	НоваяСтрока.СвойствоФормата = "Вес";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ВидОперации";
	НоваяСтрока.СвойствоФормата = "ВидОперации";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Перечисление_ВидыОперацийСчетКонтрагента_ОтпрПол";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Дата";
	НоваяСтрока.СвойствоФормата = "Дата";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ДатаОтправкиГруза";
	НоваяСтрока.СвойствоФормата = "ДатаОтправкиГруза";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Количество";
	НоваяСтрока.СвойствоФормата = "Количество";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Контрагент";
	НоваяСтрока.СвойствоФормата = "Контрагент";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_Контрагенты_Отправка";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "НомерОтправителя";
	НоваяСтрока.СвойствоФормата = "НомерОтправителя";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "НомерОтправкиГруза";
	НоваяСтрока.СвойствоФормата = "НомерОтправкиГруза";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Объем";
	НоваяСтрока.СвойствоФормата = "Объем";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ОриентировачнаяДатаДоставки";
	НоваяСтрока.СвойствоФормата = "ОриентировачнаяДатаДоставки";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ПримечаниеТК";
	НоваяСтрока.СвойствоФормата = "ПримечаниеТК";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Проведен";
	НоваяСтрока.СвойствоФормата = "AdditionalInfo";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "СвояТочка";
	НоваяСтрока.СвойствоФормата = "СвояТочка";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_ТочкиРаздачи_ОтправкаПолучение";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Сумма";
	НоваяСтрока.СвойствоФормата = "Сумма";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ТранзитнаяТочка";
	НоваяСтрока.СвойствоФормата = "ТранзитнаяТочка";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_ТочкиРаздачи_ОтправкаПолучение";
	ПравилоКонвертации.СвойстваТабличныхЧастей.Вставить("Заказы", ОбменДаннымиXDTOСервер.ИнициализироватьТаблицуСвойствДляПравилаКонвертации());
	СвойстваТЧ = ПравилоКонвертации.СвойстваТабличныхЧастей.Заказы;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Груз";
	НоваяСтрока.СвойствоФормата = "Груз";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_Коробки_Отправка";
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Заявка";
	НоваяСтрока.СвойствоФормата = "Заявка";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	НоваяСтрока.ПравилоКонвертацииСвойства = "Документ_ЗаявкаВТранспортнуюКомпанию_Получение";
	
	ПравилоКонвертации.СвойстваТабличныхЧастей.Вставить("ЗаявкиВТК", ОбменДаннымиXDTOСервер.ИнициализироватьТаблицуСвойствДляПравилаКонвертации());
	СвойстваТЧ = ПравилоКонвертации.СвойстваТабличныхЧастей.ЗаявкиВТК;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Заявка";
	НоваяСтрока.СвойствоФормата = "Заявка";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	НоваяСтрока.ПравилоКонвертацииСвойства = "Документ_ЗаявкаВТранспортнуюКомпанию_Получение";
	
	ПравилоКонвертации.СвойстваТабличныхЧастей.Вставить("Организаторы", ОбменДаннымиXDTOСервер.ИнициализироватьТаблицуСвойствДляПравилаКонвертации());
	СвойстваТЧ = ПравилоКонвертации.СвойстваТабличныхЧастей.Организаторы;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Вес";
	НоваяСтрока.СвойствоФормата = "Вес";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ВесПроцент";
	НоваяСтрока.СвойствоФормата = "ВесПроцент";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Количество";
	НоваяСтрока.СвойствоФормата = "Количество";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "КоличествоПроцент";
	НоваяСтрока.СвойствоФормата = "КоличествоПроцент";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Объем";
	НоваяСтрока.СвойствоФормата = "Объем";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ОбъемПроцент";
	НоваяСтрока.СвойствоФормата = "ОбъемПроцент";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Организатор";
	НоваяСтрока.СвойствоФормата = "Организатор";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_Участники_Отправка";
	
	НоваяСтрока = СвойстваТЧ.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Сумма";
	НоваяСтрока.СвойствоФормата = "Сумма";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;

КонецПроцедуры

Процедура ПКО_Документ_СчетКонтрагента_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	МассивСтрокЗаказы = Новый Массив;
	Если ДанныеXDTO.Свойство("Заказы") И ЗначениеЗаполнено(ДанныеXDTO.Заказы) Тогда
	      Для Каждого Строка Из ДанныеXDTO.Заказы Цикл
	      		СтруктураДанныхСтроки = Новый Структура;
	      		СтруктураДанныхСтроки.Вставить("Груз", Строка.Груз);
	      		СтруктураДанныхСтроки.Вставить("Заявка", Строка.Заявка);
	      		МассивСтрокЗаказы.Добавить(СтруктураДанныхСтроки);
	      КонецЦикла;
	КонецЕсли;
	Если МассивСтрокЗаказы.Количество() > 0 Тогда
	      ПолученныеДанные.ДополнительныеСвойства.Вставить("Заказы", МассивСтрокЗаказы);
	КонецЕсли;
	
	
	МассивСтрокЗаявкиВТК = Новый Массив;
	Если ДанныеXDTO.Свойство("ЗаявкиВТК") И ЗначениеЗаполнено(ДанныеXDTO.ЗаявкиВТК) Тогда
	      Для Каждого Строка Из ДанныеXDTO.ЗаявкиВТК Цикл
	      		СтруктураДанныхСтроки = Новый Структура;
	      		СтруктураДанныхСтроки.Вставить("Заявка", Строка.Заявка);
	      		МассивСтрокЗаявкиВТК.Добавить(СтруктураДанныхСтроки);
	      КонецЦикла;
	КонецЕсли;
	Если МассивСтрокЗаявкиВТК.Количество() > 0 Тогда
	      ПолученныеДанные.ДополнительныеСвойства.Вставить("ЗаявкиВТК", МассивСтрокЗаявкиВТК);
	КонецЕсли;
	 
	
	МассивСтрокОрганизаторы = Новый Массив;
	Если ДанныеXDTO.Свойство("Организаторы") И ЗначениеЗаполнено(ДанныеXDTO.Организаторы) Тогда
	      Для Каждого Строка Из ДанныеXDTO.Организаторы Цикл
	      		СтруктураДанныхСтроки = Новый Структура;
	      		СтруктураДанныхСтроки.Вставить("Организатор", Строка.Организатор);
	      		СтруктураДанныхСтроки.Вставить("Вес", Строка.Вес);
				СтруктураДанныхСтроки.Вставить("Количество", Строка.Количество);
				СтруктураДанныхСтроки.Вставить("Объем", Строка.Объем);
				СтруктураДанныхСтроки.Вставить("ВесПроцент", Строка.ВесПроцент);
				СтруктураДанныхСтроки.Вставить("ОбъемПроцент", Строка.ОбъемПроцент);
				СтруктураДанныхСтроки.Вставить("КоличествоПроцент", Строка.КоличествоПроцент);
				СтруктураДанныхСтроки.Вставить("Сумма", Строка.Сумма);
	
	      		МассивСтрокОрганизаторы.Добавить(СтруктураДанныхСтроки);
	      КонецЦикла;
	КонецЕсли;
	Если МассивСтрокЗаявкиВТК.Количество() > 0 Тогда
	      ПолученныеДанные.ДополнительныеСвойства.Вставить("Организаторы", МассивСтрокОрганизаторы);
	КонецЕсли;
КонецПроцедуры
#КонецОбласти
#КонецОбласти
#Область ОтправкаИПолучение
#Область Справочник_Контрагенты_Отправка
Процедура ДобавитьПКО_Справочник_Контрагенты_Отправка(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО = "Справочник_Контрагенты_Отправка";
	ПравилоКонвертации.ОбъектДанных = Метаданные.Справочники.Контрагенты;
	ПравилоКонвертации.ОбъектФормата = "Справочник.Контрагенты";
	ПравилоКонвертации.ПравилоДляГруппыСправочника = Ложь;
	ПравилоКонвертации.ВариантИдентификации = "ПоУникальномуИдентификатору";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Код";
	НоваяСтрока.СвойствоФормата = "КодВПрограмме";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Наименование";
	НоваяСтрока.СвойствоФормата = "Наименование";

КонецПроцедуры
#КонецОбласти
#Область Справочник_Коробки_Отправка
Процедура ДобавитьПКО_Справочник_Коробки_Отправка(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО = "Справочник_Коробки_Отправка";
	ПравилоКонвертации.ОбъектДанных = Метаданные.Справочники.Коробки;
	ПравилоКонвертации.ОбъектФормата = "Справочник.Коробки";
	ПравилоКонвертации.ПравилоДляГруппыСправочника = Ложь;
	ПравилоКонвертации.ПриКонвертацииДанныхXDTO = "ПКО_Справочник_Коробки_Отправка_ПриКонвертацииДанныхXDTO";
	ПравилоКонвертации.ВариантИдентификации = "ПоУникальномуИдентификатору";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Вес";
	НоваяСтрока.СвойствоФормата = "Вес";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Код";
	НоваяСтрока.СвойствоФормата = "КодВПрограмме";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Количество";
	НоваяСтрока.СвойствоФормата = "Количество";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Наименование";
	НоваяСтрока.СвойствоФормата = "Наименование";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Объем";
	НоваяСтрока.СвойствоФормата = "Объем";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Организатор";
	НоваяСтрока.СвойствоФормата = "Организатор";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_Организаторы_ОтправкаПолучение";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "ТочкаНазначения";
	НоваяСтрока.СвойствоФормата = "ТочкаНазначения";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_ТочкиРаздачи_ОтправкаПолучение";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Догрузить";
	НоваяСтрока.ИспользуетсяАлгоритмКонвертации = Истина;

	ПравилоКонвертации.ПоляПоиска.Добавить("Код");
КонецПроцедуры

Процедура ПКО_Справочник_Коробки_Отправка_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	ПолученныеДанные.ДополнительныеСвойства.Вставить("Догрузить", Истина);
КонецПроцедуры
#КонецОбласти
#Область Справочник_Организаторы_ОтправкаПолучение
Процедура ДобавитьПКО_Справочник_Организаторы_ОтправкаПолучение(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО = "Справочник_Организаторы_ОтправкаПолучение";
	ПравилоКонвертации.ОбъектДанных = Метаданные.Справочники.Организаторы;
	ПравилоКонвертации.ОбъектФормата = "Справочник.Организаторы";
	ПравилоКонвертации.ПравилоДляГруппыСправочника = Ложь;
	ПравилоКонвертации.ВариантИдентификации = "ПоУникальномуИдентификатору";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Код";
	НоваяСтрока.СвойствоФормата = "КодВПрограмме";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Наименование";
	НоваяСтрока.СвойствоФормата = "Наименование";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Участник";
	НоваяСтрока.СвойствоФормата = "Участник";
	НоваяСтрока.ПравилоКонвертацииСвойства = "Справочник_Участники_Отправка";

	ПравилоКонвертации.ПоляПоиска.Добавить("Код");
КонецПроцедуры
#КонецОбласти
#Область Справочник_ТочкиРаздачи_ОтправкаПолучение
Процедура ДобавитьПКО_Справочник_ТочкиРаздачи_ОтправкаПолучение(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО = "Справочник_ТочкиРаздачи_ОтправкаПолучение";
	ПравилоКонвертации.ОбъектДанных = Метаданные.Справочники.ТочкиРаздачи;
	ПравилоКонвертации.ОбъектФормата = "Справочник.ТочкиРаздачи";
	ПравилоКонвертации.ПравилоДляГруппыСправочника = Ложь;
	ПравилоКонвертации.ВариантИдентификации = "ПоПолямПоиска";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Код";
	НоваяСтрока.СвойствоФормата = "КодВПрограмме";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Наименование";
	НоваяСтрока.СвойствоФормата = "Наименование";

	ПравилоКонвертации.ПоляПоиска.Добавить("Код");
КонецПроцедуры
#КонецОбласти
#Область Справочник_Участники_Отправка
Процедура ДобавитьПКО_Справочник_Участники_Отправка(ПравилаКонвертации)

	ПравилоКонвертации = ОбменДаннымиXDTOСервер.ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО = "Справочник_Участники_Отправка";
	ПравилоКонвертации.ОбъектДанных = Метаданные.Справочники.Участники;
	ПравилоКонвертации.ОбъектФормата = "Справочник.Участники";
	ПравилоКонвертации.ПравилоДляГруппыСправочника = Ложь;
	ПравилоКонвертации.ВариантИдентификации = "ПоПолямПоиска";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Код";
	НоваяСтрока.СвойствоФормата = "КодВПрограмме";
	
	НоваяСтрока = ПравилоКонвертации.Свойства.Добавить();
	НоваяСтрока.СвойствоКонфигурации = "Наименование";
	НоваяСтрока.СвойствоФормата = "Наименование";

	ПравилоКонвертации.ПоляПоиска.Добавить("Код");
КонецПроцедуры
#КонецОбласти
#КонецОбласти

#КонецОбласти
#Область ПКПД
// Заполняет таблицу правил конвертации предопределенных данных.
//
// Параметры:
//  НаправлениеОбмена - строка ("Отправка" либо "Получение").
//  ПравилаКонвертации - таблица значений, в которую будут добавлены правила. 
Процедура ЗаполнитьПравилаКонвертацииПредопределенныхДанных(НаправлениеОбмена, ПравилаКонвертации) Экспорт

	// Перечисление_ВидыОперацийСчетКонтрагента_ОтпрПол.
	ПравилоКонвертации = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД = "Перечисление_ВидыОперацийСчетКонтрагента_ОтпрПол";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВидыОперацийСчетКонтрагента;
	ПравилоКонвертации.ТипXDTO = "ВидыОперацийСчетКонтрагента";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийСчетКонтрагента.СТранспортнойКомпанией, "СТранспортнойКомпанией");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийСчетКонтрагента.СЭкспедиторскойКомпанией, "СЭкспедиторскойКомпанией");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("СТранспортнойКомпанией", Перечисления.ВидыОперацийСчетКонтрагента.СТранспортнойКомпанией);
	ЗначенияДляПолучения.Вставить("СЭкспедиторскойКомпанией", Перечисления.ВидыОперацийСчетКонтрагента.СЭкспедиторскойКомпанией);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

КонецПроцедуры

#КонецОбласти
#Область Алгоритмы



#КонецОбласти
#Область Параметры
// Заполняет параметры конвертации.
//
// Параметры:
//  ПараметрыКонвертации - структура, в которую добавляются параметры конвертации.
Процедура ЗаполнитьПараметрыКонвертации(ПараметрыКонвертации) Экспорт
КонецПроцедуры

#КонецОбласти
#Область ОбщегоНазначения
// Процедура-обертка, выполняет запуск указанной в параметрах процедуры модуля менеджера обмена через формат.
//
// Параметры:
//  ИмяПроцедуры - строка.
//  СтруктураПараметров - структура, содержащая передаваемые параметры.
Процедура ВыполнитьПроцедуруМодуляМенеджера(ИмяПроцедуры, Параметры) Экспорт
	Если ИмяПроцедуры = "ПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Отправка_ПриОтправкеДанных" Тогда 
		ПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Отправка_ПриОтправкеДанных(
			Параметры.ДанныеИБ, Параметры.ДанныеXDTO, Параметры.КомпонентыОбмена, Параметры.СтекВыгрузки);
	ИначеЕсли ИмяПроцедуры = "ПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Отправка_ПриКонвертацииДанныхXDTO" Тогда 
		ПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Отправка_ПриКонвертацииДанныхXDTO(
			Параметры.ДанныеXDTO, Параметры.ПолученныеДанные, Параметры.КомпонентыОбмена);
	ИначеЕсли ИмяПроцедуры = "ПКО_Документ_СчетКонтрагента_Отправка_ПриОтправкеДанных" Тогда 
		ПКО_Документ_СчетКонтрагента_Отправка_ПриОтправкеДанных(
			Параметры.ДанныеИБ, Параметры.ДанныеXDTO, Параметры.КомпонентыОбмена, Параметры.СтекВыгрузки);
	ИначеЕсли ИмяПроцедуры = "ПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Получение_ПриКонвертацииДанныхXDTO" Тогда 
		ПКО_Документ_ЗаявкаВТранспортнуюКомпанию_Получение_ПриКонвертацииДанныхXDTO(
			Параметры.ДанныеXDTO, Параметры.ПолученныеДанные, Параметры.КомпонентыОбмена);
	ИначеЕсли ИмяПроцедуры = "ПКО_Документ_СчетКонтрагента_Получение_ПриКонвертацииДанныхXDTO" Тогда 
		ПКО_Документ_СчетКонтрагента_Получение_ПриКонвертацииДанныхXDTO(
			Параметры.ДанныеXDTO, Параметры.ПолученныеДанные, Параметры.КомпонентыОбмена);
	ИначеЕсли ИмяПроцедуры = "ПКО_Справочник_Коробки_Отправка_ПриКонвертацииДанныхXDTO" Тогда 
		ПКО_Справочник_Коробки_Отправка_ПриКонвертацииДанныхXDTO(
			Параметры.ДанныеXDTO, Параметры.ПолученныеДанные, Параметры.КомпонентыОбмена);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

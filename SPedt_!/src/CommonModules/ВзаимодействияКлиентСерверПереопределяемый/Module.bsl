
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Взаимодействия"
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// В данной функции при необходимости формируется массив строковых представлений предметов взаимодействий.
// Используется, если в конфигурации определен хотя бы один предмет взаимодействий.
//
// Возвращаемое значение:
//   Булево   - массив строковых представлений возможных предметов взаимодействий.
//
Функция МассивТиповПредметов() Экспорт
	
	 МассивТиповПредметов = Новый Массив;
	
	

	Возврат МассивТиповПредметов;
	
КонецФункции

// Дополняет описания возможных типов контактов.
// Используется, если в конфигурации определен хотя бы один тип контактов взаимодействий,
// помимо справочника Пользователи.
//
// Возвращаемые :
//   Массив  - массив структур, в котором описываются возможные типы контактов.
//              Каждая структура содержит описание одного типа контактов.   
//              Описание полей структуры см. в комментарии к функции.
//              ДобавитьЭлементМассиваОписанияВозможныхТиповКонтактов общего модуля.
//              ВзаимодействияКлиентСервер.
//
Процедура ДополнитьМассивОписанияВозможныхКонтактов(МассивВозможныеКонтакты) Экспорт

	

КонецПроцедуры


Процедура ПриОпределенииВозможныхПредметов(ТипыПредметов) Экспорт
	
	// _Демо начало примера
	ТипыПредметов.Добавить("ДокументСсылка.ВыдачаТранзита");
	// _Демо конец примера
	
КонецПроцедуры

// Задает описания возможных типов контактов взаимодействий, например: партнеры, контактные лица и т.п.
// Используется, если в конфигурации определен хотя бы один тип контактов взаимодействий,
// помимо справочника Пользователи. 
//
// Параметры:
//  ТипыКонтактов - Массив - содержит описания типов контактов взаимодействий (Структура) и их свойства:
//     * Тип                               - Тип    - тип ссылки контакта.
//     * Имя                               - Строка - имя типа контакта , как оно определено в метаданных.
//     * Представление                     - Строка - представление типа контакта для отображения пользователю.
//     * Иерархический                     - Булево - признак того, является ли справочник иерархическим.
//     * ЕстьВладелец                      - Булево - признак того, что у контакта есть владелец.
//     * ИмяВладельца                      - Строка - имя владельца контакта, как оно определено в метаданных.
//     * ИскатьПоДомену                    - Булево - признак того, что контакты данного типа будет подбираться
//                                                    по совпадению домена, а не по полному адресу электронной почты.
//     * Связь                             - Строка - описывает возможную связь данного контакта с другим контактом, в
//                                                    случае когда текущий контакт является реквизитом другого контакта.
//                                                    Описывается следующей строкой "ИмяТаблицы.ИмяРеквизита".
//     * ИмяРеквизитаПредставлениеКонтакта - Строка - имя реквизита контакта, из которого будет получено
//                                                    представление контакта. Если не указано, то используется
//                                                    стандартный реквизит Наименование.
//     * ВозможностьИнтерактивногоСоздания - Булево - признак возможности интерактивного создания контакта из
//                                                    документов - взаимодействий.
//     * ИмяФормыНовогоКонтакта            - Строка - полное имя формы для создания нового контакта.
//                                                    Например, "Справочник.Партнеры.Форма.ПомощникНового".
//                                                    Если не заполнено, то открывается форма элемента по умолчанию.
//
Процедура ПриОпределенииВозможныхКонтактов(ТипыКонтактов) Экспорт

//	// _Демо начало примера
//	Контакт = ВзаимодействияКлиентСервер.НовоеОписаниеКонтакта();
//	Контакт.Тип = Тип("СправочникСсылка._ДемоПартнеры");
//	Контакт.Имя = "_ДемоПартнеры";
//	Контакт.Представление = НСтр("ru = 'Демо: Партнеры'");
//	Контакт.Иерархический = Истина;
//	ТипыКонтактов.Добавить(Контакт);
//	
//	Контакт = ВзаимодействияКлиентСервер.НовоеОписаниеКонтакта();
//	Контакт.Тип = Тип("СправочникСсылка._ДемоКонтактныеЛицаПартнеров");
//	Контакт.Имя = "_ДемоКонтактныеЛицаПартнеров";
//	Контакт.Представление = НСтр("ru = 'Демо: Контактные лица партнеров'");
//	Контакт.ЕстьВладелец = Истина;
//	Контакт.ИмяВладельца = "_ДемоПартнеры";
//	ТипыКонтактов.Добавить(Контакт);
//	// _Демо конец примера

КонецПроцедуры



#КонецОбласти


#Область ИсторияДоставки

Функция ПолучитьИсториюДоставки(СписокПараметр, xml = Ложь) Экспорт
	Если ТипЗнч(СписокПараметр)	= Тип("СправочникСсылка.Мегаордера") Тогда
		СписокЗаказов = новый СписокЗначений;
		СписокЗаказов.Добавить(СписокПараметр);
	Иначе
		СписокЗаказов = СписокПараметр;
	КонецЕсли;	


	хмл_отправили	= ПолучитьХМЛ_ИсторияДоставки(СписокЗаказов);
	хмл_получили 	= ПолученныеДанные(хмл_отправили,Ложь);
	Если xml тогда	
		Возврат хмл_получили;
	КонецЕсли;
	стр_Ответ		= Новый структура;
	Разбор_ИсторияДоставки(стр_Ответ,хмл_получили);

	Возврат стр_Ответ.deliveryHistory;
КонецФункции	



Функция ПолучитьХМЛ_ИсторияДоставки(СписокЗаказов) 
	Тип_deliveryHistory			= ФабрикаXDTO.Тип("http://www.100sp.ru/out","distributors.deliveryHistory");
	Тип_distributors			= ФабрикаXDTO.Тип("http://www.100sp.ru/out","distributors");
	Тип_order					= ФабрикаXDTO.Тип("http://www.100sp.ru/out","order");
	
	Объект_deliveryHistory 		= ФабрикаXDTO.Создать(Тип_deliveryHistory);
	
	Для каждого заказ из СписокЗаказов Цикл
		Если заказ.Значение.типМегаордера = Перечисления.типМегаордера.Коробка Тогда
			Для каждого элем из заказ.Значение.Коробка.Состав Цикл
				Объект_deliveryHistory.order.Добавить(СтоСПОбмен_Общий.Получить_Order(элем));
			КонецЦикла;
		Иначе	
			Объект_deliveryHistory.order.Добавить(СтоСПОбмен_Общий.Получить_Order(заказ.Значение));
		КонецЕсли;	

	КонецЦикла;
	Объект_distributors						= ФабрикаXDTO.Создать(Тип_distributors);
	Объект_distributors.deliveryHistory 	= Объект_deliveryHistory;
	
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку(); 
	ФабрикаXDTO.ЗаписатьXML(Запись, Объект_distributors);
	ДанныеXML = Запись.Закрыть();
	ДанныеXML="<?xml version=""1.0"" encoding=""UTF-8""?> "+СтрЗаменить(ДанныеXML,"xmlns=""http://www.100sp.ru/out"" ","");
	Возврат ДанныеXML; 
	
КонецФункции



Функция Разбор_ИсторияДоставки(стр_Ответ,ПолученныеДанные) 
	пространствоИмен		= "http://www.100sp.ru/api/distributor/upload/back";
	ПолученныеДанные		= СтрЗаменить(ПолученныеДанные,"http://www.100sp.ru",пространствоИмен);
	
	авторизацияВыполнена	= ложь;
	Если ПолученныеДанные 	= "Не удалось соеденится с сайтом" Тогда Возврат авторизацияВыполнена; КонецЕсли;
	
	Тип_distributors		= ФабрикаXDTO.Тип(пространствоИмен, "distributors");
	
	ЧтениеXML 				= Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ПолученныеДанные);
 	Объект_distributors		= ФабрикаXDTO.ПрочитатьXML(ЧтениеXML,Тип_distributors);
	
	Если Объект_distributors.auth.result="ok" Тогда
		авторизацияВыполнена=истина;
	КонецЕсли;
	Если Объект_distributors.deliveryHistory=Неопределено Тогда
		Возврат авторизацияВыполнена;
	КонецЕсли;	
	
	массивТиповЗаказ = новый Массив;
	массивТиповЗаказ.Добавить("СправочникСсылка.Покупки");
	массивТиповЗаказ.Добавить("СправочникСсылка.Посылки");
	массивТиповЗаказ.Добавить("СправочникСсылка.Заказы");
	
	КвалификаторыДаты = Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя);
	                                                                
	тзРезультат = новый ТаблицаЗначений;
	тзРезультат.Колонки.Добавить("Заказ", 					новый ОписаниеТипов(массивТиповЗаказ));
	тзРезультат.Колонки.Добавить("Участник", 				новый ОписаниеТипов("СправочникСсылка.Участники"));
	тзРезультат.Колонки.Добавить("Дата1С", 					новый ОписаниеТипов("Дата",,,,,КвалификаторыДаты));
	тзРезультат.Колонки.Добавить("Дата100СП",				новый ОписаниеТипов("Дата",,,,,КвалификаторыДаты));
	тзРезультат.Колонки.Добавить("ПунктВыдачи",				новый ОписаниеТипов("СправочникСсылка.ТочкиРаздачи"));
	тзРезультат.Колонки.Добавить("ПунктВыдачиПредыдущий",	новый ОписаниеТипов("СправочникСсылка.ТочкиРаздачи"));
	тзРезультат.Колонки.Добавить("ПунктВыдачиСледующий",	новый ОписаниеТипов("СправочникСсылка.ТочкиРаздачи"));
	тзРезультат.Колонки.Добавить("ОргСбор",					новый ОписаниеТипов("булево"));
	тзРезультат.Колонки.Добавить("Негабарит",				новый ОписаниеТипов("булево"));
	тзРезультат.Колонки.Добавить("ОтдельнымМестом",			новый ОписаниеТипов("булево"));
	тзРезультат.Колонки.Добавить("Транзит",					новый ОписаниеТипов("булево"));
	тзРезультат.Колонки.Добавить("ТипОперации",				новый ОписаниеТипов("Строка"));
	тзРезультат.Колонки.Добавить("Сумма",					новый ОписаниеТипов("Число"));
	тзРезультат.Колонки.Добавить("Габарит",					новый ОписаниеТипов("Строка"));	
	тзРезультат.Колонки.Добавить("ГабаритКод",				новый ОписаниеТипов("Строка"));
	тзРезультат.Колонки.Добавить("Партия",					новый ОписаниеТипов("Строка"));
	тзРезультат.Колонки.Добавить("Коробка",					новый ОписаниеТипов("СправочникСсылка.Коробки"));


	
	
	Для каждого элемент_заказ из Объект_distributors.deliveryHistory.order Цикл
		Заказ		 = СП_РаботаСоСправочниками.ПолучитьЗаказПоXDTO(элемент_заказ, "orderType");
		Если элемент_заказ.orderType = "package" Тогда
			Участник = 	Заказ.Участник;
		Иначе	
			Участник = СП_РаботаСоСправочниками.ПолучитьУчастникаПо_Коду(элемент_заказ.uid); 
		КонецЕсли;	

		Для каждого элемИстории из элемент_заказ.item Цикл
			
			новаяСтрока = тзРезультат.Добавить();
			новаяСтрока.Заказ					= Заказ;
			новаяСтрока.Участник				= Участник;
			новаяСтрока.Дата1С					= СтоСПОбмен_Общий.ДатаИзСтроки(элемИстории.createdIn1c);
			новаяСтрока.Дата100СП				= СтоСПОбмен_Общий.ДатаИзСтроки(элемИстории.createdIn100sp);
			новаяСтрока.ПунктВыдачи				= СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду(элемИстории.distributorCode);
			новаяСтрока.ПунктВыдачиПредыдущий	= СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду(элемИстории.distributorPrevCode);
			новаяСтрока.ПунктВыдачиСледующий	= СП_РаботаСоСправочниками.ПолучитьПунктВыдачиПо_Коду(элемИстории.distributorNextCode);
			новаяСтрока.ОргСбор					= ?(элемИстории.hasDistributorFee 	= "1", истина,Ложь);	
			новаяСтрока.Негабарит				= ?(элемИстории.isBig 				= "1", истина,Ложь);
			новаяСтрока.ОтдельнымМестом			= ?(элемИстории.isFree 				= "1", истина,Ложь);
			новаяСтрока.Транзит					= ?(элемИстории.isTransit 			= "1", истина,Ложь);
			новаяСтрока.ТипОперации				= элемИстории.itemType;
			новаяСтрока.Сумма					= элемИстории.paidSum;
			новаяСтрока.Партия					= элемИстории.arrivalNum;
			новаяСтрока.Габарит					= элемИстории.sizedCategoryName;	
			новаяСтрока.ГабаритКод				= элемИстории.sizedCategoryNum;
			новаяСтрока.Коробка					= СП_РаботаСоСправочниками.ПолучитьКоробкуПо_Коду(элемИстории.stickerGroupId);;
		КонецЦикла;
	КонецЦикла;
	
	стр_Ответ.Вставить("result",			"ok");
	стр_Ответ.Вставить("deliveryHistory",	тзРезультат);
	
	Возврат авторизацияВыполнена;
КонецФункции





#КонецОбласти



Функция 	ПолученныеДанные(ДанныеXML,Выгрузка=Ложь) 
	Параметры    		= новый Структура;
	Параметры.Вставить("token",Константы.Токен.Получить());
	Параметры.Вставить("xml", ДанныеXML);
	
	АдресСкрипта 		= Константы.АдресЗагрузкиССайта.Получить();

	ПолученныйФайл		= СтоСПОбмен_Общий.ПолучитьПостЗапросом(Параметры,АдресСкрипта);
	Если ПолученныйФайл	= Неопределено Тогда Возврат "Не удалось соеденится с сайтом"; КонецЕсли; 
	ПолученныеДанные	= СтоСПОбмен_Общий.ФайлВСтроку(ПолученныйФайл);
	Возврат ПолученныеДанные;
КонецФункции

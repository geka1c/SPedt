Процедура СформироватьДвиженияРасходВыдачаТранзита(ДатаНачала) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыдачаТранзитаПокупки.Ссылка.Дата КАК Период,
		|	ВыдачаТранзитаПокупки.Покупка КАК Покупка,
		|	ВЫБОР
		|		КОГДА ВыдачаТранзитаПокупки.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВыдачаТранзита.НаНесколькоТочек)
		|			ТОГДА ВыдачаТранзитаПокупки.ТочкаНазначения
		|		ИНАЧЕ ВыдачаТранзитаПокупки.Ссылка.ТочкаНазначения
		|	КОНЕЦ КАК Участник,
		|	ВыдачаТранзитаПокупки.Габарит КАК Габарит,
		|	ВыдачаТранзитаПокупки.МестоХранения КАК МестоХранения,
		|	ЛОЖЬ КАК Списано,
		|	ВЫБОР
		|		КОГДА ВыдачаТранзитаПокупки.Ссылка.ТочкаНазначения.Код = ""0100""
		|			ТОГДА ВыдачаТранзитаПокупки.Количество
		|		ИНАЧЕ ВыдачаТранзитаПокупки.КоличествоМест
		|	КОНЕЦ КАК Количество,
		|	ВЫБОР
		|		КОГДА ВыдачаТранзитаПокупки.Ссылка.ОшибочныеЗаказы
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипРасхода.ОшибочныеЗаказы)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипРасхода.Транзит)
		|	КОНЕЦ КАК ТипРасхода,
		|	ВЫБОР
		|		КОГДА ВыдачаТранзитаПокупки.Ссылка.ОшибочныеЗаказы
		|			ТОГДА 0
		|		КОГДА ВыдачаТранзитаПокупки.Ссылка.ТочкаНазначения = &ЭтоКурьер
		|			ТОГДА ВыдачаТранзитаПокупки.СтоимостьХранения
		|		ИНАЧЕ ВыдачаТранзитаПокупки.СтоимостьИтого
		|	КОНЕЦ КАК Сумма,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ВыдачаТранзитаПокупки.Партия) = ТИП(Документ.ПоступлениеПристроя)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Пристрой,
		|	ВыдачаТранзитаПокупки.Партия КАК Партия,
		|	ВыдачаТранзитаПокупки.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	Документ.ВыдачаТранзита.Покупки КАК ВыдачаТранзитаПокупки
		|ГДЕ
		|	ВыдачаТранзитаПокупки.Подбор
		|	И НЕ ВыдачаТранзитаПокупки.Ссылка.ПоОбмену
		|	И ВыдачаТранзитаПокупки.Ссылка.Дата >= &ДатаНачала
		|	И ВыдачаТранзитаПокупки.Ссылка.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Период КАК Период,
		|	вт.Покупка КАК Покупка,
		|	вт.Участник КАК Участник,
		|	вт.Габарит КАК Габарит,
		|	вт.МестоХранения КАК МестоХранения,
		|	вт.Списано КАК Списано,
		|	вт.Количество КАК Количество,
		|	вт.ТипРасхода КАК ТипРасхода,
		|	вт.Сумма КАК Сумма,
		|	вт.Пристрой КАК Пристрой,
		|	вт.Партия КАК Партия,
		|	вт.Ссылка КАК Ссылка
		|ИЗ
		|	вт КАК вт
		|ИТОГИ ПО
		|	Ссылка";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ЭтоКурьер", Справочники.ТочкиРаздачи.НайтиПоКоду("100"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	
	ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ДокументыСОшибками = новый Массив;	
	Пока ВыборкаСсылка.Следующий() Цикл
		// Вставить обработку выборки ВыборкаСсылка
		
		Приходная = ВыборкаСсылка.Ссылка;
		
		ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();
		
		нз = РегистрыНакопления.Расход.СоздатьНаборЗаписей();
		нз.Отбор.Регистратор.Значение = Приходная;
		
		нз.Записывать = Истина;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтрокаНЗ =  нз.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНЗ,ВыборкаДетальныеЗаписи);
		КонецЦикла;
		Попытка
		    нз.Записать();
		Исключение
			ДокументыСОшибками.Добавить(Приходная);
		КонецПопытки;
	КонецЦикла;

	Для каждого элем из ДокументыСОшибками Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(элем);
		
	КонецЦикла;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры	


Процедура ПереСинхронизироватьПоступления(ДатаНачала, ДатаОкончания) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеЗаказовСайт.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрСведений.ДанныеЗаказовСайт КАК ДанныеЗаказовСайт
		|ГДЕ
		//|	(ТИПЗНАЧЕНИЯ(ДанныеЗаказовСайт.Заказ) = ТИП(Справочник.Посылки)
		//|				И ДанныеЗаказовСайт.АктуальнаяПерваяТочка = ЗНАЧЕНИЕ(Справочник.ТочкиРаздачи.ПустаяСсылка)
		|			 ДанныеЗаказовСайт.КоличествоВсего = 0  и
		|	 ДанныеЗаказовСайт.Регистратор.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ТИПЗНАЧЕНИЯ(ДанныеЗаказовСайт.Регистратор) = ТИП(Документ.СинхронизацияПоступлений)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеЗаказовСайт.Регистратор
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДанныеЗаказовСайт.Регистратор.Дата";
	
	Запрос.УстановитьПараметр("ДатаНачала", 	ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 	ДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Синзронизация = Выборка.Регистратор.ПолучитьОбъект();
		Если Синзронизация.Данные.Количество()>0 Тогда
			Синзронизация.ВыгрузитьНаСайт();
			Синзронизация.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;		
	КонецЦикла;
	
КонецПроцедуры	
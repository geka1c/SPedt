//Процедура Тест() Экспорт
//	//ДанныеОДиске();
//	//МетаинформацияОФайлеПапке(новый Структура("path", "disk:/FreeStorage"))
//	//ПлоскийСписокВсехФайлов();
//	
//	параметры = новый Структура;
//	параметры.Вставить("ПутьКФайлу",	"/FreeStorage/032020");
//	параметры.Вставить("ТелоФайла",		"жрпжукоб псупшрсуцтзкпшгруцзсрячшмгрвыж");
//	ВыгрузитьНаДиск(Параметры);
//	
//	
//	
//КонецПроцедуры

Функция СоздатьКаталогНаДиске(Путь) экспорт
	ПутьККаталогу 	= СтрЗаменить(Путь,"/","%2F");
	
	Результат 		= МетаинформацияОФайлеПапке(новый Структура("path", "disk:"+ПутьККаталогу));

	Если Результат.КодСостояния <> 200 Тогда
		параметрыURL = Новый Структура;
		параметрыURL.Вставить("path", ПутьККаталогу);

		сервер 		= "cloud-api.yandex.net";
		скрипт 		= ПолучитьСкриптСПараметрами("/v1/disk/resources", Новый Структура("path", ПутьККаталогу));

		Параметры = Новый Структура;
		Параметры.Вставить("Сервер", сервер);
		Параметры.Вставить("скрипт", скрипт);
		Возврат ВыполнитьПУТЗапрос(Параметры);				
	КонецЕсли;	
	Возврат Результат
КонецФункции	

Функция ВыгрузитьНаДиск(Параметры, принудительно = ложь) экспорт
	ПутьКФайлу	= СтрЗаменить(Параметры.ПутьКФайлу,"/","%2F");
	
	Результат 	= МетаинформацияОФайлеПапке(новый Структура("path", "disk:"+ПутьКФайлу));
	
	Если Результат.КодСостояния <> 200 или принудительно Тогда
		параметрыURL = Новый Структура;
		параметрыURL.Вставить("path", 		ПутьКФайлу);
		параметрыURL.Вставить("overwrite", 	"true");
	//	параметрыURL.Вставить("fields",	"true");

		Результат 	= ЗапросURLДляЗагрузки(параметрыURL);
		позиция 	= СтрНайти(Результат.Данные.href, "/upload-target");
		длина   	= СтрДлина(Результат.Данные.href);
		сервер 		= СтрЗаменить(Лев(Результат.Данные.href, позиция - 5), "https://", "");
		скрипт 		= Прав(Результат.Данные.href, длина - позиция + 1);
		Параметры.Вставить("Сервер", сервер);
		Параметры.Вставить("скрипт", скрипт);
		Возврат ВыполнитьПУТЗапрос(Параметры);
	КонецЕсли;
	Возврат Результат;
КонецФункции

функция ЗапросURLДляЗагрузки(Параметры)
	
//	path 		- путь, по которому следует загрузить файл
//	overwrite 	- признак перезаписи
//	fields 		- свойства, которые нужно включить в ответ

	скрипт 		= ПолучитьСкриптСПараметрами("/v1/disk/resources/upload", параметры);
	
	параметры 	= Новый Структура("скрипт", скрипт);
	Результат 	= ВыполнитьЗапрос(Параметры);
	возврат Результат;	
КонецФункции	

Функция 	ДанныеОДиске() Экспорт
	скрипт 		= "/v1/disk/";
	параметры 	= Новый Структура("скрипт", скрипт);
	Результат 	= ВыполнитьЗапрос(Параметры);
	Возврат Результат;
КонецФункции

Функция 	МетаинформацияОФайлеПапке(Параметры) экспорт
	
	скрипт = "/v1/disk/resources";
	скрипт = скрипт + "?" + "path=" + Параметры.path;
	
	имяПараметра = "fields";
	Если параметры.Свойство(имяПараметра) Тогда
		скрипт = скрипт + "&" + параметры[имяПараметра]; 
	КонецЕсли;	

	имяПараметра = "limit";
	Если параметры.Свойство(имяПараметра) Тогда
		скрипт = скрипт + "&" + параметры[имяПараметра]; 
	КонецЕсли;	
	имяПараметра = "offset";
	Если параметры.Свойство(имяПараметра) Тогда
		скрипт = скрипт + "&" + параметры[имяПараметра]; 
	КонецЕсли;	
	имяПараметра = "preview_crop";
	Если параметры.Свойство(имяПараметра) Тогда
		скрипт = скрипт + "&" + параметры[имяПараметра]; 
	КонецЕсли;	
	имяПараметра = "preview_size";
	Если параметры.Свойство(имяПараметра) Тогда
		скрипт = скрипт + "&" + параметры[имяПараметра]; 
	КонецЕсли;	
	имяПараметра = "sort";
	Если параметры.Свойство(имяПараметра) Тогда
		скрипт = скрипт + "&" + параметры[имяПараметра]; 
	КонецЕсли;	


	
	параметры = Новый Структура("скрипт", скрипт);
	Результат = ВыполнитьЗапрос(Параметры);
	Возврат Результат;
КонецФункции


Функция 	ПлоскийСписокВсехФайлов(Параметры = неопределено)

	// limit 		- количество файлов в списке
	// media_type 	- тип запрашиваемых файлов
	// offset		- смещение относительно начала списка
	// fields		- свойства, которые нужно включить в ответ
	// preview_crop - признак обрезки превью
	// preview_size - размер превью
	
	

	скрипт = ПолучитьСкриптСПараметрами("/v1/disk/resources/files", параметры);
	
	параметры = Новый Структура("скрипт", скрипт);
	Результат = ВыполнитьЗапрос(Параметры);
	Возврат Результат;
КонецФункции

Функция 	ВыполнитьЗапрос(Параметры) 
	Токен =  Токен();//"AgAAAAA-MkdCAADLW1WmbGYjNEwohzZGkw--t9Q";
	Соединение 	= Новый HTTPСоединение("cloud-api.yandex.net", 443, , , , , Новый ЗащищенноеСоединениеOpenSSL);
	Заголовки 	= Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	Заголовки.Вставить("Authorization", "OAuth " + Токен);

	Запрос 		= Новый HTTPЗапрос(Параметры.скрипт, Заголовки);
	Ответ 		= Соединение.Получить(Запрос);

	Джейсон 	= Новый ЧтениеJSON;
	Джейсон.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
	Данные 		= ПрочитатьJSON(Джейсон);

	Возврат Новый структура("КодСостояния, Данные", Ответ.КодСостояния, Данные);
КонецФункции

Функция ВыполнитьПУТЗапрос(Параметры) Экспорт 
	Токен =  Токен();//"AgAAAAA-MkdCAADLW1WmbGYjNEwohzZGkw--t9Q";
   	ЗаголовокHTTP 		= Новый Соответствие();
    СтрокаСоединения 	= СтрокаСоединенияИнформационнойБазы();
    СерверИсточник 		= НСтр(СтрокаСоединения, "Srvr") + НСтр(СтрокаСоединения, "Ref");

    ЗаголовокHTTP.Вставить("Referer", СерверИсточник);
    ЗаголовокHTTP.Вставить("Content-Type", "application/json; charset=utf-8");
    
    ЗаголовокHTTP.Вставить("Authorization", "OAuth " + Токен);
	
	ССЛ			= Новый ЗащищенноеСоединениеOpenSSL;
	НТТР 		= Новый HTTPСоединение(параметры.сервер,443,,,,,ССЛ);
	
	Запрос		= новый HTTPЗапрос(Параметры.скрипт, ЗаголовокHTTP);
	Если Параметры.Свойство("ТелоФайла") Тогда
		Запрос.УстановитьТелоИзСтроки(Параметры.ТелоФайла);
	ИначеЕсли Параметры.Свойство("ДвоичныеДанные") Тогда	
		Запрос.УстановитьТелоИзДвоичныхДанных(ПолучитьИзВременногоХранилища(Параметры.ДвоичныеДанные));
	КонецЕсли;
	ответ 		= НТТР.Записать(Запрос);
	Попытка
		Джейсон 	= Новый ЧтениеJSON;
		Джейсон.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
		Данные 		= ПрочитатьJSON(Джейсон);
	Исключение
		Данные 		= Ответ.ПолучитьТелоКакСтроку();
	КонецПопытки;

	Возврат Новый структура("КодСостояния, Данные", Ответ.КодСостояния, Данные);	
КонецФункции


функция Токен()
	Возврат Константы.ЯндексДискТокен.Получить();
	
КонецФункции	
	

функция 	ПолучитьСкриптСПараметрами(скрипт, параметры)
	если параметры = неопределено Тогда возврат скрипт КонецЕсли;
	певый = истина;
	
	строкаПараметров = "";
	для каждого элем из Параметры Цикл
		Если параметры.Свойство(элем.Ключ) Тогда
			Если певый = истина Тогда
				строкаПараметров = строкаПараметров + "?" + элем.Ключ + "=" + Параметры[элем.Ключ];
				певый = ложь;
			Иначе				
				строкаПараметров = строкаПараметров + "&" + элем.Ключ + "=" + Параметры[элем.Ключ];
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	скрипт = скрипт + СтрЗаменить(строкаПараметров, "/" , "%2F");
	Возврат скрипт;			
КонецФункции	

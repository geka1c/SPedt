#Область ПрограмммныйИнтерфейс


Функция ПолучитьАдресаНаТЗЗаказов(ТЗ) Экспорт
	ОбновитьПолученныеАдреса(ТЗ);
	
	тзРезультат=ПолучитьАдресаИзРегистра(ТЗ);
	тзБезАдреса=тзРезультат.Скопировать(Новый Структура("Адрес",null),"Участник,Покупка");
	Если тзБезАдреса.Количество()>0 Тогда
		ПоучитьАдресаСсайта(тзБезАдреса);	
		тзРезультат=ПолучитьАдресаИзРегистра(ТЗ);
	КонецЕсли;
	Возврат тзРезультат;
КонецФункции


//Получает Адреса На Все Одиночные Заказы Участника на Точку 
Функция ПолучитьТЗАдресаЗаказов(Участник,Точка) Экспорт 
	запрос=Новый Запрос;
	запрос.Текст="ВЫБРАТЬ
	             |	ТранзитОстатки.Участник КАК Участник,
	             |	ТранзитОстатки.ПокупкаСсылка КАК Покупка,
	             |	ТранзитОстатки.МестоХранения КАК МестоХранения,
	             |	ТранзитОстатки.Габарит КАК Габарит,
	             |	ТранзитОстатки.Партия КАК Партия,
	             |	ТранзитОстатки.КоличествоОстаток КАК Количество,
	             |	ТранзитОстатки.Точка КАК Точка,
	             |	ВЫБОР
	             |		КОГДА ТранзитОстатки.Точка = &Точка
	             |			ТОГДА ЛОЖЬ
	             |		ИНАЧЕ ИСТИНА
	             |	КОНЕЦ КАК ДругойПВ,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Адрес, """") КАК Адрес,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.ФИО, """") КАК ФИО,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Город, """") КАК Город,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Регион, """") КАК Регион,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Телефон, """") КАК Телефон,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Тип, """") КАК Тип,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Индекс, """") КАК Индекс,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.РезультатОбмена, """") КАК РезультатОбмена,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.email, """") КАК email,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.КодПВЗ, """") КАК КодПВЗ,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.cityCode, 0) КАК cityCode,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Улица, """") КАК Улица,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Дом, """") КАК Дом,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Квартира, """") КАК Квартира
	             |ПОМЕСТИТЬ Пред
	             |ИЗ
	             |	РегистрНакопления.Транзит.Остатки(
	             |			,
	             |			Участник = &Участник
	             |				И Точка.ТранспортнаяКомпания
	             |				И ТИПЗНАЧЕНИЯ(ПокупкаСсылка) <> ТИП(Справочник.Коробки)) КАК ТранзитОстатки
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АдресаЗаказов.СрезПоследних(, Участник = &Участник) КАК АдресаЗаказовСрезПоследних
	             |		ПО ТранзитОстатки.ПокупкаСсылка = АдресаЗаказовСрезПоследних.Покупка
	             |ГДЕ
	             |	ТранзитОстатки.КоличествоОстаток > 0
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	КоробкиСостав.Покупка КАК Покупка,
	             |	КоробкиСостав.Участник КАК Участник
	             |ПОМЕСТИТЬ ЗаказыИзГрупп
	             |ИЗ
	             |	Справочник.Коробки.Состав КАК КоробкиСостав
	             |ГДЕ
	             |	КоробкиСостав.Ссылка.ВидСтикера = ЗНАЧЕНИЕ(Перечисление.ВидыСтикеров.ГруппаДоставки)
	             |	И КоробкиСостав.Ссылка.ОтправлениеТранзита = ЗНАЧЕНИЕ(Документ.ОтправлениеТранзита.ПустаяСсылка)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	КоробкиСостав.Покупка,
	             |	КоробкиСостав.Участник
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	Пред.Участник КАК Участник,
	             |	Пред.Покупка КАК Покупка,
	             |	Пред.МестоХранения КАК МестоХранения,
	             |	Пред.Габарит КАК Габарит,
	             |	Пред.Партия КАК Партия,
	             |	Пред.Количество КАК Количество,
	             |	Пред.Точка КАК Точка,
	             |	Пред.ДругойПВ КАК ДругойПВ,
	             |	Пред.Адрес КАК Адрес,
	             |	Пред.ФИО КАК ФИО,
	             |	Пред.Город КАК Город,
	             |	Пред.Регион КАК Регион,
	             |	Пред.Телефон КАК Телефон,
	             |	Пред.Тип КАК Тип,
	             |	Пред.Индекс КАК Индекс,
	             |	Пред.РезультатОбмена КАК РезультатОбмена,
	             |	Пред.email КАК email,
	             |	Пред.КодПВЗ КАК КодПВЗ,
	             |	Пред.cityCode КАК cityCode,
	             |	Пред.Улица КАК Улица,
	             |	Пред.Дом КАК Дом,
	             |	Пред.Квартира КАК Квартира
	             |ИЗ
	             |	Пред КАК Пред
	             |ГДЕ
	             |	НЕ (Пред.Участник, Пред.Покупка) В
	             |				(ВЫБРАТЬ
	             |					ЗаказыИзГрупп.Участник КАК Участник,
	             |					ЗаказыИзГрупп.Покупка КАК Покупка
	             |				ИЗ
	             |					ЗаказыИзГрупп КАК ЗаказыИзГрупп)";
	
	запрос.Параметры.Вставить("Участник",Участник);
	запрос.Параметры.Вставить("Точка",Точка);
	результатзапроса=Запрос.Выполнить();
	тз=результатзапроса.Выгрузить();
	Возврат ТЗ;	
КонецФункции	


//Получает Адрес Заказа
Функция Получить_АдресЗаказа(Участник,Покупка) Экспорт 
	ТЗ=Новый ТаблицаЗначений;

	от_Покупки = Новый ОписаниеТипов("Справочник.Покупки, Справочник.Заказы, , Справочник.Посылки");
	ТЗ.Колонки.Добавить("Покупка",от_Покупки);
	ТЗ.Колонки.Добавить("Участник",Новый ОписаниеТипов("Справочник.Участники"));
	стрТЗ=ТЗ.Добавить();
	стрТЗ.Участник=Участник;
	стрТЗ.Покупка=Покупка;
	
	Возврат ПолучитьАдресаНаТЗЗаказов(ТЗ)

КонецФункции	



//Получает Сформированные но не отправленные Заказы Указанной ТК 
Функция Получить_НеОтправленныеЗаказы(Точка) Экспорт
	зАПРОС=НОВЫЙ ЗАПРОС;
	
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ТранзитОстатки.Габарит КАК Габарит,
	|	ТранзитОстатки.МестоХранения КАК МестоХранения,
	|	ТранзитОстатки.Партия КАК Партия,
	|	ТранзитОстатки.ПокупкаСсылка КАК Покупка,
	|	ТранзитОстатки.Партия.Участник КАК УчастникЗаказа,
	|	ТранзитОстатки.Партия.Город КАК Город,
	|	ТранзитОстатки.Точка КАК Точка,
	|	ТранзитОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ТранзитОстатки.Участник КАК Участник,
	|	ТранзитОстатки.Партия.ГородОтправитель КАК ГородОтправитель
	|ИЗ
	|	РегистрНакопления.Транзит.Остатки(
	|			,
	|			ТИПЗНАЧЕНИЯ(ПокупкаСсылка) = ТИП(Справочник.Коробки)
	|				И ПокупкаСсылка.ВидСтикера = ЗНАЧЕНИЕ(Перечисление.ВидыСтикеров.ЗаказТК)
	|				И Точка = &Точка) КАК ТранзитОстатки
	|ГДЕ
	|	ТранзитОстатки.КоличествоОстаток > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Габарит" ;
	
	
	запрос.Параметры.Вставить("Точка",Точка);
	результатзапроса=Запрос.Выполнить();
	тз=результатзапроса.Выгрузить();
	Возврат ТЗ;	
	
КонецФункции	

#КонецОбласти

//Если адреса уже получены , то перполучаем, если не получены то получаем
Процедура ОбновитьПолученныеАдреса(ТЗ)
	запрос=Новый Запрос;
	МВТ=новый МенеджерВременныхТаблиц;
	запрос.МенеджерВременныхТаблиц=МВТ;
	запрос.Текст="ВЫБРАТЬ
	             |	УП.Участник КАК Участник,
	             |	УП.КодЗаказа КАК КодЗаказа,
	             |	УП.Покупка КАК Покупка
	             |ПОМЕСТИТЬ Внешняя
	             |ИЗ
	             |	&УП КАК УП
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	Внешняя.Участник КАК Участник,
	             |	Внешняя.Покупка КАК Покупка,
	             |	Внешняя.КодЗаказа КАК КодЗаказа,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Регистратор, ЗНАЧЕНИЕ(Документ.ЗапросАдресов.ПустаяСсылка)) КАК Регистратор
	             |ПОМЕСТИТЬ Пред
	             |ИЗ
	             |	Внешняя КАК Внешняя
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АдресаЗаказов.СрезПоследних(, ) КАК АдресаЗаказовСрезПоследних
	             |		ПО Внешняя.Участник = АдресаЗаказовСрезПоследних.Участник
	             |			И (ВЫБОР
	             |				КОГДА 	Внешняя.КодЗаказа <> """"
	             |					ТОГДА Внешняя.КодЗаказа = АдресаЗаказовСрезПоследних.КодЗаказа
	             |				ИНАЧЕ ИСТИНА
	             |			КОНЕЦ)
	             |			И Внешняя.Покупка = АдресаЗаказовСрезПоследних.Покупка";
	запрос.Параметры.Вставить("УП",ТЗ);
	результатзапроса=Запрос.Выполнить();
				 
				 
	запрос=Новый Запрос;
	запрос.МенеджерВременныхТаблиц=МВТ;
	запрос.Текст="ВЫБРАТЬ
	             |	Пред.Участник КАК Участник,
				 |	Пред.КодЗаказа КАК КодЗаказа,
	             |	Пред.Покупка КАК Покупка
	             |ИЗ
	             |	Пред КАК Пред
	             |ГДЕ
	             |	Пред.Регистратор = ЗНАЧЕНИЕ(Документ.ЗапросАдресов.ПустаяСсылка)
	             |
	             |СГРУППИРОВАТЬ ПО
				 |	Пред.КодЗаказа,
	             |	Пред.Участник,
	             |	Пред.Покупка";
	результат_НетДокументов=Запрос.Выполнить();
	ТЗ_НетДокументов=результат_НетДокументов.Выгрузить();
	
	ПоучитьАдресаСсайта(ТЗ_НетДокументов); 
	
	запрос=Новый Запрос;
	запрос.МенеджерВременныхТаблиц=МВТ;
	запрос.Текст="ВЫБРАТЬ
	             |	Пред.Регистратор КАК Регистратор
	             |ИЗ
	             |	Пред КАК Пред
	             |ГДЕ
	             |	Пред.Регистратор <> ЗНАЧЕНИЕ(Документ.ЗапросАдресов.ПустаяСсылка)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	Пред.Регистратор";
	результат_ЕстьДокументы=Запрос.Выполнить();
	Выборка=результат_ЕстьДокументы.Выбрать();
	Пока Выборка.Следующий() Цикл
		док_ЗапросАдресов=Выборка.Регистратор.ПолучитьОбъект();
		док_ЗапросАдресов.ПолучитьАдреса();
		Попытка
			док_ЗапросАдресов.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
		КонецПопытки;
	КонецЦикла	
КонецПроцедуры	


Процедура ПоучитьАдресаСсайта(тз) 
	Если ТЗ.Количество()=0 Тогда Возврат КонецЕсли;
	//тз.Свернуть("Покупка,Участник");
	ДокОб=документы.ЗапросАдресов.СоздатьДокумент();	
	ДокОб.Заказы.Загрузить(тз);
	ДокОб.Дата=ТекущаяДата();
	ДокОб.ПолучитьАдреса();
	Попытка
	    ДокОб.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
	КонецПопытки;
КонецПроцедуры	

Функция ПолучитьАдресаИзРегистра(ТЗ)
	запрос=Новый Запрос;
	запрос.Текст="ВЫБРАТЬ
	             |	УП.Участник КАК Участник,
				 |	УП.КодЗаказа КАК КодЗаказа,
	             |	УП.Покупка КАК Покупка
	             |ПОМЕСТИТЬ Внешняя
	             |ИЗ
	             |	&УП КАК УП
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	АдресаЗаказовСрезПоследних.Адрес КАК Адрес,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.ФИО, """") КАК ФИО,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Город, """") КАК Город,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Регион, """") КАК Регион,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Телефон, """") КАК Телефон,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Тип, """") КАК Тип,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Индекс, """") КАК Индекс,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.РезультатОбмена, """") КАК РезультатОбмена,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.email, """") КАК email,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.КодПВЗ, """") КАК КодПВЗ,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.cityCode, 0) КАК cityCode,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Улица, """") КАК Улица,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Дом, """") КАК Дом,
	             |	ЕСТЬNULL(АдресаЗаказовСрезПоследних.Квартира, """") КАК Квартира,
	             |	Внешняя.Участник КАК Участник,
	             |	Внешняя.Покупка КАК Покупка
	             |ИЗ
	             |	Внешняя КАК Внешняя
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АдресаЗаказов.СрезПоследних(
	             |				,
	             |				) КАК АдресаЗаказовСрезПоследних
	             |		ПО Внешняя.Участник = АдресаЗаказовСрезПоследних.Участник
	             |			И (ВЫБОР
	             |				КОГДА ТИПЗНАЧЕНИЯ(Внешняя.КодЗаказа) = ТИП(Справочник.Посылки)
	             |					ТОГДА Внешняя.КодЗаказа = АдресаЗаказовСрезПоследних.КодЗаказа
	             |				ИНАЧЕ ИСТИНА
	             |			КОНЕЦ)
	             |			И Внешняя.Покупка = АдресаЗаказовСрезПоследних.Покупка";
	запрос.Параметры.Вставить("УП",ТЗ);
	результатзапроса=Запрос.Выполнить();
	тзРезультат=результатзапроса.Выгрузить();
	//тзРезультат.Свернуть("Участник, Покупка, Адрес, ФИО, Город, Регион, Телефон,Тип, Индекс, РезультатОбмена, email, КодПВЗ, cityCode, Улица, Дом, Квартира");
	Возврат тзРезультат;
КОнецФункции	


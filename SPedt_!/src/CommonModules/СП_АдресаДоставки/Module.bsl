Функция ТекстЗапроса_ПолучитьАдресДоставки_Api(КодЗаказа)	
	 ЗаписьXML=новый ЗаписьXML;
	 ЗаписьXML.УстановитьСтроку("UTF-8");
	 ЗаписьXML.ЗаписатьНачалоЭлемента("distributors");
	 
	 ЗаписьXML.ЗаписатьАтрибут("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
	 ЗаписьXML.ЗаписатьАтрибут("xmlns:xsd","http://www.w3.org/2001/XMLSchema");
	 	
	 
		 ЗаписьXML.ЗаписатьНачалоЭлемента("deliveryDetails");
			 ЗаписьXML.ЗаписатьНачалоЭлемента("sticker");
				 ЗаписьXML.ЗаписатьНачалоЭлемента("orderId");
				 	ЗаписьXML.ЗаписатьТекст(КодЗаказа);
				 ЗаписьXML.ЗаписатьКонецЭлемента();
				 ЗаписьXML.ЗаписатьНачалоЭлемента("orderType");
				 	ЗаписьXML.ЗаписатьТекст("sp");
				 ЗаписьXML.ЗаписатьКонецЭлемента();				 
			 ЗаписьXML.ЗаписатьКонецЭлемента();
		 ЗаписьXML.ЗаписатьКонецЭлемента();		 
		 

	 ЗаписьXML.ЗаписатьКонецЭлемента();	
	ТекстЗапроса = ЗаписьXML.Закрыть();	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"xmlns=""http://www.100sp.ru/XMLSchema-instance"" ","");
	Возврат ТекстЗапроса;	
КонецФункции	


Функция выполнитьЗапрос(КодЗаказа, ДокументПротокола) Экспорт 
	Отправили							= 	ТекстЗапроса_ПолучитьАдресДоставки_Api(КодЗаказа);
	
	СтрокаПротокола						= 	новый Структура ("ДатаНачала, ДатаОкончания,Отправили, Результат, ПолученныеДанные, Описание");
	СтрокаПротокола.Описание			= 	"Получение адреса";
	СтрокаПротокола.Отправили			= 	Отправили;
	СтрокаПротокола.ДатаНачала			=	ТекущаяДата();
	
	АдресСкрипта 		= Константы.АдресЗагрузкиССайта.Получить();
	Параметры    		= новый Структура;
	Параметры.Вставить("token",	Константы.Токен.Получить());
	Параметры.Вставить("xml", 	Отправили);
	
	ПолученныйФайл		= СтоСПОбмен_Общий.ПолучитьПостЗапросом(Параметры,АдресСкрипта);
	
	Если ПолученныйФайл	= Неопределено Тогда 		
		СтрокаПротокола.Результат		= Ложь; 
		СтрокаПротокола.ДатаОкончания	= ТекущаяДата();
		Возврат СтрокаПротокола;	
	КонецЕсли; 
	Если аспПроцедурыОбменаДанными.АвторизацияВыполнена(ПолученныйФайл) Тогда
		СтрокаПротокола.Результат= Истина;
		СтрокаПротокола.ПолученныеДанные	=  СтоСПОбмен_Общий.ФайлВСтроку(ПолученныйФайл);
	Иначе
		СтрокаПротокола.ПолученныеДанные	= "Авторизация не выполнена" + СтоСПОбмен_Общий.ФайлВСтроку(ПолученныйФайл);
	КонецЕсли;	
	СтрокаПротокола.ДатаОкончания			= ТекущаяДата();
	Если ЗначениеЗаполнено(ДокументПротокола) Тогда
		СтоСПОбмен_Выгрузка100сп.СохранитьПротоколОбмена(СтрокаПротокола, ДокументПротокола);
	КонецЕсли;
	
	СтрокаПротокола.Вставить("СтруктураАдреса", РазложитьАдресВСтруктуру(СтрокаПротокола.ПолученныеДанные));
	Возврат СтрокаПротокола;	
КонецФункции	


Функция РазложитьАдресВСтруктуру(ПолученныеДанные)
	тз	=	аспПроцедурыОбменаДанными.ОбработатьАдресаЗаказовССайта(ПолученныеДанные);
	стр = тз[0];
	СтруктураАдреса = Новый Структура("Адрес, Город,Регион, Телефон, ФИО, Тип, Индекс, КодПВЗ, email, cityCode, Улица, Дом, Квартира, КомментарийДоставки");

	СтруктураАдреса.Вставить("РезультатОбмена", стр.result)	;
	Если стр.result="ok" Тогда
		Если СокрЛП(стр.address)="" Тогда
				СтруктураАдреса.Адрес	="ул. " +стр.address_street+", д. "+стр.address_building+", кв "+стр.address_apartment;	
		Иначе	
				СтруктураАдреса.Адрес	=стр.address;	
		КонецЕсли;
	Иначе
		СтруктураАдреса.Адрес	=стр.message;	
	КонецЕсли;
	СтруктураАдреса.город		=стр.city;
	СтруктураАдреса.Регион		=стр.region;
	СтруктураАдреса.Телефон		=стр.phone;
	СтруктураАдреса.ФИО			=стр.recipient_name;
	СтруктураАдреса.Тип			=стр.type;
	СтруктураАдреса.Индекс		=стр.zipcode;
	СтруктураАдреса.КодПВЗ  	=стр.pvz_code;
	СтруктураАдреса.email   	=стр.email;
	СтруктураАдреса.cityCode	=стр.city_code;
	СтруктураАдреса.Улица   	=стр.address_street;
	СтруктураАдреса.Дом     	=стр.address_building;
	СтруктураАдреса.Квартира	=стр.address_apartment;	
	СтруктураАдреса.КомментарийДоставки	= стр.address_comment;
	
	Возврат СтруктураАдреса
	
КонецФункции	 

